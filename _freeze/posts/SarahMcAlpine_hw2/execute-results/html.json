{
  "hash": "43de79e65924f33eb70f8bd34cb70681",
  "result": {
    "markdown": "---\ntitle: \"Sarah McAlpine - Challenge 2\"\nauthor: \"Sarah McAlpine\"\ndesription: \"Reading in Data and Summarizing Its Groups\"\ndate: \"09/20/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - sarahmcalpine\n  - cattle\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidyr)\nlibrary(summarytools)\nlibrary(readr)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to read in a data set, and describe the data using both words and any supporting information (e.g., tables, etc.) Next, provide summary statistics for different interesting groups within the data, and interpret those statistics.\n\n## Reading in the Data\nI will read in the FAO cattle data for my first attempt and may return to this to do another.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#read in the data. Use read_csv over read.csv\ncattle<- read_csv(\"_data/FAOSTAT_cattle_dairy.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 36449 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncolnames(cattle)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n```\n:::\n\n```{.r .cell-code}\n#preview data without the 100% values\nhead(select(cattle, Area, Element, Year, Unit, Value))%>%\n  group_by(Area) %>%\nslice(1:10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n# Groups:   Area [1]\n  Area        Element       Year Unit    Value\n  <chr>       <chr>        <dbl> <chr>   <dbl>\n1 Afghanistan Milk Animals  1961 Head   700000\n2 Afghanistan Yield         1961 hg/An    5000\n3 Afghanistan Production    1961 tonnes 350000\n4 Afghanistan Milk Animals  1962 Head   700000\n5 Afghanistan Yield         1962 hg/An    5000\n6 Afghanistan Production    1962 tonnes 350000\n```\n:::\n\n```{.r .cell-code}\n# sort out the 3 different Elements into their own columns?\n```\n:::\n\n## Refining Distinct Values\nNext I will print a summary with only the columns that have multiple distinct values.\n\n::: {.cell}\n\n```{.r .cell-code}\ncattle.sm <- select(cattle, Area, Element, Year, Unit, Value)\n\n# preview with data frame summary\nprint (dfSummary (cattle.sm, varnumbers = FALSE,\n                plain.ascii = FALSE,\n                style = \"grid\" ),\n      method = 'render', \n      table.classes = 'table-condensed')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container st-container\">\n<h3>Data Frame Summary</h3>\n<h4>cattle.sm</h4>\n<strong>Dimensions</strong>: 36449 x 5\n  <br/><strong>Duplicates</strong>: 0\n<br/>\n<table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline table-condensed\">\n  <thead>\n    <tr>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Valid</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"left\">Area\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. Afghanistan</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. Africa</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. Albania</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. Algeria</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. American Samoa</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. Americas</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. Angola</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. Antigua and Barbuda</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. Argentina</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. Asia</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 222 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">174</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">0.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">34709</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">95.2%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAJsAAAEKBAMAAAD3AjrtAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVAzExOzuhQgAAALNJREFUeNrt1DERw0AUQ0FDcBhkbAjhzy1NEMQq9O9WALZ5MzoOe7LrFdmJw+FwuHW5jLYn110Wh8PhcA1cRhvCdafA4XA43IJcRhvCdafA4XA43IJcRhvCdafA4XA4XAOX0fbkusvicDgcroHLaHty3WVxOBwO18BltCFcdwocDofDLchltCFcdwocDofDLchltCFcdwocDofDNXAZbU/uyuz94+5PZDgcDod7xIXP3f7bF1JVkbCiiaXGAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTEyLTIxVDAzOjQ5OjQ5KzAwOjAwqZ/sPAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0xMi0yMVQwMzo0OTo0OSswMDowMNjCVIAAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">36449\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Element\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. Milk Animals</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. Production</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. Yield</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">12158</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">33.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">12170</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">33.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">12121</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">33.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAD8AAABOBAMAAABlD9OIAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVAzEyojLw+AAAAEBJREFUSMdjYBgcQAkXUIAqUDbGAUYVjCqgjQKCaVIQFxCgn4LRjDOqgM4Khna+ECDgTaNRBaMKaKOAYJocaAAA4CE7ic0k4J4AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMTItMjFUMDM6NDk6NTArMDA6MDDwralxAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTEyLTIxVDAzOjQ5OjUwKzAwOjAwgfARzQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">36449\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Year\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1990.4 (16.8)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1961 &le; 1991 &le; 2018</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 29 (0)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">58 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAJgAAABuBAMAAAApJ8cWAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVAzEyojLw+AAAAHVJREFUaN7t2UEKgCAQQFGvUEewG9j97xZlkJtIBzfB+wsXozxcCqakSEug3FQng9jaANt+dq0lhl1AeZgYdt9pEtYwMFgMy9/1Y+3Gy3kYDAaDwWCwEaw+RyZhdQyDwWAwGAwGg8FgMBgMBvsD1vGJ1VFSpANFCQUJXBoeBwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0xMi0yMVQwMzo0OTo1MCswMDowMPCtqXEAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMTItMjFUMDM6NDk6NTArMDA6MDCB8BHNAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">36449\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Unit\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. Head</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. hg/An</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. tonnes</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">12158</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">33.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">12121</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">33.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">12170</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">33.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAD8AAABOBAMAAABlD9OIAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVAzEyojLw+AAAAEZJREFUSMdjYBgcQAkXUIAqUDbGAUYVjCqgjQKCaVIQFxCgnwKcjhQg4E2jUQWjCshSQDDJDep8MZhKmFEFI0oBwTQ50AAA0187mgP0KFoAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMTItMjFUMDM6NDk6NTArMDA6MDDwralxAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTEyLTIxVDAzOjQ5OjUwKzAwOjAwgfARzQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">36449\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Value\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 4410235 (25744621)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7 &le; 43266 &le; 683217055</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 692151 (5.8)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">24088 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAJgAAABuBAMAAAApJ8cWAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVAzEyojLw+AAAAE5JREFUaN7t2UEVABAQQMGtIIIVQf9ueE8CHBzmB5gCP0In5aqWyzbW+gwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgX2HXY3hj+aTQSQMvfCILo1YBHAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0xMi0yMVQwMzo0OTo1MCswMDowMPCtqXEAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMTItMjFUMDM6NDk6NTArMDA6MDCB8BHNAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">36375\n(99.8%)</td>\n      <td align=\"center\">74\n(0.2%)</td>\n    </tr>\n  </tbody>\n</table>\n<p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.0.1 (<a href='https://www.r-project.org/'>R</a> version 4.2.1)<br/>2022-12-20</p>\n</div>\n```\n:::\n:::\n\n\n## Rearranging the Data\nI see that there are 3 \"Elements\": Milk Animals, Production, and Yield; and 3 \"Units\" and I suspect these are aligned where each element is measured in its own unit. In order to get a better view of this data and ensure that each column contains only one factor, I will move those into their own columns with `pivot_wider'. See my attempt below.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Move the units into their own columns, pulling their values along. \n\n#use read_csv over read.csv\npivot_wider(cattle.sm, id_cols = c(Area, Year), \n            names_from = Unit, \n            values_from = Value)%>%\n  # Rename columns to describe the moved variables\n  rename(Head_Cattle = Head, Animal_hg = \"hg/An\", Tonnes_Milk = tonnes)%>%\n #Stop showing the elements, now that they are tied to the units in the new column names\n   select(Area, Year, Head_Cattle, Animal_hg, Tonnes_Milk) %>%\n  #attempt to remove the NAs and collapse the rows together. Didn't work--need to try again next time.\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  Area         Year Head_Cattle Animal_hg Tonnes_Milk\n  <chr>       <dbl>       <dbl>     <dbl>       <dbl>\n1 Afghanistan  1961      700000      5000      350000\n2 Afghanistan  1962      700000      5000      350000\n3 Afghanistan  1963      780000      5128      400000\n4 Afghanistan  1964      780000      5128      400000\n5 Afghanistan  1965      870000      5172      450000\n6 Afghanistan  1966      960000      5208      500000\n```\n:::\n\n```{.r .cell-code}\n #would I use case_when for collapsing the rows together? \n#How do I assign a new name to this format of the data? Where can I put that command, near the beginning?\n```\n:::\n\n## Reading and Tidying Together\nNow that I have explored the data, I'm ready to set up my read-in with all the tidying all at once so that I can work with a single data set for my analysis. Below is my script to do so. Since all the steps are piped in one script, the assignment of \"clean.dairy\" applies to the new, tidy data set. \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nclean.dairy <- read_csv(\"_data/FAOSTAT_cattle_dairy.csv\") %>%\n  filter(Flag!=\"A\")%>%\n\n  select(Area, Year, Unit, Value) %>%\n\n  pivot_wider(names_from = Unit, \n            values_from = Value) %>%\n  # Rename columns to describe the moved variables\n  rename(Head_Cattle = Head, hg_Animal = \"hg/An\", Tonnes_Milk = tonnes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 36449 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#preview to confirm\nhead(clean.dairy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  Area         Year Head_Cattle hg_Animal Tonnes_Milk\n  <chr>       <dbl>       <dbl>     <dbl>       <dbl>\n1 Afghanistan  1961      700000      5000      350000\n2 Afghanistan  1962      700000      5000      350000\n3 Afghanistan  1963      780000      5128      400000\n4 Afghanistan  1964      780000      5128      400000\n5 Afghanistan  1965      870000      5172      450000\n6 Afghanistan  1966      960000      5208      500000\n```\n:::\n:::\n\n## Summary Statistics\nAs shown below, average (mean) values of these three variables ??what do I observe??\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  #the following works for a table of min, max, avg for Head_Cattle, hg_Animal, and Tonnes_Milk.\nclean.dairy %>%\n  select(clean.dairy, Area = China)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %>% select(clean.dairy)\n\n  # Now:\n  data %>% select(all_of(clean.dairy))\n\nSee <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in `select()`:\n! Can't subset columns with `clean.dairy`.\n✖ `clean.dairy` must be numeric or character, not a <tbl_df/tbl/data.frame> object.\n```\n:::\n\n```{.r .cell-code}\n   summarize(avg_Head_Cattle = mean (Head_Cattle, na.rm=TRUE),\n          med_Head_Cattle = median (Head_Cattle, na.rm=TRUE), \n          max_Head_Cattle = max (Head_Cattle, na.rm=TRUE),\n          min_Head_Cattle = min(Head_Cattle, na.rm=TRUE))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mean(Head_Cattle, na.rm = TRUE): object 'Head_Cattle' not found\n```\n:::\n\n```{.r .cell-code}\n clean.dairy %>%\n  summarize(avg_hg_Animal = mean (hg_Animal, na.rm=TRUE),\n          med_hg_Animal = median (hg_Animal, na.rm=TRUE), \n          max_hg_Animal = max (hg_Animal, na.rm=TRUE),\n          min_hg_Animal = min(hg_Animal, na.rm=TRUE))   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  avg_hg_Animal med_hg_Animal max_hg_Animal min_hg_Animal\n          <dbl>         <dbl>         <dbl>         <dbl>\n1        19329.         13218        134121           923\n```\n:::\n\n```{.r .cell-code}\n clean.dairy %>%\n\n  summarize(avg_Tonnes_Milk = mean (Tonnes_Milk, na.rm=TRUE),\n          med_Tonnes_Milk = median (Tonnes_Milk, na.rm=TRUE), \n          max_Tonnes_Milk = max (Tonnes_Milk, na.rm=TRUE),\n          min_Tonnes_Milk = min(Tonnes_Milk, na.rm=TRUE))  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  avg_Tonnes_Milk med_Tonnes_Milk max_Tonnes_Milk min_Tonnes_Milk\n            <dbl>           <dbl>           <dbl>           <dbl>\n1         412549.           28014        25270000               7\n```\n:::\n\n```{.r .cell-code}\n #Counts of unique occurences\n distinct(clean.dairy, Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 58 × 1\n    Year\n   <dbl>\n 1  1961\n 2  1962\n 3  1963\n 4  1964\n 5  1965\n 6  1966\n 7  1967\n 8  1968\n 9  1969\n10  1970\n# … with 48 more rows\n```\n:::\n\n```{.r .cell-code}\n  distinct(clean.dairy, Area)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 232 × 1\n   Area               \n   <chr>              \n 1 Afghanistan        \n 2 Albania            \n 3 Algeria            \n 4 American Samoa     \n 5 Angola             \n 6 Antigua and Barbuda\n 7 Argentina          \n 8 Armenia            \n 9 Australia          \n10 Austria            \n# … with 222 more rows\n```\n:::\n:::\n\n## Summary\nThe FAOSTAT data on cattle contains 58 years of data from 1961 to 2018 on cattle meat and milk production for 204 countries (232 minus 28 \"aggregate\" regions). \n\nFor my analysis, I am interested in the top producers of meat and milk. I have relocated the \"Items\" of production to their own columns for a tidy set of data. From there, I can observe the max, min, and averages of heads of cattle, meat production, and milk production. The top 10 producers of Meat in hectograms is shown below, and of milk in tonnes below that. Interestingly, Canada is the only country that appears in both lists. \n\nAs a side note, I am not sure why Northern America appears in the top beef producers table, since I removed aggregate values when I read in the data. Perhaps there was an error there.\n\nIn the future, it may be interesting to compare rates of meat and milk production in proportion to the head of cattle. Another question to investigate could be comparing countries' production vs consumption of cattle products.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Top 10 Beef Producers in a single year\nclean.dairy %>%\nselect(Area, hg_Animal)%>%\n   group_by(Area) %>%\n  arrange(desc(hg_Animal)) %>%\n            slice(1)%>%\n  ungroup()%>%\n  arrange(desc(hg_Animal)) %>%\n  slice(1:10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   Area                     hg_Animal\n   <chr>                        <dbl>\n 1 Israel                      134121\n 2 Republic of Korea           106757\n 3 United States of America    104633\n 4 Northern America            102840\n 5 Saudi Arabia                100400\n 6 Denmark                      98952\n 7 Spain                        96660\n 8 Estonia                      93615\n 9 Canada                       89357\n10 Finland                      88343\n```\n:::\n\n```{.r .cell-code}\n# Top 10 Milk Producers in a single year\nclean.dairy %>%\nselect(Area, Tonnes_Milk)%>%\n   group_by(Area) %>%\n  arrange(desc(Tonnes_Milk)) %>%\n            slice(1)%>%\n  ungroup()%>%\n  arrange(desc(Tonnes_Milk)) %>%\n  slice(1:10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   Area                       Tonnes_Milk\n   <chr>                            <dbl>\n 1 France                        25270000\n 2 India                         21500000\n 3 Netherlands                   10634163\n 4 Brazil                         9022000\n 5 Canada                         8564000\n 6 Argentina                      8100000\n 7 Turkey                         7909600\n 8 Colombia                       7100000\n 9 Iran (Islamic Republic of)     6929212\n10 Sudan (former)                 5400000\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}