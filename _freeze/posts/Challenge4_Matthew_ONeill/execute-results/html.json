{
  "hash": "24aafdb70fbcf2bd5e00e2133aa6e2d9",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"Matthew O'Neill\"\ndesription: \"More data wrangling: pivoting\"\ndate: \"08/18/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - abc_poll\n  - eggs\n  - fed_rates\n  - hotel_bookings\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = read_csv(\"../posts/_data/FedFundsRate.csv\")\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 904 × 10\n    Year Month   Day Federal F…¹ Feder…² Feder…³ Effec…⁴ Real …⁵ Unemp…⁶ Infla…⁷\n   <dbl> <dbl> <dbl>       <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1  1954     7     1          NA      NA      NA    0.8      4.6     5.8      NA\n 2  1954     8     1          NA      NA      NA    1.22    NA       6        NA\n 3  1954     9     1          NA      NA      NA    1.06    NA       6.1      NA\n 4  1954    10     1          NA      NA      NA    0.85     8       5.7      NA\n 5  1954    11     1          NA      NA      NA    0.83    NA       5.3      NA\n 6  1954    12     1          NA      NA      NA    1.28    NA       5        NA\n 7  1955     1     1          NA      NA      NA    1.39    11.9     4.9      NA\n 8  1955     2     1          NA      NA      NA    1.29    NA       4.7      NA\n 9  1955     3     1          NA      NA      NA    1.35    NA       4.6      NA\n10  1955     4     1          NA      NA      NA    1.43     6.7     4.7      NA\n# … with 894 more rows, and abbreviated variable names\n#   ¹​`Federal Funds Target Rate`, ²​`Federal Funds Upper Target`,\n#   ³​`Federal Funds Lower Target`, ⁴​`Effective Federal Funds Rate`,\n#   ⁵​`Real GDP (Percent Change)`, ⁶​`Unemployment Rate`, ⁷​`Inflation Rate`\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe data describes monthly metrics related to the US economy from 1954 to 2017. The data includes the effective Federal interest rate, the change in GDP from the previous quarter, the unemployment rate for that month, and the year over year inflation rate.\n\n## Tidy Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(data$\"Federal Funds Target Rate\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 442\n```\n:::\n:::\n\nThere are 442 rows out of 904 which contain N/A values for the Target Rate. This is because the target rate was not a piece of data that was recorded until 1982 and, in 2012, the Target Rate was replaced with a target upper and lower bound for the federal funds rate to fall between. \n\nIf we were interested in working with the target rate, we could find the midpoint of the lower and upper bound of the target rate and treat that as an estimated target rate. \n\nFor now though, the data is tidy enough to work with and there are no unnecessary rows or columns to completely get rid of.\n\n## Identify variables that need to be mutated\n\nThe dates do however need to be mutated, as we currently have columns for month, day, and year. This is redudant, and we can reformat using the str_c() function. We do need to specify day as now all rows fall on the first day of the month.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata<-data%>%\n  mutate(date = str_c(`Year`,`Month`, `Day`, sep=\"/\"),date = ymd(date))\n\ndata <- data[-c(1,2,3)]\ndata <- select(data, date, everything())\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 904 × 8\n   date       Federal Funds Ta…¹ Feder…² Feder…³ Effec…⁴ Real …⁵ Unemp…⁶ Infla…⁷\n   <date>                  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 1954-07-01                 NA      NA      NA    0.8      4.6     5.8      NA\n 2 1954-08-01                 NA      NA      NA    1.22    NA       6        NA\n 3 1954-09-01                 NA      NA      NA    1.06    NA       6.1      NA\n 4 1954-10-01                 NA      NA      NA    0.85     8       5.7      NA\n 5 1954-11-01                 NA      NA      NA    0.83    NA       5.3      NA\n 6 1954-12-01                 NA      NA      NA    1.28    NA       5        NA\n 7 1955-01-01                 NA      NA      NA    1.39    11.9     4.9      NA\n 8 1955-02-01                 NA      NA      NA    1.29    NA       4.7      NA\n 9 1955-03-01                 NA      NA      NA    1.35    NA       4.6      NA\n10 1955-04-01                 NA      NA      NA    1.43     6.7     4.7      NA\n# … with 894 more rows, and abbreviated variable names\n#   ¹​`Federal Funds Target Rate`, ²​`Federal Funds Upper Target`,\n#   ³​`Federal Funds Lower Target`, ⁴​`Effective Federal Funds Rate`,\n#   ⁵​`Real GDP (Percent Change)`, ⁶​`Unemployment Rate`, ⁷​`Inflation Rate`\n```\n:::\n:::\n\nWe mutated the dateset to include a date column, moved that date coulmn to the front, and removed the now redundant year, month, and day columns. \n\n### Additional Comments\n\nThe rest of the data is formatted well and there doesn't appear to be any additional redudancies we can get rid of. If we were working with GDP we might consider reducing the data to be quarterly, but all other metrics are recorded on a monthly basis, so it doesn't make sense to do it preemptively.\n\n\n",
    "supporting": [
      "Challenge4_Matthew_ONeill_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}