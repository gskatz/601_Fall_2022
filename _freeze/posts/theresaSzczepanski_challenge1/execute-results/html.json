{
  "hash": "45b56d607b2e156c5fa9cfde2574b5c4",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1\"\nauthor: \"Theresa Szczepanski\"\ndesription: \"Reading in Railroad data and creating a post\"\ndate: \"09/16/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n  - railroads\n  - birds\n  - Theresa_Szczepanski\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n## Read in the Railroad Data\n\n\n-   railroad_2012_clean_county.csv ⭐\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  Railroad <- read_csv(\"_data/railroad_2012_clean_county.csv\")\n  summary(Railroad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    state              county          total_employees  \n Length:2930        Length:2930        Min.   :   1.00  \n Class :character   Class :character   1st Qu.:   7.00  \n Mode  :character   Mode  :character   Median :  21.00  \n                                       Mean   :  87.18  \n                                       3rd Qu.:  65.00  \n                                       Max.   :8207.00  \n```\n:::\n\n```{.r .cell-code}\n  Railroad\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,930 × 3\n   state county               total_employees\n   <chr> <chr>                          <dbl>\n 1 AE    APO                                2\n 2 AK    ANCHORAGE                          7\n 3 AK    FAIRBANKS NORTH STAR               2\n 4 AK    JUNEAU                             3\n 5 AK    MATANUSKA-SUSITNA                  2\n 6 AK    SITKA                              1\n 7 AK    SKAGWAY MUNICIPALITY              88\n 8 AL    AUTAUGA                          102\n 9 AL    BALDWIN                          143\n10 AL    BARBOUR                            1\n# … with 2,920 more rows\n```\n:::\n\n```{.r .cell-code}\n  States <-select(Railroad, state)\n  Num_States <-unique(States)\n  dim(Num_States)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 53  1\n```\n:::\n\n```{.r .cell-code}\n#| label: railroad wrangling and finding the number of unique states\n```\n:::\n\n\n## Describe the data\nThe `Railroad` data set consists of 2930 observations of three variables: `state`, `county`, and `total_employees` of type\n`character`, `character`, and `double` respectively. The minimum number of employees is 1, at several counties and the maximum is 8207 in Cook county Illinois.\n\n::: {.cell}\n\n```{.r .cell-code}\n  #Overview of Railroad\n  arrange(Railroad, desc(total_employees))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,930 × 3\n   state county           total_employees\n   <chr> <chr>                      <dbl>\n 1 IL    COOK                        8207\n 2 TX    TARRANT                     4235\n 3 NE    DOUGLAS                     3797\n 4 NY    SUFFOLK                     3685\n 5 VA    INDEPENDENT CITY            3249\n 6 FL    DUVAL                       3073\n 7 CA    SAN BERNARDINO              2888\n 8 CA    LOS ANGELES                 2545\n 9 TX    HARRIS                      2535\n10 NE    LINCOLN                     2289\n# … with 2,920 more rows\n```\n:::\n\n```{.r .cell-code}\n  arrange(Railroad, total_employees)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,930 × 3\n   state county   total_employees\n   <chr> <chr>              <dbl>\n 1 AK    SITKA                  1\n 2 AL    BARBOUR                1\n 3 AL    HENRY                  1\n 4 AP    APO                    1\n 5 AR    NEWTON                 1\n 6 CA    MONO                   1\n 7 CO    BENT                   1\n 8 CO    CHEYENNE               1\n 9 CO    COSTILLA               1\n10 CO    DOLORES                1\n# … with 2,920 more rows\n```\n:::\n\n```{.r .cell-code}\n#| label: Railroad summary\n```\n:::\n\n\nThere are 53 distinct entries in the `state` column. The 50 United states' codes are represented as well as\n\n  - **DC**, for Washington D.C.\n  - *AE, APO*, unknown State/Territory, but AE, APO is possibly an Armed Forces Europe post office box.\n  - *AP, APO*, unknown State/Territory, but AP, APO is possibly an Armed Forces Pacific post office box.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  #Finding the number of unique states\n  States <-select(Railroad, state)\n  Num_States <-unique(States)\n  summary(Num_States)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    state          \n Length:53         \n Class :character  \n Mode  :character  \n```\n:::\n\n```{.r .cell-code}\n  Num_States\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 53 × 1\n   state\n   <chr>\n 1 AE   \n 2 AK   \n 3 AL   \n 4 AP   \n 5 AR   \n 6 AZ   \n 7 CA   \n 8 CO   \n 9 CT   \n10 DC   \n# … with 43 more rows\n```\n:::\n\n```{.r .cell-code}\n#| label: Num States\n```\n:::\n\nThe cases of this data set represent a unique State and Country pairing. The number of employees, possibly represents the number of Railroad employees\nfor a given State and County pairing.\n\n## Read in the Birds Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  Birds <- read_csv(\"_data/birds.csv\")\n  summary(Birds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Domain Code           Domain            Area Code        Area          \n Length:30977       Length:30977       Min.   :   1   Length:30977      \n Class :character   Class :character   1st Qu.:  79   Class :character  \n Mode  :character   Mode  :character   Median : 156   Mode  :character  \n                                       Mean   :1202                     \n                                       3rd Qu.: 231                     \n                                       Max.   :5504                     \n                                                                        \n  Element Code    Element            Item Code        Item          \n Min.   :5112   Length:30977       Min.   :1057   Length:30977      \n 1st Qu.:5112   Class :character   1st Qu.:1057   Class :character  \n Median :5112   Mode  :character   Median :1068   Mode  :character  \n Mean   :5112                      Mean   :1066                     \n 3rd Qu.:5112                      3rd Qu.:1072                     \n Max.   :5112                      Max.   :1083                     \n                                                                    \n   Year Code         Year          Unit               Value         \n Min.   :1961   Min.   :1961   Length:30977       Min.   :       0  \n 1st Qu.:1976   1st Qu.:1976   Class :character   1st Qu.:     171  \n Median :1992   Median :1992   Mode  :character   Median :    1800  \n Mean   :1991   Mean   :1991                      Mean   :   99411  \n 3rd Qu.:2005   3rd Qu.:2005                      3rd Qu.:   15404  \n Max.   :2018   Max.   :2018                      Max.   :23707134  \n                                                  NA's   :1036      \n     Flag           Flag Description  \n Length:30977       Length:30977      \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n```\n:::\n\n```{.r .cell-code}\n  head(Birds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  Domai…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year Unit \n  <chr>   <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl> <chr>\n1 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1961  1961 1000…\n2 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1962  1962 1000…\n3 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1963  1963 1000…\n4 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1964  1964 1000…\n5 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1965  1965 1000…\n6 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1966  1966 1000…\n# … with 3 more variables: Value <dbl>, Flag <chr>, `Flag Description` <chr>,\n#   and abbreviated variable names ¹​`Domain Code`, ²​`Area Code`,\n#   ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n\n```{.r .cell-code}\n#| label: birds wrangling\n```\n:::\n\n## Describe the Data\n\nThe `birds` data consists of 8 variables of character type and 6 variables of double type. The data seem to describe the population of `stock` or domesticated fowl in regions of the world for given years. \n\n`Domain`: For this data set all of the cases have the same `Domain` and `Domain Code` representing \"live animals\".\n \n\n::: {.cell}\n\n```{.r .cell-code}\n  Domains <-select(Birds, \"Domain Code\", Domain)\n  Num_Domains <-unique(Domains)\n  Num_Domains\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  `Domain Code` Domain      \n  <chr>         <chr>       \n1 QA            Live Animals\n```\n:::\n\n```{.r .cell-code}\n#| label: Domains info\n```\n:::\n\n`Area` consists of 248 entries. Notably, the entries with values less than 5000 represent Countries of the world. The numeric codes correspond with the the Alphabetical order of the country names. When the area code has a value of 5000, it represents the entire world and when the code is greater than 5000, it then corresponds to regions of the world rather than a specific country. In these cases, regions with numbers closer in value have closer geographic proximity. It should be noted that there is a value for Europe as well as a value for Easter Europe and Western Europe, so there are regions that are represented in multiple cases of these entries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  Areas <-select(Birds, \"Area Code\", Area)\n  Num_Areas <-unique(Areas)\n  Num_Areas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 248 × 2\n   `Area Code` Area               \n         <dbl> <chr>              \n 1           2 Afghanistan        \n 2           3 Albania            \n 3           4 Algeria            \n 4           5 American Samoa     \n 5           7 Angola             \n 6           8 Antigua and Barbuda\n 7           9 Argentina          \n 8           1 Armenia            \n 9          22 Aruba              \n10          10 Australia          \n# … with 238 more rows\n```\n:::\n\n```{.r .cell-code}\n  arrange(Num_Areas, `Area Code`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 248 × 2\n   `Area Code` Area               \n         <dbl> <chr>              \n 1           1 Armenia            \n 2           2 Afghanistan        \n 3           3 Albania            \n 4           4 Algeria            \n 5           5 American Samoa     \n 6           7 Angola             \n 7           8 Antigua and Barbuda\n 8           9 Argentina          \n 9          10 Australia          \n10          11 Austria            \n# … with 238 more rows\n```\n:::\n\n```{.r .cell-code}\n  arrange(Num_Areas, desc(`Area Code`))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 248 × 2\n   `Area Code` Area                     \n         <dbl> <chr>                    \n 1        5504 Polynesia                \n 2        5503 Micronesia               \n 3        5502 Melanesia                \n 4        5501 Australia and New Zealand\n 5        5500 Oceania                  \n 6        5404 Western Europe           \n 7        5403 Southern Europe          \n 8        5402 Northern Europe          \n 9        5401 Eastern Europe           \n10        5400 Europe                   \n# … with 238 more rows\n```\n:::\n\n```{.r .cell-code}\n  World_Region <- filter(Num_Areas, `Area Code` >= 5000)\n  arrange(World_Region, `Area Code`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 28 × 2\n   `Area Code` Area            \n         <dbl> <chr>           \n 1        5000 World           \n 2        5100 Africa          \n 3        5101 Eastern Africa  \n 4        5102 Middle Africa   \n 5        5103 Northern Africa \n 6        5104 Southern Africa \n 7        5105 Western Africa  \n 8        5200 Americas        \n 9        5203 Northern America\n10        5204 Central America \n# … with 18 more rows\n```\n:::\n\n```{.r .cell-code}\n#| label: Area info\n```\n:::\n\n\n`Element`: For this data set all of the cases have the same `Element` and `Element Code` representing \"stocks\".\n \n\n::: {.cell}\n\n```{.r .cell-code}\n  Elements <-select(Birds, \"Element Code\", Element)\n  Num_Elements <-unique(Elements)\n  Num_Elements\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  `Element Code` Element\n           <dbl> <chr>  \n1           5112 Stocks \n```\n:::\n\n```{.r .cell-code}\n#| label: Elements info\n```\n:::\n\n`Item`: For this data set, all of the observations are of items of type chicken, duck, geese and guinea fowls, turkeys, or pigeons/other birds.\n \n\n::: {.cell}\n\n```{.r .cell-code}\n  Items <-select(Birds, \"Item Code\", Item)\n  Num_Items <-unique(Items)\n  Num_Items\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  `Item Code` Item                  \n        <dbl> <chr>                 \n1        1057 Chickens              \n2        1068 Ducks                 \n3        1072 Geese and guinea fowls\n4        1079 Turkeys               \n5        1083 Pigeons, other birds  \n```\n:::\n\n```{.r .cell-code}\n  table(Items)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         Item\nItem Code Chickens Ducks Geese and guinea fowls Pigeons, other birds Turkeys\n     1057    13074     0                      0                    0       0\n     1068        0  6909                      0                    0       0\n     1072        0     0                   4136                    0       0\n     1079        0     0                      0                    0    5693\n     1083        0     0                      0                 1165       0\n```\n:::\n\n```{.r .cell-code}\n#| label: Items info\n```\n:::\n\n\n`Year`, 'Unit', 'Value': For a given observation, there is the year the observation was made (between 1961 and 2018), and the number of livestock counted\nas a `value` with `units` of 1000 head. 4700 represents, 4,700,000 heads of the bird observed.\n\n::: {.cell}\n\n```{.r .cell-code}\n  Years_Values <-select(Birds, Year, Unit, Value)\n  Units <-select(Birds, Unit)\n  Num_Units <-unique(Units)\n  Num_Units\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  Unit     \n  <chr>    \n1 1000 Head\n```\n:::\n\n```{.r .cell-code}\n  summary(Years_Values)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Year          Unit               Value         \n Min.   :1961   Length:30977       Min.   :       0  \n 1st Qu.:1976   Class :character   1st Qu.:     171  \n Median :1992   Mode  :character   Median :    1800  \n Mean   :1991                      Mean   :   99411  \n 3rd Qu.:2005                      3rd Qu.:   15404  \n Max.   :2018                      Max.   :23707134  \n                                   NA's   :1036      \n```\n:::\n\n```{.r .cell-code}\n  Years_Values\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30,977 × 3\n    Year Unit      Value\n   <dbl> <chr>     <dbl>\n 1  1961 1000 Head  4700\n 2  1962 1000 Head  4900\n 3  1963 1000 Head  5000\n 4  1964 1000 Head  5300\n 5  1965 1000 Head  5500\n 6  1966 1000 Head  5800\n 7  1967 1000 Head  6600\n 8  1968 1000 Head  6290\n 9  1969 1000 Head  6300\n10  1970 1000 Head  6000\n# … with 30,967 more rows\n```\n:::\n\n```{.r .cell-code}\n#| label: Years info\n```\n:::\n\n\n`Unit`\n\n\n`Flag` consists of 6 values describing the methodology by which the data was collected.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  Flag_Descriptions <-select(Birds, Flag, `Flag Description`)\n  Num_Flag_Descriptions <-unique(Flag_Descriptions)\n  Num_Flag_Descriptions\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  Flag  `Flag Description`                                                      \n  <chr> <chr>                                                                   \n1 F     FAO estimate                                                            \n2 <NA>  Official data                                                           \n3 Im    FAO data based on imputation methodology                                \n4 M     Data not available                                                      \n5 *     Unofficial figure                                                       \n6 A     Aggregate, may include official, semi-official, estimated or calculated…\n```\n:::\n\n```{.r .cell-code}\n  Flags <-select(Birds, Flag)\n  table(Flags)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFlag\n    *     A     F    Im     M \n 1494  6488 10007  1213  1002 \n```\n:::\n\n```{.r .cell-code}\n#| label: Flags info\n```\n:::\n\n`Element`: All observations are of Stocks.\n\n::: {.cell}\n\n```{.r .cell-code}\n  Elements <-select(Birds, \"Element Code\", Element)\n  Num_Elements <-unique(Elements)\n  dim(Elements)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 30977     2\n```\n:::\n\n```{.r .cell-code}\n  Num_Elements\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  `Element Code` Element\n           <dbl> <chr>  \n1           5112 Stocks \n```\n:::\n\n```{.r .cell-code}\n#| label: Flags info\n```\n:::\n\n  \n## Further Challenges to come back to\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐⭐\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}