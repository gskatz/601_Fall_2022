{
  "hash": "caf014e09770657391e4c05553414479",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 Instructions\"\nauthor: \"Meredith Rolfe\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"08/17/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xls ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrawData <- read_excel(\"_data/USA Households by Total Money Income, Race, and Hispanic Origin of Householder 1967 to 2019.xlsx\", \n    skip = 2)\nView(rawData)\n\n#Trimming top and bottom\n\ntrimmedData <- rawData %>%\n                slice(3:354)\n\n#renaming cols\ncolumnNames <- c('Year', 'Count','totDistSum','Percentdist_under15','Percentdist15_25','Percentdist25_35','Percentdist35_50','Percentdist50_75','Percentdist75_100','Percentdist100_150','Percentdist150_200', 'Percentdist200andover','MedianIncome_est', 'MedianIncome_MOE', 'MeanIncome_est', 'MeanIncome_MOE')\ncolnames(trimmedData)<- columnNames\n\n\n\n\n\nmutatedData <- trimmedData %>% \n                  mutate(Race =NA, .before =1 )\n\n\n# hate that i am doing this...\n\nmutatedData$Race[1+1] <- \"ALL RACES\"\nmutatedData$Race[57+1] <- \"WHITE ALONE\"\nmutatedData$Race[78+1] <- \"WHITE\"\nmutatedData$Race[114+1] <- \"WHITE ALONE, NOT HISPANIC\"\nmutatedData$Race[135+1] <- \"WHITE, NOT HISPANIC\"\nmutatedData$Race[166+1] <- \"BLACK ALONE OR IN COMBINATION\"\nmutatedData$Race[187+1] <- \"BLACK ALONE\"\nmutatedData$Race[208+1] <- \"BLACK\"\nmutatedData$Race[244+1] <- \"ASIAN ALONE OR IN COMBINATION\"\nmutatedData$Race[265+1] <- \"ASIAN ALONE\"\nmutatedData$Race[286+1] <- \"ASIAN AND PACIFIC ISLANDER\"\nmutatedData$Race[302+1] <- \"HISPANIC (ANY RACE)\"\nmutatedData$Race[265+1] <- \"HISPANIC (ANY RACE)\"\n\n\n\nmutatedData <- mutatedData %>%\n  filter(!is.na(Count)) %>%\n  fill(Race)\n\n\n# now cleaning values\n\nmutatedData[mutatedData == 'N']<- NA\n\n\nmutatedData <- mutatedData %>% \n  mutate(across(Count:MeanIncome_MOE, as.double))\n\n\n\nmutatedData <- mutatedData %>%\n  mutate(Year =substr(Year,1,4))\n\nround(mutatedData$Percentdist15_25 ,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1]  8.0  8.8  9.1  9.1  9.0 10.0 10.5 10.3 10.4 10.6 10.2 10.7 10.0 10.0 10.0\n [16]  9.5  9.8  9.7  9.7  9.8  9.6  9.3  9.7  9.8 10.3 10.5 10.4 10.8 10.6 10.6\n [31] 10.3 10.1 10.0  9.7 10.0 10.0 10.6 10.8 10.9 10.8 10.9 10.7 10.2 10.5 11.2\n [46] 11.3 11.4 10.7 10.8 10.3 10.2 10.1  9.9 10.1 10.2  7.5  8.3  8.6  8.7  8.6\n [61]  9.5 10.1 10.0  9.9 10.2  9.6 10.4  9.6  9.7  9.6  9.1  9.3  9.4  9.3  9.4\n [76]  9.4  9.0  9.3  9.3  9.8 10.1 10.0 10.3 10.1 10.1  9.9  9.7  9.6  9.0  9.5\n [91]  9.5 10.0 10.2 10.3 10.2 10.2 10.1  9.5  9.9 10.5 10.5 10.8 10.0 10.0  9.6\n[106]  9.5  9.4  9.3  9.3  9.4  7.3  7.8  8.3  8.5  8.2  9.1  9.5  9.4  9.5  9.8\n[121]  9.3 10.0  9.0  9.2  9.2  8.8  9.0  9.1  9.0  9.1  9.0  8.7  8.9  8.8  9.4\n[136]  9.6  9.5 10.0  9.7  9.8  9.6  9.2  9.4  8.7  9.1  9.2  9.6  9.9 10.0  9.9\n[151] 10.0  9.9  9.4  9.8 10.3 10.3 10.6  9.8  9.9  9.3 11.5 12.6 12.5 12.1 12.3\n[166] 13.5 13.9 13.3 14.4 14.2 14.0 13.6 13.5 12.9 13.1 12.9 13.7 12.1 12.8 13.0\n[181] 11.5 12.6 12.6 12.2 12.4 13.6 14.0 13.5 14.5 14.3 14.0 13.5 13.6 13.0 13.1\n[196] 12.9 13.7 12.1 12.8 13.0 12.3 11.9 12.8 13.5 13.6 14.3 14.0 14.0 14.4 14.1\n[211] 13.3 13.9 13.4 14.2 14.2 14.2 15.2 16.1 15.9 15.6 16.0 16.3 15.8 15.4 17.5\n[226] 17.6 16.9 16.4 16.9 16.5 16.2 15.8 16.1 17.0 17.7  5.1  6.3  6.4  6.3  6.1\n[241]  6.5  6.5  7.2  6.2  6.3  8.1  7.7  6.4  6.9  6.6  6.0  6.6  6.6  7.4  6.6\n[256]  5.0  6.2  6.4  6.4  6.0  6.4  6.5  7.3  6.4  6.4  8.0  7.6  6.4  6.9  6.7\n[271]  6.1  6.9  6.6  7.4  6.6  6.5  6.0  7.0  7.5  7.9  7.4  8.5  8.9  8.6  8.1\n[286]  7.4  7.5  7.9  8.7  9.0  8.8 10.9 10.4 10.3 10.8 11.9 13.2 13.4 12.7 13.0\n[301] 12.1 12.8 12.9 13.0 12.3 11.5 12.0 12.0 12.0 11.8 12.6 11.9 13.4 13.7 13.9\n[316] 15.1 14.6 14.4 14.8 14.0 13.8 15.0 12.4 12.4 14.0 14.3 15.7 14.3 14.8 15.2\n[331] 13.8 14.0 12.9 13.3 14.8 15.3 14.7 15.4 14.2 16.0\n```\n:::\n\n```{.r .cell-code}\n#final tidy DF\nmutatedData\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 340 √ó 17\n   Race     Year   Count totDi‚Ä¶¬π Perce‚Ä¶¬≤ Perce‚Ä¶¬≥ Perce‚Ä¶‚Å¥ Perce‚Ä¶‚Åµ Perce‚Ä¶‚Å∂ Perce‚Ä¶‚Å∑\n   <chr>    <chr>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL RAC‚Ä¶ 2019  128451     100     9.1     8       8.3    11.7    16.5    12.3\n 2 ALL RAC‚Ä¶ 2018  128579     100    10.1     8.8     8.7    12      17      12.5\n 3 ALL RAC‚Ä¶ 2017  127669     100    10       9.1     9.2    12      16.4    12.4\n 4 ALL RAC‚Ä¶ 2017  127586     100    10.1     9.1     9.2    11.9    16.3    12.6\n 5 ALL RAC‚Ä¶ 2016  126224     100    10.4     9       9.2    12.3    16.7    12.2\n 6 ALL RAC‚Ä¶ 2015  125819     100    10.6    10       9.6    12.1    16.1    12.4\n 7 ALL RAC‚Ä¶ 2014  124587     100    11.4    10.5     9.6    12.6    16.4    12.1\n 8 ALL RAC‚Ä¶ 2013  123931     100    11.4    10.3     9.5    12.5    16.8    12  \n 9 ALL RAC‚Ä¶ 2013  122952     100    11.3    10.4     9.7    13.1    17      12.5\n10 ALL RAC‚Ä¶ 2012  122459     100    11.4    10.6    10.1    12.5    17.4    12  \n# ‚Ä¶ with 330 more rows, 7 more variables: Percentdist100_150 <dbl>,\n#   Percentdist150_200 <dbl>, Percentdist200andover <dbl>,\n#   MedianIncome_est <dbl>, MedianIncome_MOE <dbl>, MeanIncome_est <dbl>,\n#   MeanIncome_MOE <dbl>, and abbreviated variable names ¬π‚ÄãtotDistSum,\n#   ¬≤‚ÄãPercentdist_under15, ¬≥‚ÄãPercentdist15_25, ‚Å¥‚ÄãPercentdist25_35,\n#   ‚Åµ‚ÄãPercentdist35_50, ‚Å∂‚ÄãPercentdist50_75, ‚Å∑‚ÄãPercentdist75_100\n```\n:::\n\n```{.r .cell-code}\n# trying to copy over year column to a new column 'Race\" conditionally based on the Count column\n  # I then planned to fill the race column NAs with previous values\n\n\n# trimmedData %>%\n#   filter(is.na(Count))\n# \n# \n# \n# mutatedData <- trimmedData%>%\n#                   mutate(Race = \n#                            case_when(Count == NA ~ trimmedData$Year[1]), .before =1)\n# \n# mutatedData <- trimmedData%>%\n#                   mutate(Race = \n#                            case_when(Count == NA ~ 1), .before =1)\n# \n# mutatedData\n```\n:::\n\n\n### Briefly describe the data\n\nDescribe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\"\n\nThe data contains information on income, grouped by race for American households from\n as early as 1967 to 2019.\n \nMy plan to make this data \"tidy\" is to rename all the columns so that they can be\nrepresented in one header. I will then add a race column which will contain the race for that particular observation. Year will also have its own column.\n\n\n## Anticipate the End Result\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# i dont include the percent distribution column\nrace <- c(\"value1\",\"value2\",\"value3\")\nyear <- c(\"value1\",\"value2\",\"value3\")\nCount <- c(\"value1\",\"value2\",\"value3\")\nPercentdist_under15 <- c(\"value1\",\"value2\",\"value3\")\nPercentdist15_25 <- c(\"value1\",\"value2\",\"value3\")\nPercentdist25_35 <- c(\"value1\",\"value2\",\"value3\")\nPercentdist35_50 <- c(\"value1\",\"value2\",\"value3\")\nPercentdist50_75 <- c(\"value1\",\"value2\",\"value3\")\nPercentdist75_100 <- c(\"value1\",\"value2\",\"value3\")\nPercentdist100_150 <- c(\"value1\",\"value2\",\"value3\")\nPercentdist150_200 <- c(\"value1\",\"value2\",\"value3\")\nPercentdist200andover <- c(\"value1\",\"value2\",\"value3\")\n\nMedianIncome_est <- c(\"value1\",\"value2\",\"value3\")\nMedianIncome_MOE <- c(\"value1\",\"value2\",\"value3\")\n\nMeanIncome_est <- c(\"value1\",\"value2\",\"value3\")\nMeanIncome_MOE <- c(\"value1\",\"value2\",\"value3\")\n\nsampleDF <- data.frame(race,year,Count,Percentdist_under15,Percentdist15_25,Percentdist25_35,Percentdist35_50,Percentdist50_75,Percentdist75_100,Percentdist100_150,Percentdist150_200,\n                       Percentdist200andover,MedianIncome_est,MedianIncome_MOE,MeanIncome_est,MeanIncome_MOE)\n\n\n\nsampleDF\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    race   year  Count Percentdist_under15 Percentdist15_25 Percentdist25_35\n1 value1 value1 value1              value1           value1           value1\n2 value2 value2 value2              value2           value2           value2\n3 value3 value3 value3              value3           value3           value3\n  Percentdist35_50 Percentdist50_75 Percentdist75_100 Percentdist100_150\n1           value1           value1            value1             value1\n2           value2           value2            value2             value2\n3           value3           value3            value3             value3\n  Percentdist150_200 Percentdist200andover MedianIncome_est MedianIncome_MOE\n1             value1                value1           value1           value1\n2             value2                value2           value2           value2\n3             value3                value3           value3           value3\n  MeanIncome_est MeanIncome_MOE\n1         value1         value1\n2         value2         value2\n3         value3         value3\n```\n:::\n:::\n\n\n\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA    1091.     845.\n2 USA      1990 NAFTA    1446.    1164.\n3 France   1980 EU        377.     841.\n4 Mexico   1990 NAFTA    1466.     699.\n5 USA      1980 NAFTA     530.     644.\n6 France   1990 EU       1152.     714.\n```\n:::\n\n```{.r .cell-code}\n#updated with my expected values\n\n#existing rows/cases\nnrow(rawData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 385\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(rawData)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(rawData)-11 * (ncol(rawData))+1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 210\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n(ncol(rawData))+1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n:::\n\n\n\n\n\n### Challenge: Describe the final dimensions\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsampleDF\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    race   year  Count Percentdist_under15 Percentdist15_25 Percentdist25_35\n1 value1 value1 value1              value1           value1           value1\n2 value2 value2 value2              value2           value2           value2\n3 value3 value3 value3              value3           value3           value3\n  Percentdist35_50 Percentdist50_75 Percentdist75_100 Percentdist100_150\n1           value1           value1            value1             value1\n2           value2           value2            value2             value2\n3           value3           value3            value3             value3\n  Percentdist150_200 Percentdist200andover MedianIncome_est MedianIncome_MOE\n1             value1                value1           value1           value1\n2             value2                value2           value2           value2\n3             value3                value3           value3           value3\n  MeanIncome_est MeanIncome_MOE\n1         value1         value1\n2         value2         value2\n3         value3         value3\n```\n:::\n:::\n\n\nAny additional comments?\n\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\nIf you wanted to see a side by side of the mean and median income estimates and MOE you could pivot your data as follows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutatedData <- mutatedData %>% pivot_longer(c(MedianIncome_est,MedianIncome_MOE), names_to = \"Median\",values_to = \"Values_med\")\n\nmutatedData <- mutatedData %>% pivot_longer(c(MeanIncome_est,MeanIncome_MOE), names_to = \"Mean\",values_to = \"Values_mean\")\n\nmutatedData\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,360 √ó 17\n   Race     Year   Count totDi‚Ä¶¬π Perce‚Ä¶¬≤ Perce‚Ä¶¬≥ Perce‚Ä¶‚Å¥ Perce‚Ä¶‚Åµ Perce‚Ä¶‚Å∂ Perce‚Ä¶‚Å∑\n   <chr>    <chr>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL RAC‚Ä¶ 2019  128451     100     9.1     8       8.3    11.7    16.5    12.3\n 2 ALL RAC‚Ä¶ 2019  128451     100     9.1     8       8.3    11.7    16.5    12.3\n 3 ALL RAC‚Ä¶ 2019  128451     100     9.1     8       8.3    11.7    16.5    12.3\n 4 ALL RAC‚Ä¶ 2019  128451     100     9.1     8       8.3    11.7    16.5    12.3\n 5 ALL RAC‚Ä¶ 2018  128579     100    10.1     8.8     8.7    12      17      12.5\n 6 ALL RAC‚Ä¶ 2018  128579     100    10.1     8.8     8.7    12      17      12.5\n 7 ALL RAC‚Ä¶ 2018  128579     100    10.1     8.8     8.7    12      17      12.5\n 8 ALL RAC‚Ä¶ 2018  128579     100    10.1     8.8     8.7    12      17      12.5\n 9 ALL RAC‚Ä¶ 2017  127669     100    10       9.1     9.2    12      16.4    12.4\n10 ALL RAC‚Ä¶ 2017  127669     100    10       9.1     9.2    12      16.4    12.4\n# ‚Ä¶ with 1,350 more rows, 7 more variables: Percentdist100_150 <dbl>,\n#   Percentdist150_200 <dbl>, Percentdist200andover <dbl>, Median <chr>,\n#   Values_med <dbl>, Mean <chr>, Values_mean <dbl>, and abbreviated variable\n#   names ¬π‚ÄãtotDistSum, ¬≤‚ÄãPercentdist_under15, ¬≥‚ÄãPercentdist15_25,\n#   ‚Å¥‚ÄãPercentdist25_35, ‚Åµ‚ÄãPercentdist35_50, ‚Å∂‚ÄãPercentdist50_75, ‚Å∑‚ÄãPercentdist75_100\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}