{
  "hash": "729bc84b495e0c18f9e20afbc346f7fe",
  "result": {
    "markdown": "---\ntitle: \"Homework - 2\"\nauthor: \"Neeharika Karanam\"\ndescription: \"Reading In data\"\ndate: \"12/06/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - hw2\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tibble' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(psych)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'psych'\n\nThe following objects are masked from 'package:ggplot2':\n\n    %+%, alpha\n```\n:::\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n## Read Data\n\nI would like to read in the hotel bookings dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Read the data\nhotel.bookings <- read_csv(\"_data/hotel_bookings.csv\")\n```\n:::\n\n\n## Describe Data\n\nNow I would like describe the data make some transformations to display the dataset.\n\n\nThis gives the dimesions of the dataset.\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(hotel.bookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390     32\n```\n:::\n:::\n\n\nThis gives the column names of the dataset.\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(hotel.bookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"hotel\"                          \"is_canceled\"                   \n [3] \"lead_time\"                      \"arrival_date_year\"             \n [5] \"arrival_date_month\"             \"arrival_date_week_number\"      \n [7] \"arrival_date_day_of_month\"      \"stays_in_weekend_nights\"       \n [9] \"stays_in_week_nights\"           \"adults\"                        \n[11] \"children\"                       \"babies\"                        \n[13] \"meal\"                           \"country\"                       \n[15] \"market_segment\"                 \"distribution_channel\"          \n[17] \"is_repeated_guest\"              \"previous_cancellations\"        \n[19] \"previous_bookings_not_canceled\" \"reserved_room_type\"            \n[21] \"assigned_room_type\"             \"booking_changes\"               \n[23] \"deposit_type\"                   \"agent\"                         \n[25] \"company\"                        \"days_in_waiting_list\"          \n[27] \"customer_type\"                  \"adr\"                           \n[29] \"required_car_parking_spaces\"    \"total_of_special_requests\"     \n[31] \"reservation_status\"             \"reservation_status_date\"       \n```\n:::\n:::\n\n\nThis changes the name of the column name\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(hotel.bookings)[28] <- \"average_daily_rate\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 32\n   hotel  is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n   <chr>    <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n 1 Resor…       0     342    2015 July         27       1       0       0      2\n 2 Resor…       0     737    2015 July         27       1       0       0      2\n 3 Resor…       0       7    2015 July         27       1       0       1      1\n 4 Resor…       0      13    2015 July         27       1       0       1      1\n 5 Resor…       0      14    2015 July         27       1       0       2      2\n 6 Resor…       0      14    2015 July         27       1       0       2      2\n 7 Resor…       0       0    2015 July         27       1       0       2      2\n 8 Resor…       0       9    2015 July         27       1       0       2      2\n 9 Resor…       1      85    2015 July         27       1       0       3      2\n10 Resor…       1      75    2015 July         27       1       0       3      2\n# … with 119,380 more rows, 22 more variables: children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, average_daily_rate <dbl>, …\n```\n:::\n:::\n\n\nThis gives the character types of all the columns in the dataset.\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(sapply(hotel.bookings, function(x) typeof(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\ncharacter    double \n       13        19 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(\n  hotel.bookings, function(x) n_distinct(x)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                         hotel                    is_canceled \n                             2                              2 \n                     lead_time              arrival_date_year \n                           479                              3 \n            arrival_date_month       arrival_date_week_number \n                            12                             53 \n     arrival_date_day_of_month        stays_in_weekend_nights \n                            31                             17 \n          stays_in_week_nights                         adults \n                            35                             14 \n                      children                         babies \n                             6                              5 \n                          meal                        country \n                             5                            178 \n                market_segment           distribution_channel \n                             8                              5 \n             is_repeated_guest         previous_cancellations \n                             2                             15 \nprevious_bookings_not_canceled             reserved_room_type \n                            73                             10 \n            assigned_room_type                booking_changes \n                            12                             21 \n                  deposit_type                          agent \n                             3                            334 \n                       company           days_in_waiting_list \n                           353                            128 \n                 customer_type             average_daily_rate \n                             4                           8879 \n   required_car_parking_spaces      total_of_special_requests \n                             5                              6 \n            reservation_status        reservation_status_date \n                             3                            926 \n```\n:::\n:::\n\n\nThis gives the unique values of the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(hotel.bookings$hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Resort Hotel\" \"City Hotel\"  \n```\n:::\n\n```{.r .cell-code}\nunique(hotel.bookings$arrival_date_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2015 2016 2017\n```\n:::\n\n```{.r .cell-code}\nunique(hotel.bookings$reservation_status)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Check-Out\" \"Canceled\"  \"No-Show\"  \n```\n:::\n\n```{.r .cell-code}\nunique(hotel.bookings$distribution_channel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Direct\"    \"Corporate\" \"TA/TO\"     \"Undefined\" \"GDS\"      \n```\n:::\n\n```{.r .cell-code}\nunique(hotel.bookings$customer_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Transient\"       \"Contract\"        \"Transient-Party\" \"Group\"          \n```\n:::\n:::\n\n\nIn the above dataset we can see that there are 119,390 rows and 32 columns. The column names gives us more information about what the data is about and here the data is the reservation data of the hotels. I could also find that there are 14 columns which have character vales and 18 of them are numerical values. There are quite a few columns which are dates in the dataset.\n\nI have also observed that the column names are quite descriptive and abbreviated for easy understandability. I have found that a column which is names 'adr' which should actually mean \"average daily rate\" So, I went ahead and changed the column name to \"average_daily_rate\".\n\nIn the dataset there are two different types of the hotels namely : Resort hotel and the City Hotel. The dataset consists of the reservations made from 2015 - 2017. The dataset also covers the reservations from all over the world and has almost 178 countries in them. There is data of both the cancelled reservations as well as the completed reservations along with the no-shows as well. Therefore, each row includes a lot of the information about the different reservations like the type of the hotel, country, number of visitors, dates, daily rates, duration of the stay and some other categorical information about the customer as well as the reservation.\n\nIn this dataset, each column represents a variable and each row is an booking. Therefore, there is no pivoting is needed.\n\nThis helps in mutating the variables from the dataset and it adds two new variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings <- mutate(\n  hotel.bookings, \n  number_of_guests = adults + children + babies,\n  total_stay = stays_in_weekend_nights + stays_in_week_nights)\n\nprint(summary(hotel.bookings, \n                varnumbers= FALSE, \n                plain.ascii= FALSE, \n                style= \"grid\", \n                graph.magnif= 0.80, \n                valid.col= TRUE),\n      method= 'render', \n      table.classes= 'table-condensed')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    hotel            is_canceled       lead_time   arrival_date_year\n Length:119390      Min.   :0.0000   Min.   :  0   Min.   :2015     \n Class :character   1st Qu.:0.0000   1st Qu.: 18   1st Qu.:2016     \n Mode  :character   Median :0.0000   Median : 69   Median :2016     \n                    Mean   :0.3704   Mean   :104   Mean   :2016     \n                    3rd Qu.:1.0000   3rd Qu.:160   3rd Qu.:2017     \n                    Max.   :1.0000   Max.   :737   Max.   :2017     \n                                                                    \n arrival_date_month arrival_date_week_number arrival_date_day_of_month\n Length:119390      Min.   : 1.00            Min.   : 1.0             \n Class :character   1st Qu.:16.00            1st Qu.: 8.0             \n Mode  :character   Median :28.00            Median :16.0             \n                    Mean   :27.17            Mean   :15.8             \n                    3rd Qu.:38.00            3rd Qu.:23.0             \n                    Max.   :53.00            Max.   :31.0             \n                                                                      \n stays_in_weekend_nights stays_in_week_nights     adults      \n Min.   : 0.0000         Min.   : 0.0         Min.   : 0.000  \n 1st Qu.: 0.0000         1st Qu.: 1.0         1st Qu.: 2.000  \n Median : 1.0000         Median : 2.0         Median : 2.000  \n Mean   : 0.9276         Mean   : 2.5         Mean   : 1.856  \n 3rd Qu.: 2.0000         3rd Qu.: 3.0         3rd Qu.: 2.000  \n Max.   :19.0000         Max.   :50.0         Max.   :55.000  \n                                                              \n    children           babies              meal             country         \n Min.   : 0.0000   Min.   : 0.000000   Length:119390      Length:119390     \n 1st Qu.: 0.0000   1st Qu.: 0.000000   Class :character   Class :character  \n Median : 0.0000   Median : 0.000000   Mode  :character   Mode  :character  \n Mean   : 0.1039   Mean   : 0.007949                                        \n 3rd Qu.: 0.0000   3rd Qu.: 0.000000                                        \n Max.   :10.0000   Max.   :10.000000                                        \n NA's   :4                                                                  \n market_segment     distribution_channel is_repeated_guest\n Length:119390      Length:119390        Min.   :0.00000  \n Class :character   Class :character     1st Qu.:0.00000  \n Mode  :character   Mode  :character     Median :0.00000  \n                                         Mean   :0.03191  \n                                         3rd Qu.:0.00000  \n                                         Max.   :1.00000  \n                                                          \n previous_cancellations previous_bookings_not_canceled reserved_room_type\n Min.   : 0.00000       Min.   : 0.0000                Length:119390     \n 1st Qu.: 0.00000       1st Qu.: 0.0000                Class :character  \n Median : 0.00000       Median : 0.0000                Mode  :character  \n Mean   : 0.08712       Mean   : 0.1371                                  \n 3rd Qu.: 0.00000       3rd Qu.: 0.0000                                  \n Max.   :26.00000       Max.   :72.0000                                  \n                                                                         \n assigned_room_type booking_changes   deposit_type          agent          \n Length:119390      Min.   : 0.0000   Length:119390      Length:119390     \n Class :character   1st Qu.: 0.0000   Class :character   Class :character  \n Mode  :character   Median : 0.0000   Mode  :character   Mode  :character  \n                    Mean   : 0.2211                                        \n                    3rd Qu.: 0.0000                                        \n                    Max.   :21.0000                                        \n                                                                           \n   company          days_in_waiting_list customer_type      average_daily_rate\n Length:119390      Min.   :  0.000      Length:119390      Min.   :  -6.38   \n Class :character   1st Qu.:  0.000      Class :character   1st Qu.:  69.29   \n Mode  :character   Median :  0.000      Mode  :character   Median :  94.58   \n                    Mean   :  2.321                         Mean   : 101.83   \n                    3rd Qu.:  0.000                         3rd Qu.: 126.00   \n                    Max.   :391.000                         Max.   :5400.00   \n                                                                              \n required_car_parking_spaces total_of_special_requests reservation_status\n Min.   :0.00000             Min.   :0.0000            Length:119390     \n 1st Qu.:0.00000             1st Qu.:0.0000            Class :character  \n Median :0.00000             Median :0.0000            Mode  :character  \n Mean   :0.06252             Mean   :0.5714                              \n 3rd Qu.:0.00000             3rd Qu.:1.0000                              \n Max.   :8.00000             Max.   :5.0000                              \n                                                                         \n reservation_status_date number_of_guests   total_stay    \n Min.   :2014-10-17      Min.   : 0.000   Min.   : 0.000  \n 1st Qu.:2016-02-01      1st Qu.: 2.000   1st Qu.: 2.000  \n Median :2016-08-07      Median : 2.000   Median : 3.000  \n Mean   :2016-07-30      Mean   : 1.968   Mean   : 3.428  \n 3rd Qu.:2017-02-08      3rd Qu.: 2.000   3rd Qu.: 4.000  \n Max.   :2017-09-14      Max.   :55.000   Max.   :69.000  \n                         NA's   :4                        \n```\n:::\n:::\n\n\nThis table contains some descriptive statistics for the numeric variables of the data. For example, 37% of reservations are really canceled. Typically, reservations are made 104 days before the anticipated arrival date. 1.97 individuals are typically reserved for each reservation. A youngster or infant is included in one reservation out of every 10 on average. 3.43 days are the typical length of stay. After the fact changes are made to 22% of reservations. Last but not least, the typical daily rate for hotels is $101.\n\n\nThis checks for the NA values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(hotel.bookings))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                         hotel                    is_canceled \n                             0                              0 \n                     lead_time              arrival_date_year \n                             0                              0 \n            arrival_date_month       arrival_date_week_number \n                             0                              0 \n     arrival_date_day_of_month        stays_in_weekend_nights \n                             0                              0 \n          stays_in_week_nights                         adults \n                             0                              0 \n                      children                         babies \n                             4                              0 \n                          meal                        country \n                             0                              0 \n                market_segment           distribution_channel \n                             0                              0 \n             is_repeated_guest         previous_cancellations \n                             0                              0 \nprevious_bookings_not_canceled             reserved_room_type \n                             0                              0 \n            assigned_room_type                booking_changes \n                             0                              0 \n                  deposit_type                          agent \n                             0                              0 \n                       company           days_in_waiting_list \n                             0                              0 \n                 customer_type             average_daily_rate \n                             0                              0 \n   required_car_parking_spaces      total_of_special_requests \n                             0                              0 \n            reservation_status        reservation_status_date \n                             0                              0 \n              number_of_guests                     total_stay \n                             4                              0 \n```\n:::\n:::\n\n\n\nThe only numerical variables that lack values are four. But as we can see from the dataset itself and the summary table above, some \"NULL\" values are actually strings. The summary table's Agent and Company variables both have \"NULL\" values. As a last sanity check, I'll check each column separately to determine if it has the value \"NULL.\"\n\nThis checks for the columns having any NULL values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnulls <- sapply(hotel.bookings, function(x) table(grepl(\"NULL\", x)))\n\nfor (i in 1:32) {\n  if (!is.na(nulls[[i]][2])) {\n    print(nulls[i])\n    }\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$country\n\n FALSE   TRUE \n118902    488 \n\n$agent\n\n FALSE   TRUE \n103050  16340 \n\n$company\n\n FALSE   TRUE \n  6797 112593 \n```\n:::\n:::\n\n\nWe can observe that there are 3 variables, `country`, `agent` and `company` which have \"NULL\" values. So now let's find out how much of this data in the dataset is NULL.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nround(100*prop.table(table(grepl(\"NULL\", hotel.bookings$country))), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFALSE  TRUE \n99.59  0.41 \n```\n:::\n\n```{.r .cell-code}\nround(100*prop.table(table(grepl(\"NULL\", hotel.bookings$agent))), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFALSE  TRUE \n86.31 13.69 \n```\n:::\n\n```{.r .cell-code}\nround(100*prop.table(table(grepl(\"NULL\", hotel.bookings$company))), 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFALSE  TRUE \n 5.69 94.31 \n```\n:::\n:::\n\n\nWe can now observe that there is 0.41% of `country` data, 13.89% of `agent` data and 94.31% of `company` data of reservations that are missing.\n\n## Analysis\n\nAccording to the summary table, resort hotels only charge $508 per day compared to a city hotel's potential daily rate of $5,400. I believe that is the genuine circumstance.\n\nThis gives us the average_daily_rate in the descending order.\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  arrange(desc(average_daily_rate)) %>% \n  slice_head(n=10) %>% \n  select(hotel, arrival_date_year, \n         country, \n         agent, \n         number_of_guests, \n         total_stay, \n         reservation_status, \n         average_daily_rate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 8\n   hotel        arrival_date_year country agent number…¹ total…² reser…³ avera…⁴\n   <chr>                    <dbl> <chr>   <chr>    <dbl>   <dbl> <chr>     <dbl>\n 1 City Hotel                2016 PRT     12           2       1 Cancel…   5400 \n 2 City Hotel                2017 ITA     159          1       1 Check-…    510 \n 3 Resort Hotel              2015 PRT     NULL         2       1 Check-…    508 \n 4 City Hotel                2016 PRT     NULL         4       2 Check-…    452.\n 5 Resort Hotel              2017 PRT     314          2      14 Cancel…    450 \n 6 Resort Hotel              2017 PRT     250          4       6 Cancel…    437 \n 7 Resort Hotel              2017 PRT     250          4       8 Check-…    426.\n 8 Resort Hotel              2017 ESP     240          4       5 Check-…    402 \n 9 Resort Hotel              2017 MAR     250          5       8 Check-…    397.\n10 Resort Hotel              2017 PRT     250          3      10 Cancel…    392 \n# … with abbreviated variable names ¹​number_of_guests, ²​total_stay,\n#   ³​reservation_status, ⁴​average_daily_rate\n```\n:::\n:::\n\nThis gives us the average_daily_rate in the ascending order.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  arrange(average_daily_rate) %>% \n  slice_head(n=10) %>% \n  select(hotel, arrival_date_year, \n         country, \n         agent, \n         number_of_guests, \n         total_stay, \n         reservation_status, \n         average_daily_rate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 8\n   hotel        arrival_date_year country agent number…¹ total…² reser…³ avera…⁴\n   <chr>                    <dbl> <chr>   <chr>    <dbl>   <dbl> <chr>     <dbl>\n 1 Resort Hotel              2017 GBR     273          2      10 Check-…   -6.38\n 2 Resort Hotel              2015 PRT     NULL         2       0 Check-…    0   \n 3 Resort Hotel              2015 PRT     NULL         2       0 Check-…    0   \n 4 Resort Hotel              2015 PRT     NULL         4       1 Check-…    0   \n 5 Resort Hotel              2015 PRT     240          2       0 Check-…    0   \n 6 Resort Hotel              2015 PRT     250          1       0 Check-…    0   \n 7 Resort Hotel              2015 PRT     NULL         2       0 Check-…    0   \n 8 Resort Hotel              2015 PRT     240          2       0 Check-…    0   \n 9 Resort Hotel              2015 PRT     305          2       2 Cancel…    0   \n10 Resort Hotel              2015 PRT     305          1       2 Check-…    0   \n# … with abbreviated variable names ¹​number_of_guests, ²​total_stay,\n#   ³​reservation_status, ⁴​average_daily_rate\n```\n:::\n:::\n\n\nAs a result, it would seem that the row with the average daily cost of $5,400 is incorrect. There is also a row that has a negative average daily rate. I'll take them both.\n\nThis will help us in filtering the data based on the average_daily_rate.\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings <- hotel.bookings %>% filter(average_daily_rate>=0 & average_daily_rate<=510)\n```\n:::\n\n\nNow let us perform some grouping and filtering on the data to perform our analysis and understand a bit more in-dept.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  select(hotel, average_daily_rate) %>% \n  group_by(hotel) %>% \n  summarise_if(is.numeric, list(min = min, max = max, mean = mean, std_dev = sd, median = median), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  hotel          min   max  mean std_dev median\n  <chr>        <dbl> <dbl> <dbl>   <dbl>  <dbl>\n1 City Hotel       0   510 105.     39.3   99.9\n2 Resort Hotel     0   508  95.0    61.4   75  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  select(country) %>% \n  group_by(country) %>% \n  count() %>% \n  arrange(desc(n)) %>% \n  head(n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n# Groups:   country [10]\n   country     n\n   <chr>   <int>\n 1 PRT     48589\n 2 GBR     12128\n 3 FRA     10415\n 4 ESP      8568\n 5 DEU      7287\n 6 ITA      3766\n 7 IRL      3375\n 8 BEL      2342\n 9 BRA      2224\n10 NLD      2104\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  select(country, is_canceled) %>% \n  group_by(country) %>% \n  summarise_if(is.numeric, sum, na.rm = TRUE) %>% \n  arrange(desc(is_canceled)) %>% \n  head(n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   country is_canceled\n   <chr>         <dbl>\n 1 PRT           27518\n 2 GBR            2453\n 3 ESP            2177\n 4 FRA            1934\n 5 ITA            1333\n 6 DEU            1218\n 7 IRL             832\n 8 BRA             830\n 9 USA             501\n10 BEL             474\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  filter(country %in% c(\"PRT\", \"GBR\", \"ESP\", \"FRA\", \"ITA\")) %>% \n  select(country,is_canceled) %>% \n  group_by(country) %>% \n  summarise_if(is.numeric, mean, na.rm = TRUE) %>% \n  arrange(desc(is_canceled))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  country is_canceled\n  <chr>         <dbl>\n1 PRT           0.566\n2 ITA           0.354\n3 ESP           0.254\n4 GBR           0.202\n5 FRA           0.186\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  filter(reservation_status == \"Check-Out\") %>% \n  select(country, number_of_guests) %>% \n  group_by(country) %>% \n  summarise_if(is.numeric, sum, na.rm = TRUE) %>% \n  arrange(desc(number_of_guests)) %>% \n  head(n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   country number_of_guests\n   <chr>              <dbl>\n 1 PRT                37670\n 2 GBR                19256\n 3 FRA                17299\n 4 ESP                13213\n 5 DEU                11659\n 6 IRL                 5102\n 7 ITA                 4894\n 8 BEL                 3855\n 9 NLD                 3374\n10 USA                 3212\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  filter(reservation_status == \"Check-Out\") %>% \n  select(country, number_of_guests) %>% \n  group_by(country) %>% \n  summarise_if(is.numeric, sum, na.rm = TRUE) %>% \n  arrange(desc(number_of_guests)) %>% \n  head(n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   country number_of_guests\n   <chr>              <dbl>\n 1 PRT                37670\n 2 GBR                19256\n 3 FRA                17299\n 4 ESP                13213\n 5 DEU                11659\n 6 IRL                 5102\n 7 ITA                 4894\n 8 BEL                 3855\n 9 NLD                 3374\n10 USA                 3212\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  select(country, average_daily_rate) %>% \n  group_by(country) %>% \n  summarise_if(is.numeric, mean, na.rm = TRUE) %>% \n  arrange(desc(average_daily_rate)) %>% \n  head(n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   country average_daily_rate\n   <chr>                <dbl>\n 1 DJI                   273 \n 2 AIA                   265 \n 3 AND                   203.\n 4 UMI                   200 \n 5 LAO                   182.\n 6 MYT                   178.\n 7 NCL                   176.\n 8 GEO                   169.\n 9 COM                   165.\n10 FRO                   155.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(hotel.bookings$arrival_date_month)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n    April    August  December  February   January      July      June     March \n    11089     13877      6780      8068      5929     12661     10939      9792 \n      May  November   October September \n    11791      6794     11160     10508 \n```\n:::\n:::\n\n\nThe average nightly price difference between city hotels and resort hotels is $11. In contrast, resort hotels offer a wider range of prices than do hotels in cities.\n\nThe nations with the most reservations are Portugal, Great Britain, France, Spain, Germany, Italy, Ireland, Belgium, Brazil, and the Netherlands. Great Britain, France, and Spain are next on the list. However, as we can see, 56% of Portugal's hotel reservations are actually canceled. Each country contributes 35% of this percentage, Italy and Spain. \nNevertheless, during the course of three years, Portugal has welcomed a total of 37,670 guests.\n\nAccording to average daily rates, the priciest hotels may be located in Djibouti, Anguilla, Andorra, United States Minor Outlying Islands, Laos, and so on. It seems that hotels are much more expensive in small countries with little tourists.\n\nAs observed the busiest times of the year for hotels are in August, July, and May, respectively.\n\nFinally, I wanted to check how many rows have zero daily rate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  filter(average_daily_rate == 0) %>% \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1  1959\n```\n:::\n:::\n\n\nI see that there are 1959 reservations which have zero daily rate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel.bookings %>% \n  filter(average_daily_rate == 0) %>% \n  group_by(country) %>% \n  count() %>% \n  arrange(desc(n)) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n# Groups:   country [6]\n  country     n\n  <chr>   <int>\n1 PRT      1550\n2 ESP        79\n3 GBR        73\n4 FRA        55\n5 DEU        41\n6 NULL       21\n```\n:::\n:::\n\nThe majority of the zero values come from Portugal. Therefore, more investigation is required into the reliability of hotel data for Portugal.\n\n## My Potential research questions\n\n1. Which country has the maximum number of guests staying the hotels?\n2. In the different countries what is the average daily rate of the hotel booking and for which customer type?\n3. How many rows have zero daily rate and which of the country is majorly responsible for that?\n4. Do the room rates change when the duration of the stay increases in different countries?\n\n",
    "supporting": [
      "NeeharikaKaranam_HW2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}