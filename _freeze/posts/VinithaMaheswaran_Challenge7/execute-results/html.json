{
  "hash": "c473fd5f123916025353c4e495b73f34",
  "result": {
    "markdown": "---\ntitle: \"Challenge 7 Solutions\"\nauthor: \"Vinitha Maheswaran\"\ndescription: \"Visualizing Multiple Dimensions\"\ndate: \"12/03/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_7\n  - hotel_bookings\n  - australian_marriage\n  - air_bnb\n  - eggs\n  - abc_poll\n  - faostat\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  Recreate at least two graphs from previous exercises, but introduce at least one additional dimension that you omitted before using ggplot functionality (color, shape, line, facet, etc) The goal is not to create unneeded [chart ink (Tufte)](https://www.edwardtufte.com/tufte/), but to concisely capture variation in additional dimensions that were collapsed in your earlier 2 or 3 dimensional graphs.\n   - Explain why you choose the specific graph type\n5) If you haven't tried in previous weeks, work this week to make your graphs \"publication\" ready with titles, captions, and pretty axis labels and other viewer-friendly features\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code. And anyone not familiar with Edward Tufte should check out his [fantastic books](https://www.edwardtufte.com/tufte/books_vdqi) and [courses on data visualizaton.](https://www.edwardtufte.com/tufte/courses)\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - eggs ⭐\n  - abc_poll ⭐⭐\n  - australian_marriage ⭐⭐\n  - hotel_bookings ⭐⭐⭐\n  - air_bnb  ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - faostat ⭐⭐⭐⭐⭐\n\nFor this challenge I will be working with the \"USA Households\\*.xlsx\" data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\n\n# Reading the USA Households\\*.xlsx data set and storing in a data frame\n\ncolumn_names = c(\"Year\", \"Household_Number_Thousands\", \"Total_Percent_Distribution\", \"Under $15,000\", \"$15,000 to $24,999\", \"$25,000 to $34,999\", \"35,000 to $49,999\", \"$50,000 to $74,999\", \"$75,000 to $99,999\", \"$100,000 to $149,999\", \"$150,000 to $199,999\", \"$200,000 and over\", \"Median_Income_Estimate\", \"Median_Income_MOE\", \"Mean_Income_Estimate\", \"Mean_Income_MOE\")\nusa_data <- read_excel(\"_data/USA Households by Total Money Income, Race, and Hispanic Origin of Householder 1967 to 2019.xlsx\", col_names = column_names, skip = 5)\nprint(usa_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 383 × 16\n   Year  House…¹ Total…² Under…³ $15,0…⁴ $25,0…⁵ 35,00…⁶ $50,0…⁷ $75,0…⁸ $100,…⁹\n   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL … <NA>         NA    NA      NA      NA      NA      NA      NA      NA  \n 2 2019  128451      100     9.1     8       8.3    11.7    16.5    12.3    15.5\n 3 2018  128579      100    10.1     8.8     8.7    12      17      12.5    15  \n 4 2017… 127669      100    10       9.1     9.2    12      16.4    12.4    14.7\n 5 2017  127586      100    10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 6 2016  126224      100    10.4     9       9.2    12.3    16.7    12.2    15  \n 7 2015  125819      100    10.6    10       9.6    12.1    16.1    12.4    14.9\n 8 2014  124587      100    11.4    10.5     9.6    12.6    16.4    12.1    14  \n 9 2013… 123931      100    11.4    10.3     9.5    12.5    16.8    12      13.9\n10 2013… 122952      100    11.3    10.4     9.7    13.1    17      12.5    13.6\n# … with 373 more rows, 6 more variables: `$150,000 to $199,999` <dbl>,\n#   `$200,000 and over` <dbl>, Median_Income_Estimate <dbl>,\n#   Median_Income_MOE <dbl>, Mean_Income_Estimate <chr>, Mean_Income_MOE <chr>,\n#   and abbreviated variable names ¹​Household_Number_Thousands,\n#   ²​Total_Percent_Distribution, ³​`Under $15,000`, ⁴​`$15,000 to $24,999`,\n#   ⁵​`$25,000 to $34,999`, ⁶​`35,000 to $49,999`, ⁷​`$50,000 to $74,999`,\n#   ⁸​`$75,000 to $99,999`, ⁹​`$100,000 to $149,999`\n```\n:::\n:::\n\n\nSince the “USA Households\\*.xlsx” data set is in Excel format, I am using the 'readxl' package for reading the data. After reading, the data is stored in a dataframe “usa_data\". The first three rows in the dataframe contains description about the data and the 4th and 5th row contains the column headings. I resolve this issue by skipping the first 5 rows while reading the data set and storing in a dataframe \"usa_data\" with the renamed column names.\n\n\n### Briefly describe the data\n\nThe USA household data contains information on the mean and median income grouped by Race and Hispanic Origin of householder for the period 1967 - 2019. The data is split into 12 different categories based on Races and we have the total number of households surveyed in a given year along with the total percentage distribution (100 for all observations), percentage distribution for various income levels, and the mean and median (estimated and margin of error) income. For some races, data is not available for all the years in the period 1967 - 2019.\n\n\n## Tidy Data and Mutate Variables (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here. Are there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\n\nThe data is not tidy and requires data cleaning. (Note: I renamed the column names while reading the data.) First, I removed the last 31 rows from the dataframe \"usa_data\" as they are just footnotes and not observations. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Removing the last 31 rows as they are just footnotes and not observations\nusa_data <- head(usa_data,-31)\nprint(usa_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 352 × 16\n   Year  House…¹ Total…² Under…³ $15,0…⁴ $25,0…⁵ 35,00…⁶ $50,0…⁷ $75,0…⁸ $100,…⁹\n   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL … <NA>         NA    NA      NA      NA      NA      NA      NA      NA  \n 2 2019  128451      100     9.1     8       8.3    11.7    16.5    12.3    15.5\n 3 2018  128579      100    10.1     8.8     8.7    12      17      12.5    15  \n 4 2017… 127669      100    10       9.1     9.2    12      16.4    12.4    14.7\n 5 2017  127586      100    10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 6 2016  126224      100    10.4     9       9.2    12.3    16.7    12.2    15  \n 7 2015  125819      100    10.6    10       9.6    12.1    16.1    12.4    14.9\n 8 2014  124587      100    11.4    10.5     9.6    12.6    16.4    12.1    14  \n 9 2013… 123931      100    11.4    10.3     9.5    12.5    16.8    12      13.9\n10 2013… 122952      100    11.3    10.4     9.7    13.1    17      12.5    13.6\n# … with 342 more rows, 6 more variables: `$150,000 to $199,999` <dbl>,\n#   `$200,000 and over` <dbl>, Median_Income_Estimate <dbl>,\n#   Median_Income_MOE <dbl>, Mean_Income_Estimate <chr>, Mean_Income_MOE <chr>,\n#   and abbreviated variable names ¹​Household_Number_Thousands,\n#   ²​Total_Percent_Distribution, ³​`Under $15,000`, ⁴​`$15,000 to $24,999`,\n#   ⁵​`$25,000 to $34,999`, ⁶​`35,000 to $49,999`, ⁷​`$50,000 to $74,999`,\n#   ⁸​`$75,000 to $99,999`, ⁹​`$100,000 to $149,999`\n```\n:::\n:::\n\n\nCurrently, the dataset does not have a separate column for \"Race\". The \"Race\" was mentioned in the \"Year\" column (the remaining columns were empty for such observations) and were inserted as separators for different race groups in the data. So, I created a new column for \"Race\" (muatated variable) and filled it with non-numerical values from \"Year\" column. I also filled the empty values in \"Race\" with the previous value in that column. Then, I removed the rows from the dataset which had Race value in the \"Year\" column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creating new column for Race and filling the empty values for Race with the previous value in that column\n\nusa_data <- usa_data%>%\n  mutate(Race = case_when(str_detect(Year,(\"([A-Z])\")) ~ Year))%>%\n  fill(Race, .direction = \"down\")\n\n# Removing the rows from usa_data which has non-numerical values in Year column (these rows have Race value in the Year column and were inserted as separators for different Race groups)\n\nusa_data <- usa_data%>%\n  filter(!str_detect(Year,(\"([A-Z])\")))\n\nusa_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 340 × 17\n   Year  House…¹ Total…² Under…³ $15,0…⁴ $25,0…⁵ 35,00…⁶ $50,0…⁷ $75,0…⁸ $100,…⁹\n   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 2019  128451      100     9.1     8       8.3    11.7    16.5    12.3    15.5\n 2 2018  128579      100    10.1     8.8     8.7    12      17      12.5    15  \n 3 2017… 127669      100    10       9.1     9.2    12      16.4    12.4    14.7\n 4 2017  127586      100    10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 5 2016  126224      100    10.4     9       9.2    12.3    16.7    12.2    15  \n 6 2015  125819      100    10.6    10       9.6    12.1    16.1    12.4    14.9\n 7 2014  124587      100    11.4    10.5     9.6    12.6    16.4    12.1    14  \n 8 2013… 123931      100    11.4    10.3     9.5    12.5    16.8    12      13.9\n 9 2013… 122952      100    11.3    10.4     9.7    13.1    17      12.5    13.6\n10 2012  122459      100    11.4    10.6    10.1    12.5    17.4    12      13.9\n# … with 330 more rows, 7 more variables: `$150,000 to $199,999` <dbl>,\n#   `$200,000 and over` <dbl>, Median_Income_Estimate <dbl>,\n#   Median_Income_MOE <dbl>, Mean_Income_Estimate <chr>, Mean_Income_MOE <chr>,\n#   Race <chr>, and abbreviated variable names ¹​Household_Number_Thousands,\n#   ²​Total_Percent_Distribution, ³​`Under $15,000`, ⁴​`$15,000 to $24,999`,\n#   ⁵​`$25,000 to $34,999`, ⁶​`35,000 to $49,999`, ⁷​`$50,000 to $74,999`,\n#   ⁸​`$75,000 to $99,999`, ⁹​`$100,000 to $149,999`\n```\n:::\n:::\n\n\nNext, I removed the footnote number next to the year value and race value from the columns \"Year\" and \"Race\" respectively as they had no purpose in visualization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Removing the footnote number next to the year value in the \"Year\" column\n\nusa_data <- usa_data%>%\n  mutate(Year = str_remove(Year, \" .*\"))\n\n# Removing the footnote number next to the race value in the \"Race\" column\n\nusa_data <- usa_data%>%\n  mutate(Race = str_remove(Race, \"[0-9]+\"))\n\nusa_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 340 × 17\n   Year  House…¹ Total…² Under…³ $15,0…⁴ $25,0…⁵ 35,00…⁶ $50,0…⁷ $75,0…⁸ $100,…⁹\n   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 2019  128451      100     9.1     8       8.3    11.7    16.5    12.3    15.5\n 2 2018  128579      100    10.1     8.8     8.7    12      17      12.5    15  \n 3 2017  127669      100    10       9.1     9.2    12      16.4    12.4    14.7\n 4 2017  127586      100    10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 5 2016  126224      100    10.4     9       9.2    12.3    16.7    12.2    15  \n 6 2015  125819      100    10.6    10       9.6    12.1    16.1    12.4    14.9\n 7 2014  124587      100    11.4    10.5     9.6    12.6    16.4    12.1    14  \n 8 2013  123931      100    11.4    10.3     9.5    12.5    16.8    12      13.9\n 9 2013  122952      100    11.3    10.4     9.7    13.1    17      12.5    13.6\n10 2012  122459      100    11.4    10.6    10.1    12.5    17.4    12      13.9\n# … with 330 more rows, 7 more variables: `$150,000 to $199,999` <dbl>,\n#   `$200,000 and over` <dbl>, Median_Income_Estimate <dbl>,\n#   Median_Income_MOE <dbl>, Mean_Income_Estimate <chr>, Mean_Income_MOE <chr>,\n#   Race <chr>, and abbreviated variable names ¹​Household_Number_Thousands,\n#   ²​Total_Percent_Distribution, ³​`Under $15,000`, ⁴​`$15,000 to $24,999`,\n#   ⁵​`$25,000 to $34,999`, ⁶​`35,000 to $49,999`, ⁷​`$50,000 to $74,999`,\n#   ⁸​`$75,000 to $99,999`, ⁹​`$100,000 to $149,999`\n```\n:::\n:::\n\n\nFollowing that, I removed the \"Total_Percent_Distribution\" column form the dataset as the value was same (100) for all the observations and had no purpose in visualization.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove the \"Total_Percent_Distribution\" column as that value is 100 for all observations\n\nusa_data <- usa_data%>%\n  subset(select = -c(3))\n\nusa_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 340 × 16\n   Year  House…¹ Under…² $15,0…³ $25,0…⁴ 35,00…⁵ $50,0…⁶ $75,0…⁷ $100,…⁸ $150,…⁹\n   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 2019  128451      9.1     8       8.3    11.7    16.5    12.3    15.5     8.3\n 2 2018  128579     10.1     8.8     8.7    12      17      12.5    15       7.2\n 3 2017  127669     10       9.1     9.2    12      16.4    12.4    14.7     7.3\n 4 2017  127586     10.1     9.1     9.2    11.9    16.3    12.6    14.8     7.5\n 5 2016  126224     10.4     9       9.2    12.3    16.7    12.2    15       7.2\n 6 2015  125819     10.6    10       9.6    12.1    16.1    12.4    14.9     7.1\n 7 2014  124587     11.4    10.5     9.6    12.6    16.4    12.1    14       6.6\n 8 2013  123931     11.4    10.3     9.5    12.5    16.8    12      13.9     6.7\n 9 2013  122952     11.3    10.4     9.7    13.1    17      12.5    13.6     6.3\n10 2012  122459     11.4    10.6    10.1    12.5    17.4    12      13.9     6.3\n# … with 330 more rows, 6 more variables: `$200,000 and over` <dbl>,\n#   Median_Income_Estimate <dbl>, Median_Income_MOE <dbl>,\n#   Mean_Income_Estimate <chr>, Mean_Income_MOE <chr>, Race <chr>, and\n#   abbreviated variable names ¹​Household_Number_Thousands, ²​`Under $15,000`,\n#   ³​`$15,000 to $24,999`, ⁴​`$25,000 to $34,999`, ⁵​`35,000 to $49,999`,\n#   ⁶​`$50,000 to $74,999`, ⁷​`$75,000 to $99,999`, ⁸​`$100,000 to $149,999`,\n#   ⁹​`$150,000 to $199,999`\n```\n:::\n:::\n\n\nFinally, I reordered the columns in the dataframe in order to have \"Race\" as the first column followed by \"Year\" and the remaining columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reorder the columns in the usa_data dataframe so that \"Race\" is the first column followed by \"Year\"\n\nusa_data <- usa_data%>%\n  subset(select=c(16, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))\n\nusa_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 340 × 16\n   Race    Year  House…¹ Under…² $15,0…³ $25,0…⁴ 35,00…⁵ $50,0…⁶ $75,0…⁷ $100,…⁸\n   <chr>   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL RA… 2019  128451      9.1     8       8.3    11.7    16.5    12.3    15.5\n 2 ALL RA… 2018  128579     10.1     8.8     8.7    12      17      12.5    15  \n 3 ALL RA… 2017  127669     10       9.1     9.2    12      16.4    12.4    14.7\n 4 ALL RA… 2017  127586     10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 5 ALL RA… 2016  126224     10.4     9       9.2    12.3    16.7    12.2    15  \n 6 ALL RA… 2015  125819     10.6    10       9.6    12.1    16.1    12.4    14.9\n 7 ALL RA… 2014  124587     11.4    10.5     9.6    12.6    16.4    12.1    14  \n 8 ALL RA… 2013  123931     11.4    10.3     9.5    12.5    16.8    12      13.9\n 9 ALL RA… 2013  122952     11.3    10.4     9.7    13.1    17      12.5    13.6\n10 ALL RA… 2012  122459     11.4    10.6    10.1    12.5    17.4    12      13.9\n# … with 330 more rows, 6 more variables: `$150,000 to $199,999` <dbl>,\n#   `$200,000 and over` <dbl>, Median_Income_Estimate <dbl>,\n#   Median_Income_MOE <dbl>, Mean_Income_Estimate <chr>, Mean_Income_MOE <chr>,\n#   and abbreviated variable names ¹​Household_Number_Thousands,\n#   ²​`Under $15,000`, ³​`$15,000 to $24,999`, ⁴​`$25,000 to $34,999`,\n#   ⁵​`35,000 to $49,999`, ⁶​`$50,000 to $74,999`, ⁷​`$75,000 to $99,999`,\n#   ⁸​`$100,000 to $149,999`\n```\n:::\n:::\n\n\nI checked for missing/null data in the \"usa_data\" dataframe and found that there are no NA or NULL values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Check for missing/null data in the hotel_data\nsum(is.na(usa_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\nsum(is.null(usa_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\nI found that there are few columns which have numerical values but datatype assigned as \"character\" Hence, I looked further into those columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(usa_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [340 × 16] (S3: tbl_df/tbl/data.frame)\n $ Race                      : chr [1:340] \"ALL RACES\" \"ALL RACES\" \"ALL RACES\" \"ALL RACES\" ...\n $ Year                      : chr [1:340] \"2019\" \"2018\" \"2017\" \"2017\" ...\n $ Household_Number_Thousands: chr [1:340] \"128451\" \"128579\" \"127669\" \"127586\" ...\n $ Under $15,000             : num [1:340] 9.1 10.1 10 10.1 10.4 10.6 11.4 11.4 11.3 11.4 ...\n $ $15,000 to $24,999        : num [1:340] 8 8.8 9.1 9.1 9 10 10.5 10.3 10.4 10.6 ...\n $ $25,000 to $34,999        : num [1:340] 8.3 8.7 9.2 9.2 9.2 9.6 9.6 9.5 9.7 10.1 ...\n $ 35,000 to $49,999         : num [1:340] 11.7 12 12 11.9 12.3 12.1 12.6 12.5 13.1 12.5 ...\n $ $50,000 to $74,999        : num [1:340] 16.5 17 16.4 16.3 16.7 16.1 16.4 16.8 17 17.4 ...\n $ $75,000 to $99,999        : num [1:340] 12.3 12.5 12.4 12.6 12.2 12.4 12.1 12 12.5 12 ...\n $ $100,000 to $149,999      : num [1:340] 15.5 15 14.7 14.8 15 14.9 14 13.9 13.6 13.9 ...\n $ $150,000 to $199,999      : num [1:340] 8.3 7.2 7.3 7.5 7.2 7.1 6.6 6.7 6.3 6.3 ...\n $ $200,000 and over         : num [1:340] 10.3 8.8 8.9 8.5 8 7.2 6.8 6.9 6 5.9 ...\n $ Median_Income_Estimate    : num [1:340] 68703 64324 63761 64007 62898 ...\n $ Median_Income_MOE         : num [1:340] 904 704 552 575 764 ...\n $ Mean_Income_Estimate      : chr [1:340] \"98088\" \"91652\" \"91406\" \"89922\" ...\n $ Mean_Income_MOE           : chr [1:340] \"1042\" \"914\" \"979\" \"892\" ...\n```\n:::\n:::\n\n\nThe datatype \"character\" columns \"Household_Number_Thousands\", \"Mean_Income_Estimate\", and \"Mean_Income_MOE\" have numerical values. I applied the table() to these columns to see which value is non-numerical and whether they can be modified or removed. The columns had few instances of \"N\" value indicating that the data may not be available. I decided to drop the observations with \"N\" value from the dataframe and changed the datatype to \"numeric\" for these columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Checking whether the columns \"Household_Number_Thousands\", \"Mean_Income_Estimate\", and \"Mean_Income_MOE\" have non-numerical values\ncol <- c(\"Household_Number_Thousands\", \"Mean_Income_Estimate\",\"Mean_Income_MOE\")\nfor (c in col){\n    print(c)\n    print(table(usa_data[,c]))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Household_Number_Thousands\"\nHousehold_Number_Thousands\n100065 100113  10034 100528 100568 101018  10192 102528 103874  10486  10499 \n     1      1      1      1      1      1      1      1      1      1      1 \n 10561 106434  10671 108209 109297  11083 111278 112000  11269  11281 113343 \n     1      1      1      1      1      1      1      1      1      1      1 \n 11339 114384  11577 116011  11655 116783  11693 117181 117538 119927 121084 \n     1      1      1      1      1      1      1      1      1      1      1 \n 12109  12178 122459 122952 123931 124587  12474  12519  12579 125819 126224 \n     1      1      1      1      1      1      1      1      1      1      1 \n127586 127669  12838 128451 128579  12973  13174  13298  13315  13339  13425 \n     1      1      1      1      1      1      1      1      1      1      1 \n 13465  13629  13778  13809  13969  14002  14151  14354  14399  14435  14551 \n     1      1      1      1      1      1      1      1      1      1      1 \n 14595  14709  14730  14939  14976  15056  15212  15265  15583  15589  15811 \n     1      1      1      1      1      1      1      1      1      1      1 \n 15872  15909  16009  16088  16108  16165  16239  16437  16539  16559  16667 \n     1      1      1      1      1      1      1      1      1      1      1 \n 16723  16733  16855  16915  16997  17019  17054  17167  17198  17318  17322 \n     1      1      1      1      1      1      1      1      1      1      1 \n 17336  17505  17667  17758  17801  17813  18055  18095   1913   1958   1988 \n     1      1      1      1      1      1      1      1      1      1      1 \n  2040   2094   2233   2262   2655   2722   2777   2897   2948   2998   3081 \n     1      1      1      1      1      1      1      1      1      1      1 \n  3125   3291   3304   3308   3684   3742   3906   3917   3963   3980   4040 \n     1      1      1      1      1      1      1      1      1      1      1 \n  4071   4079   4085   4123   4235   4273   4326   4346   4454   4494   4500 \n     1      1      1      1      1      1      1      1      1      1      1 \n  4573   4664   4687   4715   4805   4883   4940   5212   5213   5374   5418 \n     1      1      1      1      1      1      1      1      1      1      1 \n 54188  55394   5550   5560  56248   5642   5705   5728  57575   5759  58005 \n     1      1      1      1      1      1      1      1      1      1      1 \n  5818   5870   5872   5910  59236   5933  59463  60164   6040   6053  60618 \n     1      1      1      1      1      1      1      1      1      1      1 \n 60813   6111  61533   6160   6180  61965   6220  62214  62365  62984   6328 \n     1      1      1      1      1      1      1      1      1      1      1 \n  6333  63401  63721   6379   6392  64392  64778  64836  65353   6578   6640 \n     1      1      1      1      1      1      1      1      1      1      1 \n 66676  66934  67203   6735   6750  68028   6809  68106  68251   6853  68996 \n     1      1      1      1      2      1      1      1      1      1      1 \n 69214  69648   6981  69859   7040  70586  70766   7114  71163   7124   7153 \n     1      1      1      1      1      1      1      1      1      1      1 \n 71540  71872  72067   7263  72845  72867  73120  73182   7334   7362  74067 \n     1      1      1      1      1      1      1      1      1      1      1 \n 74142   7416  74376  74495   7489  75035  75107  75328  75625  75697  76030 \n     1      1      1      1      1      1      1      1      1      1      1 \n 76576  76932  77004  77240  77284  77330   7735   7776  77936  78519  78577 \n     1      1      1      1      1      1      1      1      1      1      1 \n  7939  79734   7977  79819  80163  80527   8066  80776  80818  80968  81148 \n     1      1      1      1      1      1      1      1      1      1      1 \n 81166  81628  81675  81795  82003   8225  82368  82387  82675  82765  82884 \n     1      1      1      1      1      1      1      1      1      1      1 \n 83158  83314  83527  83573  83641  83737  83792  83918  84228  84387  84432 \n     1      1      1      1      1      1      1      1      1      1      1 \n 84445  84511  84681  84706  84727  84868  85059  85407   8586   8590  86106 \n     1      1      1      1      1      1      1      1      1      1      1 \n 86789  87212  88458   8847  88893   8916  89479   8961  90030   9060  90682 \n     1      1      1      1      1      1      1      1      1      1      1 \n 91124  91645  91962   9236  92830  92880  93347  93588  94312  94705   9480 \n     1      1      1      1      1      1      1      1      1      1      1 \n 95112  95297  95489  95669   9579  96306  96426  96964  97107  97705  97774 \n     1      1      1      1      1      1      1      1      1      1      1 \n  9797  98679  98807  98990   9922  99313  99400  99627      N \n     1      1      1      1      1      1      1      1      1 \n[1] \"Mean_Income_Estimate\"\nMean_Income_Estimate\n100041 100399 101732 101962 102300 102588 102752 103291 103725 103815 104521 \n     1      1      1      1      1      1      1      1      1      1      1 \n104980 105086 105110 105461 105899 106088 106659 107635 108375 108472 111112 \n     1      1      1      1      1      1      1      1      1      1      1 \n111256 111257 112229 113449 113756 113870 115051 118603 118800 119004 119325 \n     1      1      1      1      1      1      1      1      1      1      1 \n121066 121987 131643 133111  34878  37392  38948  39016  39836  40063  40195 \n     1      1      1      1      1      1      1      1      1      1      1 \n 40211  40468  40609  41108  41362  41382  41534  41585  42223  42828  43373 \n     1      1      1      1      1      1      1      1      1      1      1 \n 43933  45180  45585  45596  45683  45971  46327  46832  47208  47415  47572 \n     1      1      1      1      1      1      1      1      1      1      1 \n 47814  47901  48359  48373  48421  48801  49392  49586  49657  49730  50073 \n     1      1      1      1      1      1      1      1      1      1      1 \n 50279  50802  51625  51748  51979  52140  52520  52829  52837  52921  53000 \n     1      1      1      1      1      1      1      1      1      1      1 \n 53216  53253  53466  53509  53616  53667  53725  53832  54048  54118  54158 \n     1      1      1      1      1      1      1      1      1      1      1 \n 54556  54640  55001  55129  55281  55300  55352  55378  55389  55463  55563 \n     1      1      1      1      1      1      1      1      1      1      1 \n 55576  55713  55800  55880  55919  56071  56177  56572  56804  56812  57018 \n     1      1      1      1      1      1      1      1      1      1      1 \n 57173  57361  57478  57638  57826  57885  58325  58606  58609  58652  58926 \n     1      1      1      1      1      1      1      1      1      1      1 \n 59004  59140  59203  59595  59639  59698  59728  60069  60177  60393  60439 \n     1      1      1      1      1      1      1      1      1      1      1 \n 60521  60731  60883  60988  61109  61133  61192  61200  61387  61393  61518 \n     1      1      1      1      1      1      1      1      1      1      1 \n 61677  61851  61859  61904  61921  61962  62044  62050  62170  62181  62192 \n     1      1      1      1      1      1      1      1      1      1      1 \n 62244  62386  62394  62662  62700  62826  63337  63485  63667  63940  63967 \n     1      1      1      1      1      1      1      1      1      1      1 \n 64245  64257  64262  64286  64300  64385  64410  64467  64546  64607  64761 \n     1      1      1      1      1      1      1      1      1      1      1 \n 64911  65002  65071  65124  65265  65471  65557  65765  65851  66043  66309 \n     1      1      1      1      1      1      1      1      1      1      1 \n 66463  66553  66950  67092  67208  67724  67924  68376  68644  68688  68754 \n     1      1      1      1      1      1      1      1      1      1      1 \n 69568  69613  69968  70092  70568  70877  71158  71182  71252  71548  72230 \n     1      1      1      1      1      1      1      1      1      1      1 \n 72379  72552  72710  72904  72958  72969  73816  73900  74029  74109  74385 \n     1      1      1      1      1      1      1      1      1      1      1 \n 74557  75058  75096  75408  75623  75669  75941  76705  77070  77462  77617 \n     1      1      1      1      1      1      1      1      1      1      1 \n 78089  79032  79175  79192  79375  79510  79750  79852  80636  81196  81447 \n     1      1      1      1      1      1      1      1      1      1      1 \n 81517  81870  82038  82163  82305  82442  82660  82696  82741  82946  83015 \n     1      1      1      1      1      1      1      1      1      1      1 \n 83127  83368  83568  83915  84053  84254  84257  84263  84617  84740  84952 \n     1      1      1      1      1      1      1      1      1      1      1 \n 85059  85215  85277  85346  85352  85533  85551  85740  85816  86173  86562 \n     1      1      1      1      1      1      1      1      1      1      1 \n 86650  86838  86932  87216  87315  87484  87592  87781  87842  87944  88206 \n     1      1      1      1      1      1      1      1      1      1      1 \n 88213  88298  88517  88539  88578  88731  89021  89142  89292  89593  89922 \n     1      1      1      1      1      1      1      1      1      1      1 \n 89953  90028  90178  90389  90456  90897  91195  91406  91652  91988  92045 \n     1      1      1      1      1      1      1      1      1      1      1 \n 92292  92355  93480  93830  94648  95448  95624  95650  96720  97466  97501 \n     1      1      1      1      1      1      1      1      1      1      1 \n 97564  97725  98088  98371  99007  99394  99761  99821  99871      N \n     1      1      1      1      1      1      1      1      1      1 \n[1] \"Mean_Income_MOE\"\nMean_Income_MOE\n1004 1010 1014 1017 1023 1030 1032 1033 1041 1042 1046 1048 1052 1057 1067 1071 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n1083 1088 1101 1102 1113 1124 1126 1128 1134 1141 1166 1167 1179 1182 1191 1192 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    1    1 \n1201 1210 1211 1212 1213 1229 1230 1232 1240 1252 1276 1281 1296 1299 1307 1327 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n1333 1335 1336 1352 1354 1358 1359 1360 1370 1371 1382 1395 1398 1400 1407 1409 \n   2    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1415 1416 1429 1443 1449 1482 1486 1498 1505 1528 1533 1539 1550 1563 1575 1577 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1580 1593 1596 1600 1618 1621 1630 1633 1640 1648 1673 1698 1718 1815 1831 1882 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1889 1898 1919 1924 2105 2107 2143 2218 2392 2737 2840  287 2912 2940 2943  297 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n3014  305 3050  306 3078  309 3097  310 3105 3108  311  314  316  319 3190 3202 \n   1    1    2    2    1    1    1    2    1    1    1    1    2    1    1    1 \n3207  325 3278  330 3303  335  336 3369  337  339 3414  342 3427  343 3476 3478 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n3592 3625  370 3700  375  378 3787 3795  383 3831 3847 3885  390 3904 3953 3973 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  403  409 4096 4112 4119 4130  415  416 4170 4214 4289  429  430 4325 4343 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n4373  439 4440  445 4497 4517  458  459  462  463  467  471  472  474  475  477 \n   1    2    1    1    1    1    1    1    1    1    1    1    2    1    2    1 \n 478 4783  480  487  488  494  495  499  503  507  509  516  518  519  521  522 \n   1    1    2    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 523 5273  533  534  537 5430  544  545  551  552  563  566  568  572  574  578 \n   1    1    1    1    2    1    1    2    2    1    1    2    1    1    1    2 \n5814  583  584  588  589  593  594  600  602  607  609 6125  619  621  622  624 \n   1    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 634  640  644  648  653  654  659  663  671  674  676  679  681  690  696  707 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 708  715  718  719  721  724  729  738  745  762 7638  771  773  777  783  791 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 793  794  801 8076  813  821  822  825  827  828  834  838  851  854  867  879 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 884  889  892  896  902  914  930  931  936  938  943  945  956  966  972  975 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 979  982  984  986  987  995    N \n   2    1    1    2    1    1    3 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove rows from the dataset that have \"N\" value\nusa_data <- usa_data%>%\n  filter(across(everything(),~ . !=\"N\"))\nusa_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 337 × 16\n   Race    Year  House…¹ Under…² $15,0…³ $25,0…⁴ 35,00…⁵ $50,0…⁶ $75,0…⁷ $100,…⁸\n   <chr>   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL RA… 2019  128451      9.1     8       8.3    11.7    16.5    12.3    15.5\n 2 ALL RA… 2018  128579     10.1     8.8     8.7    12      17      12.5    15  \n 3 ALL RA… 2017  127669     10       9.1     9.2    12      16.4    12.4    14.7\n 4 ALL RA… 2017  127586     10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 5 ALL RA… 2016  126224     10.4     9       9.2    12.3    16.7    12.2    15  \n 6 ALL RA… 2015  125819     10.6    10       9.6    12.1    16.1    12.4    14.9\n 7 ALL RA… 2014  124587     11.4    10.5     9.6    12.6    16.4    12.1    14  \n 8 ALL RA… 2013  123931     11.4    10.3     9.5    12.5    16.8    12      13.9\n 9 ALL RA… 2013  122952     11.3    10.4     9.7    13.1    17      12.5    13.6\n10 ALL RA… 2012  122459     11.4    10.6    10.1    12.5    17.4    12      13.9\n# … with 327 more rows, 6 more variables: `$150,000 to $199,999` <dbl>,\n#   `$200,000 and over` <dbl>, Median_Income_Estimate <dbl>,\n#   Median_Income_MOE <dbl>, Mean_Income_Estimate <chr>, Mean_Income_MOE <chr>,\n#   and abbreviated variable names ¹​Household_Number_Thousands,\n#   ²​`Under $15,000`, ³​`$15,000 to $24,999`, ⁴​`$25,000 to $34,999`,\n#   ⁵​`35,000 to $49,999`, ⁶​`$50,000 to $74,999`, ⁷​`$75,000 to $99,999`,\n#   ⁸​`$100,000 to $149,999`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Converting the datatype of \"Household_Number_Thousands\", \"Mean_Income_Estimate\", and \"Mean_Income_MOE\" columns from character to numeric\nusa_data <- usa_data%>%\n  mutate(Household_Number_Thousands = as.numeric(Household_Number_Thousands))%>%\n  mutate(Mean_Income_Estimate = as.numeric(Mean_Income_Estimate))%>%\n  mutate(Mean_Income_MOE = as.numeric(Mean_Income_MOE))\n```\n:::\n\n\n\n\nSanity Check: Make sure that the \"N\" values are removed from the columns \"Household_Number_Thousands\", \"Mean_Income_Estimate\", and \"Mean_Income_MOE\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sanity Check: Check that the columns \"Household_Number_Thousands\", \"Mean_Income_Estimate\", and \"Mean_Income_MOE\" have no non-numerical values\ncol <- c(\"Household_Number_Thousands\", \"Mean_Income_Estimate\",\"Mean_Income_MOE\")\nfor (c in col){\n    print(c)\n    print(table(usa_data[,c]))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Household_Number_Thousands\"\nHousehold_Number_Thousands\n  1913   1958   1988   2040   2094   2233   2262   2655   2722   2777   2897 \n     1      1      1      1      1      1      1      1      1      1      1 \n  2948   2998   3081   3125   3291   3304   3308   3684   3742   3906   3917 \n     1      1      1      1      1      1      1      1      1      1      1 \n  3963   3980   4040   4071   4079   4085   4123   4235   4273   4326   4346 \n     1      1      1      1      1      1      1      1      1      1      1 \n  4454   4494   4500   4573   4664   4687   4715   4805   4883   4940   5212 \n     1      1      1      1      1      1      1      1      1      1      1 \n  5213   5374   5418   5550   5560   5642   5705   5728   5759   5818   5870 \n     1      1      1      1      1      1      1      1      1      1      1 \n  5872   5910   5933   6040   6053   6111   6160   6180   6220   6328   6333 \n     1      1      1      1      1      1      1      1      1      1      1 \n  6379   6392   6578   6640   6735   6750   6809   6853   6981   7040   7114 \n     1      1      1      1      1      2      1      1      1      1      1 \n  7124   7153   7263   7334   7362   7416   7489   7735   7776   7939   7977 \n     1      1      1      1      1      1      1      1      1      1      1 \n  8066   8225   8586   8590   8847   8916   8961   9060   9236   9480   9579 \n     1      1      1      1      1      1      1      1      1      1      1 \n  9797   9922  10034  10192  10486  10499  10561  10671  11083  11269  11281 \n     1      1      1      1      1      1      1      1      1      1      1 \n 11339  11577  11655  11693  12109  12178  12474  12519  12579  12838  12973 \n     1      1      1      1      1      1      1      1      1      1      1 \n 13174  13298  13315  13339  13425  13465  13629  13778  13809  13969  14002 \n     1      1      1      1      1      1      1      1      1      1      1 \n 14151  14354  14399  14435  14551  14595  14709  14730  14939  14976  15056 \n     1      1      1      1      1      1      1      1      1      1      1 \n 15212  15265  15583  15589  15811  15872  15909  16009  16088  16108  16165 \n     1      1      1      1      1      1      1      1      1      1      1 \n 16239  16437  16539  16559  16667  16723  16733  16855  16915  16997  17019 \n     1      1      1      1      1      1      1      1      1      1      1 \n 17054  17167  17198  17318  17322  17336  17505  17667  17758  17801  17813 \n     1      1      1      1      1      1      1      1      1      1      1 \n 18055  18095  54188  55394  56248  57575  58005  59236  59463  60164  60618 \n     1      1      1      1      1      1      1      1      1      1      1 \n 60813  61533  61965  62214  62365  62984  63401  63721  64392  64778  64836 \n     1      1      1      1      1      1      1      1      1      1      1 \n 65353  66676  66934  67203  68028  68106  68251  68996  69214  69648  69859 \n     1      1      1      1      1      1      1      1      1      1      1 \n 70586  70766  71163  71540  71872  72067  72845  72867  73120  73182  74067 \n     1      1      1      1      1      1      1      1      1      1      1 \n 74142  74376  74495  75035  75107  75328  75625  75697  76030  76576  76932 \n     1      1      1      1      1      1      1      1      1      1      1 \n 77004  77284  77330  78519  78577  79734  79819  80163  80527  80776  80818 \n     1      1      1      1      1      1      1      1      1      1      1 \n 80968  81148  81166  81628  81675  81795  82003  82368  82387  82675  82765 \n     1      1      1      1      1      1      1      1      1      1      1 \n 82884  83158  83314  83527  83573  83641  83737  83792  83918  84228  84387 \n     1      1      1      1      1      1      1      1      1      1      1 \n 84432  84445  84511  84681  84706  84727  84868  85059  85407  86106  86789 \n     1      1      1      1      1      1      1      1      1      1      1 \n 87212  88458  88893  89479  90030  90682  91124  91645  91962  92830  92880 \n     1      1      1      1      1      1      1      1      1      1      1 \n 93347  93588  94312  94705  95112  95297  95489  95669  96306  96426  96964 \n     1      1      1      1      1      1      1      1      1      1      1 \n 97107  97705  97774  98679  98807  98990  99313  99400  99627 100065 100113 \n     1      1      1      1      1      1      1      1      1      1      1 \n100528 100568 101018 102528 103874 106434 108209 109297 111278 112000 113343 \n     1      1      1      1      1      1      1      1      1      1      1 \n114384 116011 116783 117181 117538 119927 121084 122459 122952 123931 124587 \n     1      1      1      1      1      1      1      1      1      1      1 \n125819 126224 127586 127669 128451 128579 \n     1      1      1      1      1      1 \n[1] \"Mean_Income_Estimate\"\nMean_Income_Estimate\n 34878  37392  38948  39016  39836  40063  40195  40211  40468  40609  41108 \n     1      1      1      1      1      1      1      1      1      1      1 \n 41362  41382  41534  41585  42223  42828  43373  43933  45180  45585  45596 \n     1      1      1      1      1      1      1      1      1      1      1 \n 45683  45971  46327  46832  47208  47415  47572  47814  47901  48359  48373 \n     1      1      1      1      1      1      1      1      1      1      1 \n 48421  48801  49392  49586  49657  49730  50073  50279  50802  51625  51748 \n     1      1      1      1      1      1      1      1      1      1      1 \n 51979  52140  52520  52829  52837  52921  53000  53216  53253  53466  53509 \n     1      1      1      1      1      1      1      1      1      1      1 \n 53616  53667  53725  53832  54048  54118  54158  54556  54640  55001  55129 \n     1      1      1      1      1      1      1      1      1      1      1 \n 55281  55300  55352  55378  55389  55463  55563  55576  55713  55800  55880 \n     1      1      1      1      1      1      1      1      1      1      1 \n 55919  56071  56177  56572  56804  56812  57018  57173  57361  57478  57638 \n     1      1      1      1      1      1      1      1      1      1      1 \n 57826  57885  58325  58606  58609  58652  58926  59004  59140  59203  59595 \n     1      1      1      1      1      1      1      1      1      1      1 \n 59639  59698  59728  60069  60177  60393  60439  60521  60731  60883  60988 \n     1      1      1      1      1      1      1      1      1      1      1 \n 61109  61133  61192  61200  61387  61393  61518  61677  61851  61859  61904 \n     1      1      1      1      1      1      1      1      1      1      1 \n 61921  61962  62044  62050  62170  62181  62192  62244  62386  62394  62662 \n     1      1      1      1      1      1      1      1      1      1      1 \n 62700  62826  63337  63485  63667  63940  63967  64245  64257  64262  64286 \n     1      1      1      1      1      1      1      1      1      1      1 \n 64300  64385  64410  64467  64546  64607  64761  64911  65002  65071  65124 \n     1      1      1      1      1      1      1      1      1      1      1 \n 65265  65471  65557  65765  65851  66043  66309  66463  66553  66950  67092 \n     1      1      1      1      1      1      1      1      1      1      1 \n 67208  67724  67924  68376  68644  68688  68754  69568  69613  69968  70092 \n     1      1      1      1      1      1      1      1      1      1      1 \n 70568  70877  71158  71182  71252  71548  72230  72379  72552  72710  72904 \n     1      1      1      1      1      1      1      1      1      1      1 \n 72958  72969  73816  73900  74029  74109  74385  74557  75058  75096  75408 \n     1      1      1      1      1      1      1      1      1      1      1 \n 75623  75669  75941  76705  77070  77462  77617  78089  79032  79175  79192 \n     1      1      1      1      1      1      1      1      1      1      1 \n 79375  79510  79750  79852  80636  81196  81447  81517  81870  82038  82305 \n     1      1      1      1      1      1      1      1      1      1      1 \n 82442  82660  82696  82741  82946  83015  83127  83368  83568  83915  84053 \n     1      1      1      1      1      1      1      1      1      1      1 \n 84254  84257  84263  84617  84740  84952  85059  85215  85277  85352  85533 \n     1      1      1      1      1      1      1      1      1      1      1 \n 85551  85740  85816  86173  86562  86650  86838  86932  87216  87315  87484 \n     1      1      1      1      1      1      1      1      1      1      1 \n 87592  87781  87842  87944  88206  88213  88298  88517  88539  88578  88731 \n     1      1      1      1      1      1      1      1      1      1      1 \n 89021  89142  89292  89593  89922  89953  90028  90178  90389  90456  90897 \n     1      1      1      1      1      1      1      1      1      1      1 \n 91195  91406  91652  91988  92045  92292  92355  93480  93830  94648  95448 \n     1      1      1      1      1      1      1      1      1      1      1 \n 95624  95650  96720  97466  97501  97564  97725  98088  98371  99007  99394 \n     1      1      1      1      1      1      1      1      1      1      1 \n 99761  99821  99871 100041 100399 101732 101962 102300 102588 102752 103291 \n     1      1      1      1      1      1      1      1      1      1      1 \n103725 103815 104521 104980 105086 105110 105461 105899 106088 106659 107635 \n     1      1      1      1      1      1      1      1      1      1      1 \n108375 108472 111112 111256 111257 112229 113449 113756 113870 115051 118603 \n     1      1      1      1      1      1      1      1      1      1      1 \n118800 119004 119325 121066 121987 131643 133111 \n     1      1      1      1      1      1      1 \n[1] \"Mean_Income_MOE\"\nMean_Income_MOE\n 287  297  305  306  309  310  311  314  316  319  325  330  335  336  337  339 \n   1    1    1    2    1    2    1    1    2    1    1    1    1    1    1    2 \n 342  343  370  375  378  383  390  401  403  409  415  416  429  430  439  445 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    2    1 \n 458  459  462  463  467  471  472  474  475  477  478  480  487  488  494  495 \n   1    1    1    1    1    1    2    1    2    1    1    2    1    1    1    1 \n 499  503  507  509  516  518  519  521  522  523  533  534  537  544  545  551 \n   1    2    1    2    1    1    1    1    1    1    1    1    2    1    2    2 \n 552  563  566  568  572  574  578  583  584  588  589  593  594  600  602  607 \n   1    1    2    1    1    1    2    1    1    1    1    1    1    1    1    1 \n 609  619  621  622  624  634  640  644  648  653  654  659  663  671  674  676 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 679  681  690  696  707  708  715  718  719  721  724  729  738  745  762  771 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 773  777  783  791  793  794  801  813  821  822  825  827  828  834  838  851 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 854  867  879  884  889  892  896  902  914  930  931  936  938  943  945  956 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 966  972  975  979  982  984  986  987  995 1004 1010 1014 1017 1023 1030 1032 \n   1    1    1    2    1    1    2    1    1    1    1    1    1    1    1    1 \n1033 1041 1042 1046 1048 1052 1057 1067 1071 1083 1088 1101 1102 1113 1124 1126 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1128 1134 1141 1166 1167 1179 1182 1191 1192 1201 1210 1211 1212 1213 1229 1230 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n1232 1240 1252 1276 1281 1296 1299 1307 1327 1333 1335 1336 1352 1354 1358 1359 \n   1    2    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1360 1370 1371 1382 1395 1398 1400 1407 1409 1415 1416 1429 1443 1449 1482 1486 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1498 1505 1528 1533 1539 1550 1563 1575 1577 1580 1593 1596 1600 1618 1621 1630 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1633 1640 1648 1673 1698 1718 1815 1831 1882 1889 1898 1919 1924 2105 2107 2143 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2218 2392 2737 2840 2912 2940 2943 3014 3050 3078 3097 3105 3108 3190 3202 3207 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n3278 3303 3369 3414 3427 3476 3478 3592 3625 3700 3787 3795 3831 3847 3885 3904 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n3953 3973 4096 4112 4119 4130 4170 4214 4289 4325 4343 4373 4440 4497 4517 4783 \n   1    1    1    2    1    2    1    1    1    1    1    1    1    1    1    1 \n5273 5430 5814 6125 7638 8076 \n   1    1    1    1    1    1 \n```\n:::\n:::\n\n\nSanity Check: Make sure that the range of years is from 1967 - 2019, there are 12 Race groups, and there are no footnote numbers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find number of distinct Year values\nn_distinct(usa_data$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 53\n```\n:::\n\n```{.r .cell-code}\n# Sanity check: Check that the unique Year values range from 1967 - 2019 after data cleaning \nunique(usa_data$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"2019\" \"2018\" \"2017\" \"2016\" \"2015\" \"2014\" \"2013\" \"2012\" \"2011\" \"2010\"\n[11] \"2009\" \"2008\" \"2007\" \"2006\" \"2005\" \"2004\" \"2003\" \"2002\" \"2001\" \"2000\"\n[21] \"1999\" \"1998\" \"1997\" \"1996\" \"1995\" \"1994\" \"1993\" \"1992\" \"1991\" \"1990\"\n[31] \"1989\" \"1988\" \"1987\" \"1986\" \"1985\" \"1984\" \"1983\" \"1982\" \"1981\" \"1980\"\n[41] \"1979\" \"1978\" \"1977\" \"1976\" \"1975\" \"1974\" \"1973\" \"1972\" \"1971\" \"1970\"\n[51] \"1969\" \"1968\" \"1967\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find number of distinct Race values\nn_distinct(usa_data$Race)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# Sanity check: Check that the unique Race values do not have any footnote numbers after data cleaning \nunique(usa_data$Race)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"ALL RACES\"                     \"WHITE ALONE \"                 \n [3] \"WHITE \"                        \"WHITE ALONE, NOT HISPANIC \"   \n [5] \"WHITE, NOT HISPANIC \"          \"BLACK ALONE OR IN COMBINATION\"\n [7] \"BLACK ALONE \"                  \"BLACK \"                       \n [9] \"ASIAN ALONE OR IN COMBINATION\" \"ASIAN ALONE \"                 \n[11] \"ASIAN AND PACIFIC ISLANDER \"   \"HISPANIC (ANY RACE) \"         \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Summary of usa_data\nlibrary(summarytools)\nprint(summarytools::dfSummary(usa_data,\n                        varnumbers = FALSE,\n                        plain.ascii  = FALSE, \n                        style        = \"grid\", \n                        graph.magnif = 0.60, \n                        valid.col    = FALSE),\n      method = 'render',\n      table.classes = 'table-condensed')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container st-container\">\n<h3>Data Frame Summary</h3>\n<h4>usa_data</h4>\n<strong>Dimensions</strong>: 337 x 16\n  <br/><strong>Duplicates</strong>: 0\n<br/>\n<table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline table-condensed\">\n  <thead>\n    <tr>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"left\">Race\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. ALL RACES</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. HISPANIC (ANY RACE)&thinsp;<div class='st-ws-char'>&#0183;</div></td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. BLACK&thinsp;<div class='st-ws-char'>&#0183;</div></td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. WHITE&thinsp;<div class='st-ws-char'>&#0183;</div></td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. WHITE, NOT HISPANIC&thinsp;<div class='st-ws-char'>&#0183;</div></td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. ASIAN ALONE&thinsp;<div class='st-ws-char'>&#0183;</div></td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. ASIAN ALONE OR IN COMBINA</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. BLACK ALONE&thinsp;<div class='st-ws-char'>&#0183;</div></td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. BLACK ALONE OR IN COMBINA</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. WHITE ALONE&thinsp;<div class='st-ws-char'>&#0183;</div></td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 2 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">55</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">16.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">50</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">14.8%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">35</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">10.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">35</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">10.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">28</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">8.3%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">20</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.9%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">20</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.9%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">20</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.9%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">20</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.9%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">20</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">5.9%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">34</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">10.1%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAABsAAACiBAMAAABCP6vbAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYnhCP+ZgAAAGNJREFUSMdjYKAMKEGAApSrbAwGg4yL5khBCBDAzoUqFkAxymhwc9HcjM1HCC5Ir9Fg56K5eUT4SBBFr9Gg56K5mWC2EkQxymgQctEcOQx8RJIHR300GLgjzUdDsWxHcyS5AABVCpStxw8wTwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0xMi0yMVQwNTo1NDozOSswMDowMDfPbogAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMTItMjFUMDU6NTQ6MzkrMDA6MDBGktY0AAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Year\n[character]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1. 2013</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2. 2017</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3. 2002</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">4. 2003</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5. 2004</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6. 2005</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7. 2006</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">8. 2007</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">9. 2008</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">10. 2009</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">[ 43 others ]</td></tr></table></td>\n      <td align=\"left\" style=\"padding:0;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">16</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">4.7%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">16</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">4.7%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">8</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">2.4%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0 5px 0 7px;margin:0;border:0\" align=\"right\">241</td><td style=\"padding:0 2px 0 0;border:0;\" align=\"left\">(</td><td style=\"padding:0;border:0\" align=\"right\">71.5%</td><td style=\"padding:0 4px 0 2px;border:0\" align=\"left\">)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAE0AAACiBAMAAAD2NV3UAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYnhCP+ZgAAAHdJREFUWMPt0sENgCAMRmFGsBtgHYH9d+Oi8WJoTYi25P3nLwTllRJ/qruMtp3uaLhIzvtuYuyto5e13eyujOPu++FSOu/7isw9L/p/wT07esH92YvX0VVORy+4DF3Ry9qOXnD0gsvSi9epsXp9RxsP963zvlvkdeszk8qEI0OiAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTEyLTIxVDA1OjU0OjM5KzAwOjAwN89uiAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0xMi0yMVQwNTo1NDozOSswMDowMEaS1jQAAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Household_Number_Thousands\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 45365.7 (40375)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1913 &le; 17198 &le; 128579</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 75186 (0.9)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">336 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAHZJREFUSMft1t0JgDAMBOCuoBt43cDsv5uprYiFYoKIGO7IS3++vLSUphQjAJbJlAayCAHBf4DecLiA1kpAQBAdzP3TcAv6WYLHoByCD+iU1uXnMgao7fcSC8jHboKXQTl5I0CNDoygrY+BdvOBc8NnAOakGNkAu7gASmY/VNwAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDCokiJCAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAw2c+a/gAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Under $15,000\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 13.1 (5.2)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">6.3 &le; 11 &le; 27.2</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 7.2 (0.4)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">142 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAH1JREFUSMft1WEKgCAMBWCvYDfIbtDuf7c2SgjZnOuXyXvQD8Ev2UMqpTWSOYWT3bzAQXQCAPwH+Fe8AeSeAgAAAABwf1/3EOBnXrApv4s+UEp7gLwqBHgzGaBp2QZyqNKBDYzSdKCMVAvTgeGHQV1OCGSWEJDlV1CGk9bIBfdFDG5bOvw+AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAwqJIiQgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0xMi0yMVQwNTo1NDo0MCswMDowMNnPmv4AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">$15,000 to $24,999\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 10.8 (2.7)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5 &le; 10.1 &le; 17.7</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 3.8 (0.3)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">104 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAJVJREFUSMft1NkNwCAIAFBXsBsUNyj771YU45GUBJraDwPxp8rziNQQ9og4BgCcUYonkBAdOHDgYDGQnyYByIs4cMDgoKqyAcRLD/L0MoC2eAeULYPUhkwg78IGsGRvB6YnRANwLKwZlJu1AB79CwBXHnf1c8ugfdeu9aCWvx7U8n8L+C8wgDHhS0AbsQFq/QzKCHvEDaPJD8d6iityAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAwqJIiQgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0xMi0yMVQwNTo1NDo0MCswMDowMNnPmv4AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">$25,000 to $34,999\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 10.1 (2.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5 &le; 9.9 &le; 15.5</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2.7 (0.2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">87 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAItJREFUSMft1g0KgDAIBlCvsG7QdoN5/7s1cYENIS36YfjBiMBHROYGMEfSMbllTWp0UBAxQIAA04GFhoELtEsNEOAqoI4jQI1nA62q8KoBHgPDoeAcDBPnDuhDSAHyrCJA4TdUgByEr4Pe03YgKr4Gmf9LO1Aq/g/27c4Meh/4AD3FBehWfAdbYI5sPTEdDQLaWrMAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDCokiJCAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAw2c+a/gAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">35,000 to $49,999\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 13.5 (2.2)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">7.7 &le; 13.8 &le; 20.6</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2.3 (0.2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">92 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAIJJREFUSMft1tsNgCAMBVBW0BHKBnT/3UQj0AdB6x/YG75MT9poEwxhjWyd7ACgn44AYvoZyK/IBiImBw5mAHm3bSAiOnAwBPpOeQC6iYNlgdgOBqCEAtGEgauuHgdzgPKBO4BuRwO8mgHa5CtQ80hQp7qBqpagNjGB82+8jfQyYY0c0bIOSshmZOwAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDCokiJCAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAw2c+a/gAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">$50,000 to $74,999\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 18 (2.4)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">12.9 &le; 17.5 &le; 25.8</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2.9 (0.1)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">92 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAIFJREFUSMft1NsNgCAMBVBWwA0sG9D9d5NYg+UhFBL9wN4QvnogQIMxa8SyAMBuH1MBDlHBK6DxFHXQ2ESBAgUKPgbhCxsDVD0D4MwAcOgRvYI1Qew8KWDVs6Dsvw4oTR9kRgT4Yf4FNrqrAUD7SEFYnuYbpJ2XgzguUFQLgDBmjRzC8wrVLnIsVwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0xMi0yMVQwNTo1NDo0MCswMDowMKiSIkIAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDDZz5r+AAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">$75,000 to $99,999\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 12.2 (2.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">5.5 &le; 12.6 &le; 16.3</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 3.3 (0.2)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">86 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAIJJREFUSMft1lEOgCAIBmCukDeobhD3v1sxmMaWCVsPxvhf3JJvoQ9MgBhZOtk4a/syADvigYgJEiRIMBugYeYCtHwKWgdG0PYTvAO+WQfgEh+4fuIDUvk/UOpRraCWBQTyCrIDGU8JZgQ0hV1A7Y9A0UPiCVADAlQvXUDLDdgCMXICaCQphP/ExSMAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDCokiJCAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAw2c+a/gAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">$100,000 to $149,999\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 12.6 (4)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">2.7 &le; 13 &le; 19.9</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 6.4 (0.3)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">130 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAHRJREFUSMft1FEKgDAIBmCv0G6Q3mDd/26ZoDEqUIoK8X+T+W0+yAByZLpOQ85spQMsnKfBNgRGAHFLL/BDgLZQTkD2TIECGQBqvED7eoEC7wDZzwigQ98O5LIIkOoOaDq+G4wnBVKC8dd1gJOTrwG6AzmyAodOVpDmtvwyAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAwqJIiQgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0xMi0yMVQwNTo1NDo0MCswMDowMNnPmv4AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">$150,000 to $199,999\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 5.1 (2.9)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0.4 &le; 4.2 &le; 12.5</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 4.1 (0.6)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">103 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAIhJREFUSMft1mEKgCAMBlCvYDdo3sDd/24tXYgKtYWB2D78I+yBIhs6t0b8lQ0Adn+TDiCiAQMGDEwDzimmA4jx3wBy5CCkTTQwO4DUDArABQTyZ0ABQjI6kNdIUI4gBKWgB/WPSAKqJhwP2tn2CNq58CHgESIE/E5ywPsJAV1FB2i9BSCOWyMHe18c+QRS3TMAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDCokiJCAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAw2c+a/gAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">$200,000 and over\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 4.7 (3.9)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0.1 &le; 3.4 &le; 18.9</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 4.9 (0.8)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">114 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAHhJREFUSMft1s0NgDAIBWBWsBtIN5D9d1MSajQhFfQkeS/h1Hzl0J9AVCN8ZF0iMdBFJA20C2eA1gYAAACQBm363Xhg2gkA4L9A30IKjHoDmjtPzIB48wTAF2AnHgdWZcDtEkZAv3Z6Arp7CowFHomCc9EAh0M1sgNASyDjfxQ4OAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0xMi0yMVQwNTo1NDo0MCswMDowMKiSIkIAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDDZz5r+AAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Median_Income_Estimate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 55443.2 (14495.4)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">29026 &le; 55752 &le; 98174</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 22344 (0.3)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">336 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAJVJREFUSMft1VEOgCAIBmCvYDcIbxD3v1tq6qhJQT3UjH898MC3HI5yboz4QyYA8N1wAHH5CIhnn3UA0YAKlAnLQSn/AuL26EBI3QbeAlO+MA2oXRVAZyVOQei8ZCxAlkAGyPANXII4Xh0I6bkPIEcBtpLshQyQoxkw8BC077IUtNVQgfQDKWC/lyyIZQFsFwdAHDdGVrX8NfRAX/yzAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAwqJIiQgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMi0xMi0yMVQwNTo1NDo0MCswMDowMNnPmv4AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Median_Income_MOE\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1137.5 (985.4)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">268 &le; 820 &le; 6080</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 839 (0.9)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">305 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAHVJREFUSMft1lEKgDAIBmCv4BFyN5j3v9uEiihm0+ohxv+zl8E+nC8i0RxhZrHwOAcoqvVPwP6fA/YaAAAAoAaG3xkEigAAAAC8BDaalhRQ1SfAr+MAuzhLow+c4fwJWBfABCj7yYNO3/egU2QI5JINSDg0Rxp2rvselbKKQAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0xMi0yMVQwNTo1NDo0MCswMDowMKiSIkIAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDDZz5r+AAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Mean_Income_Estimate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 72795.6 (20216.7)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">34878 &le; 68376 &le; 133111</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 30311 (0.3)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">337 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAIVJREFUSMft1gEKgCAMBVCvYDdou0G7/91SVBJdNSkyxj4ICnuIKEPndMQfWQBg9adhABEZmAvipcEQCMWbIhDPPwQwTA0Y+D+IT3sIYBrTQe5JcoCp+FvAdI5rQP0uBljQ/CTuQdP9DbwGoLoLEcBqF0WgNFMxYCqeAsgRg7KsziCL05Edj+gy0S7J5McAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDCokiJCAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTEyLTIxVDA1OjU0OjQwKzAwOjAw2c+a/gAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"left\">Mean_Income_MOE\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1410 (1275.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">287 &le; 986 &le; 8076</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 965 (0.9)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">310 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGAAAABGBAMAAADBQ4wgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5gwVBTYoFJzj9wAAAGBJREFUSMdjYBgeQAkEBIkBUA3KxsbGRqMaRjWMahjVQGMNoLJJkRQNQGw8qmFUw6iGUQ0jVAO+Bh1WDfiK5oHUgKPwx60BR5ihawAHECkalGEEnTQoYQKoBiWiAcPwAACJO/W0tcBtBwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0xMi0yMVQwNTo1NDo0MCswMDowMKiSIkIAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMTItMjFUMDU6NTQ6NDArMDA6MDDZz5r+AAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n  </tbody>\n</table>\n<p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.0.1 (<a href='https://www.r-project.org/'>R</a> version 4.2.1)<br/>2022-12-21</p>\n</div>\n```\n:::\n:::\n\n\n\n**Summary of tidy data and mutate variables (as needed):**\n\nAfter reading the data and renaming the columns, we have 383 rows and 16 columns in the dataframe. Out of the 383 rows, the last 31 rows are footnotes and are removed resulting in 352 rows and 16 columns. The first column “Year” has information on the Year and Race and Hispanic origin of householder. The race value in the first column is currently used as a separator for the different race groups in the data. Hence, I made a new column called “Race” and filled the column with the race value if available, else filled with the previous race value. We get a total of 12 distinct race groups. Following that, I removed the rows from the dataframe that had non-numerical values in the first column as these rows with the Race value were just used as a divider between race groups. This results in a dataframe of 340 rows and 17 columns. Now, we have separate columns for “Year” and “Race”. Next, I removed the footnote numbers next to the values in the “Year” and “Race” columns. I also removed the column “Total_Percent_Distribution” as the value is 100 for all observations and is not significant. If we add the percentage value for all 9 income levels in an observation it should add up to 100. Finally, I reordered the columns so that “Race” is the first column in the dataframe followed by “Year” and the remaining columns. I also made sure to check that the datatypes of the columns were correct. I noticed that the \"character\" columns \"Household_Number_Thousands\", \"Mean_Income_Estimate\", and \"Mean_Income_MOE\" had few instances of \"N\" value (indicating that the data may not be available). These columns are supposed to be \"numeric\". I decided to drop the observations (3 in this case) with \"N\" value from the dataframe and changed the datatype to \"numeric\" for these columns.\n\nAfter cleaning the data, I end up with a dataframe of 337 observations and 16 columns/attributes. I did a sanity check to make sure that the columns \"Household_Number_Thousands\", \"Mean_Income_Estimate\", and \"Mean_Income_MOE\" have no non-numerical values, we have data for the period 1967 - 2019 and we have 12 race categories in total. Currently, I have not removed the observations with race value as \"ALL RACES\" as I am not sure whether they include the other race categories. I summarized the data using dfSummary() function and made sure that there are no duplicates or missing values in the data and the datatypes match.\n\n## Visualization with Multiple Dimensions\n\nIn Challenge 5, I plotted a multivariate visualization using line plot representing the Mean Income for the Years 1967 - 2019 grouped by Race categories. I chose line plot as it is an effective method of displaying relationship between two variables when one of the two variables represents time (year in this case). I am adding ggplot functionality geom_point() and geom_smooth() as it makes it easier to analyze the trends.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Line plot representing the Mean Income for the years 1967 - 2019 grouped by Race.\nggplot(usa_data, aes(y=Mean_Income_Estimate, x = Year, group = Race, color = Race)) + \n  #geom_line() +\n  geom_point() +\n  geom_smooth() +\n  labs(title = \"Mean Income for the years 1967 - 2019 grouped by Race\", \n       y = \"Mean Income\", x = \"Year\") +\n  theme(axis.text.x=element_text(angle=90, hjust=1))\n```\n\n::: {.cell-output-display}\n![](VinithaMaheswaran_Challenge7_files/figure-html/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\nAdding the geom_smooth() helps us to visualize the trends effectively. From the above visualization, we can observe that the mean income for \"Asian\" Race households is the highest. It is also evident that we have data for \"Asian\" Race households only from the year 1988. For the years 1967 - 1971, we have data only for the Races \"ALL RACES\", \"BLACK\" and \"WHITE\". \"ALL RACES\" is the only Race category for which we have data observations for all the years from 1967 - 2019. Hence, it would be difficult to make comparisons among different Race categories for the period 1967 - 2019.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Mutate the 'Race' variable to reduce number of Race categories.\nusa_data <- usa_data%>%\n  mutate(Race = case_when(str_detect(Race, 'ALL') ~ 'ALL RACES',\n         str_detect(Race, 'WHITE') ~ 'WHITE',\n         str_detect(Race, 'BLACK') ~ 'BLACK',\n         str_detect(Race, 'HISPANIC') ~ 'HISPANIC',\n         str_detect(Race, 'ASIAN') ~ 'ASIAN'))\ntable(usa_data$Race)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nALL RACES     ASIAN     BLACK  HISPANIC     WHITE \n       55        54        75        50       103 \n```\n:::\n:::\n\n\n\nThe above visualization may be a little difficult to interpret and analyze as there are many Race categories. One solution was to group the 12 Race categories into 5 Race categories: ALL RACES, WHITE, BLACK, HISPANIC, ASIAN. This makes the visualization simplified as there are lesser Race categories. I plot the same line plot with the modified data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Line plot representing the Mean Income for the years 1967 - 2019 grouped by Race.\nggplot(usa_data, aes(y=Mean_Income_Estimate, x = Year, group = Race, color = Race)) + \n  #geom_line() +\n  geom_point() +\n  geom_smooth() +\n  labs(title = \"Mean Income for the years 1967 - 2019 grouped by Race\", \n       y = \"Mean Income\", x = \"Year\") +\n  theme(axis.text.x=element_text(angle=90, hjust=1))\n```\n\n::: {.cell-output-display}\n![](VinithaMaheswaran_Challenge7_files/figure-html/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\nFrom the above visualization, it is clear that \"ASIAN\" race households have the highest mean income followed by \"WHITE\" race households.\n\n\nI am plotting a multivariate bar graph representing the distribution of household numbers for years 1967 - 2019 using faceting. I am using bar plots as I want to visualize the distribution of categorical variables (Year and Household Numbers). Faceting enables us to view the distribution of household numbers for each Race category in individual subplots. This makes it easy for us to compare the distributions across Race categories.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bar graph representing the distribution of household numbers for years 1967 - 2019.\n\nlibrary(ggplot2)\n\nggplot(usa_data, aes(x = Year, y = Household_Number_Thousands)) + \n  geom_bar(fill=\"#00BFC4\", stat = \"identity\") +\n  facet_wrap(~Race) +\n  labs(title = \"Distribution of household numbers for years 1967 - 2019\", \n       y = \"Household Number in Thousands\", x = \"Year\") +\n  theme(axis.text.x=element_text(angle=90, hjust=1))\n```\n\n::: {.cell-output-display}\n![](VinithaMaheswaran_Challenge7_files/figure-html/unnamed-chunk-20-1.png){width=1920}\n:::\n:::\n\nFrom the above visualization, we can observe that the Household number in thousands is highest for the \"WHITE\" race. This is possible as the population of \"WHITE\" race in United States of America is higher. We can also observe that years 2013 and 2017 have the highest number of Household numbers for all 5 Race categories. Need to research more on the reason behind this.\n\n\nWhen I render and view the visualizations in the blog format I notice that the final visualization using faceting has tiny font and not visually appealing for readers (the axis labels do not seem to be clear). Maybe in future I should perform faceting for a smaller subset of data (for example years 2000 - 2019 rather than 1967 - 2019).",
    "supporting": [
      "VinithaMaheswaran_Challenge7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}