{
  "hash": "4d9fd4917983a56bd442ba5149ccc1b2",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Michaela Bowen\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"10/25/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - Inventory Transactions 9/22/22-10/20/22\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(viridis)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n5)  Create at least one graph depicting part-whole or flow relationships\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n\n\n\n::: {.panel-tabset}\n## Read in data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntransactions_9_22_2022_10_20_2022_orig <- read_excel(\"Inventory Transactions 9_22_2022-10_20_2022.xlsx\",\n    skip = 5,\n    col_names = c(\"pos_id\",\"product\",\"delete\",\"patient_name\",\"transaction_date\",\"qty_sold\",\"daily_allottment_oz\",\"weight_grams\",\"cost\",\"price\",\"owner_name\",\"owner_location\",\"vendor\",\"sold_by\",\"receipt_no\",\"delete\",\"delete\",\"delete\",\"delete\",\"delete\"))%>%\n  filter(sold_by != \"Michaela Bowen\")%>%\n  select(!contains(\"delete\"))\n```\n:::\n\n\n### Briefly describe the data\nThe transactions data frame we are working with consists of the completed sales transaction at Resinate, Northampton Spanning from 9/22/2022 through 10/20/2022. There are 11,870 instances of 14 variables, meaning that nearly 12,000 items were sold during this time period, between nearly 3,600 transactions.Each instance is a product sold, rather than a complete transaction. All products were sold by 7 employees during this time. The variables describe the product type, category, date, patient name, receipt number, budtender, and other transaction information.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#number of products sold\nnrow(transactions_9_22_2022_10_20_2022_orig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11802\n```\n:::\n\n```{.r .cell-code}\n#number of transactions\nn_distinct(transactions_9_22_2022_10_20_2022_orig$receipt_no)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3566\n```\n:::\n\n```{.r .cell-code}\n#number of employees\nn_distinct(transactions_9_22_2022_10_20_2022_orig$sold_by)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7\n```\n:::\n\n```{.r .cell-code}\n#number of customers\nn_distinct(transactions_9_22_2022_10_20_2022_orig$patient_name)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2563\n```\n:::\n:::\n\n\n\n## Tidy Data\n\nHere I will mutate columns to better suit the analysis of this data set. \n\nI created 5 intervals that outline the timeframe that I am working with\n\nThe columns I plant to mutate: \n\n- `date`: I am separating out this date column into hour, minute, and second in order to pin point time of day in which customers are ordering certain products\n- `category`, `category_names`: I created these two variables from the 3 letter abbreviation at the beginning of the product name. This will aid in isolating specific categories of product rather than \n- `tier`: I am planning to create an ordinal column that has the Flower Tier Specification. A,B,C, and D describe the percentage of Total Active Canabinoids in each and thus determine their price.\n- `FirstName`, `LastName`: I also separated the first and last name of the Budtender so that I could only include first names in the visualization\n- `week`: After creating the intervals, I used a case when to determine if each date was within said interval and then assigned it week 1-5\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntransactions_sept22_oct20_working <- transactions_9_22_2022_10_20_2022_orig%>%\n#separating date, month, year, minute and second (thinking about removing second option, as it may not be useful)  \n  mutate(\n    date = as.Date(transaction_date),\n    day = day(transaction_date),\n    hour = hour(transaction_date),\n    minute = minute(transaction_date),\n    second = second(transaction_date))%>%\n  mutate(\n    format_date = format(date, \"%m/%d/%Y\"),\n    format_hour = paste(hour, minute, second, sep = \":\")\n  )%>%\n#pulling the category abbreviation to determine category and create a category column \n  mutate(\n    category = substr(product,1,3)\n  )%>%\n#changing the abbreviations into full category names\n  mutate(\n    category_names = case_when(\n      category == \"FLO\" | category == \"Flo\" ~ \"Flower\",\n      category == \"PRJ\" ~ \"Joint\",\n      category == \"EDI\" ~ \"Edible\",\n      category == \"MIP\" ~ \"Marijuana Infused Product\",\n      category == \"CON\" | category == \"Con\" ~ \"Concentrate\",\n      category == \"VAP\" | category == \"Vap\" ~ \"Vaporizer\",\n      category == \"ACC\" | category == \"Pax\" | category == \"PAX\" | category == \"Hig\" | category == \"Bov\" ~ \"Accessories\",\n      category == \"CLO\" | category == \"Res\" ~ \"Clothing\",\n      category == \"HTC\" ~ \"HTCC Promotion\",\n      category == \"SAM\" ~ \"Samples\",\n      category == \"TOP\" ~ \"Topical\",\n      category == \"REW\" ~ \"Rewards\")\n  )%>%\n#created a logical variable to determine if flower was in house, or 3rd party\n  mutate(\n    house_product = if_else((vendor == \"Resinate, Inc.\"), TRUE, FALSE, NA)\n)%>%\n  mutate(\n   flower_tier = case_when(\n     category_names == \"Flower\" & (price == 48 | price == 50) ~ \"A Tier\",\n     category_names == \"Flower\" & price == 45 ~ \"B Tier\",\n     category_names == \"Flower\" & price == 40 ~ \"C Tier\",\n     category_names == \"Flower\" & (price == 30 | price == 35) ~ \"D Tier\"\n   ) \n  )%>%\n#created an isCannabis boolean column to separate accessories from cannabis product\n  mutate(\n    isCannabis = case_when(\n      category == \"FLO\"|category == \"CON\"|category == \"VAP\"|category == \"PRJ\"|category == \"EDI\"|category == \"TOP\"|category == \"HTC\"|category == \"MIP\"|category == \"TOP\" ~ TRUE, \n      category == \"ACC\" |category == \"CLO\" | category == \"SAM\" ~ FALSE\n    )\n  )%>%\n#separating the first and last names of the budtenders for anonymity purposes\n  extract(sold_by, c(\"FirstName\", \"LastName\"), \"([^ ]+) (.*)\")%>%\n#day of the week label\n  mutate(weekdayLabel = wday(date, label = TRUE))\n\n#Here I have created my own week intervals rather than the calendar weeks. \nweek1 <- interval(transactions_sept22_oct20_working$date[1],transactions_sept22_oct20_working$date[1] + days(6))\nweek2 <- interval(int_end(week1) + days(1), int_end(week1) + days(6))\nweek3 <- interval(int_end(week2) + days(1), int_end(week2) + days(6))\nweek4 <- interval(int_end(week3) + days(1), int_end(week3) + days(6))\nweek5 <- interval(int_end(week4) + days(1), int_end(week4) + days(6))\n\n\n#here I am categorizing each date by week, and checking if it within the interval i created\ntransactions_sept22_oct20_working <- transactions_sept22_oct20_working%>%\n  mutate(week = case_when(\n    date %within% week1 ~ \"week 1\",\n    date %within% week2 ~ \"week 2\",\n    date %within% week3 ~ \"week 3\",\n    date %within% week4 ~ \"week 4\",\n    date %within% week5 ~ \"week 5\"\n  ))\n```\n:::\n\n\n\n\n## Time Dependent Visualization\nFor this time dependent visualization, it is somewhat by time, but because I categorized the dates by week, it may not fit into that category. An additional time dependent visualization would be to have total sales by day over time, however i wanted to see some more information.\n\nTo create the Average Sales by Budtender by week, I mutated the following columns:\n\n- `total_sale_week`: Calculating the total sales by each budtender for each week\n- `average_sale_week`: using a case_when() I calculated the average for each of those\n\n::: {.cell}\n\n```{.r .cell-code}\navg_salesby_budtender_by_week <- transactions_sept22_oct20_working%>%\n  group_by(week,FirstName)%>%\n  mutate(total_sales_week = sum(price))%>%\n  mutate(avg_sales_week = case_when(\n    week == \"week 1\" ~ total_sales_week/time_length(week1, \"days\"),\n    week == \"week 2\" ~ total_sales_week/time_length(week2, \"days\"),\n    week == \"week 3\" ~ total_sales_week/time_length(week3, \"days\"),\n    week == \"week 4\" ~ total_sales_week/time_length(week4, \"days\"),\n    week == \"week 5\" ~ total_sales_week/time_length(week5, \"days\"),\n  ))%>%\n  distinct(FirstName, .keep_all = TRUE)%>%\n  select(FirstName, week, avg_sales_week)%>%\nggplot(mapping = aes(x = week, y = avg_sales_week, color = FirstName), size = 3,) +\n  geom_point() + \n  theme(legend.title=element_blank(),axis.text.x = element_text(angle = 45, vjust = 0.5), panel.background = ) +\n  ylab(\"Average Sales ($)\") +\n  xlab(\"Weeks 9/22/22 - 10/20/22\") +\n  ggtitle(\"Average Sales by Budtender by Week\")\n\navg_salesby_budtender_by_week\n```\n\n::: {.cell-output-display}\n![](MichaelaBowen_challenge6_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nHere my goal was to complete the average sales, by employee, by day of the week. Because my weekday does not start on a sunday, I wanted to figure out a way to count the number of weekdays (how many mondays, tuesdays, wednesdays etc) in the data set. To do this I used n_distinct(week(date)) to determine how many week of the year I was working with. It came p with 5 weeks however, the only day that is present 5 times in this dataset is Thursday. \n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_sales_weekday <-transactions_sept22_oct20_working %>%\n  group_by(weekdayLabel,FirstName)%>%\n  mutate(total_sales = sum(price),\n         avg_sales = total_sales/n_distinct(week(date))\n  )%>%\n  select(weekdayLabel, FirstName,avg_sales, total_sales)%>%\n  distinct()%>%\nggplot( mapping = aes(x = weekdayLabel, y = avg_sales, color = FirstName), size = 3,) +\n  geom_point() + \n  scale_color_viridis(discrete = TRUE, \"A\") +\n  theme(legend.title=element_blank(),axis.text.x = element_text(angle = 45, vjust = 0.5) ) +\n  scale_y_continuous(labels = dollar, limits = c(0,5000)) +\n  ylab(\"Average Sales ($)\") +\n  xlab(\"Weekday\") +\n  ggtitle(\"Average Sales by Budtender by Weekday\")\n\ntotal_sales_weekday\n```\n\n::: {.cell-output-display}\n![](MichaelaBowen_challenge6_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n## Visualizing Part-Whole Relationships\nHere I am visualizing total sales by each category of product focusing on Flower, Edibles, Concentrates, and Vapes, Topicals and others which are called Marijuana Infused Products \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncategory_sales <- transactions_sept22_oct20_working%>%\n  filter(isCannabis == TRUE)%>%\n  group_by(week,category)%>%\n  mutate(qty_sold = sum(qty_sold),\n         totalSales = sum(price)\n         )%>%\n  select(week, category, qty_sold, totalSales)%>%\n  distinct()%>%\nggplot(mapping = aes(x = week, y = qty_sold, fill = category), size = 3,) +\n  geom_col() + \n  scale_fill_viridis(discrete = TRUE, \"B\") +\n  theme(legend.title=element_blank(),axis.text.x = element_text(angle = 45, vjust = 0.5) ) +\n  ylab(\"Quantity Sold\") +\n  ggtitle(\"Quantity Sold by Category\") \n\ncategory_sales\n```\n\n::: {.cell-output-display}\n![](MichaelaBowen_challenge6_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n:::\n",
    "supporting": [
      "MichaelaBowen_challenge6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}