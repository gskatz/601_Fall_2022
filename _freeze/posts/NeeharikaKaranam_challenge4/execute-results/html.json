{
  "hash": "c406c092e0485790d5c0f6b4b48f022e",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"Neeharika Karanam\"\ndesription: \"More data wrangling: pivoting\"\ndate: \"12/02/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - abc_poll\n  - eggs\n  - fed_rates\n  - hotel_bookings\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\n-   hotel_bookings.csv⭐⭐⭐⭐\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reading in the hotels booking data\nhotels_booking <- read_csv(\"_data/hotel_bookings.csv\", show_col_types = FALSE)\n\nhotels_booking\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 32\n   hotel  is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n   <chr>    <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n 1 Resor…       0     342    2015 July         27       1       0       0      2\n 2 Resor…       0     737    2015 July         27       1       0       0      2\n 3 Resor…       0       7    2015 July         27       1       0       1      1\n 4 Resor…       0      13    2015 July         27       1       0       1      1\n 5 Resor…       0      14    2015 July         27       1       0       2      2\n 6 Resor…       0      14    2015 July         27       1       0       2      2\n 7 Resor…       0       0    2015 July         27       1       0       2      2\n 8 Resor…       0       9    2015 July         27       1       0       2      2\n 9 Resor…       1      85    2015 July         27       1       0       3      2\n10 Resor…       1      75    2015 July         27       1       0       3      2\n# … with 119,380 more rows, 22 more variables: children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\n\nIn order to check the different unique values in all of the columns I have used the lubridate package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrapply(hotels_booking,function(x)length(unique(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                         hotel                    is_canceled \n                             2                              2 \n                     lead_time              arrival_date_year \n                           479                              3 \n            arrival_date_month       arrival_date_week_number \n                            12                             53 \n     arrival_date_day_of_month        stays_in_weekend_nights \n                            31                             17 \n          stays_in_week_nights                         adults \n                            35                             14 \n                      children                         babies \n                             6                              5 \n                          meal                        country \n                             5                            178 \n                market_segment           distribution_channel \n                             8                              5 \n             is_repeated_guest         previous_cancellations \n                             2                             15 \nprevious_bookings_not_canceled             reserved_room_type \n                            73                             10 \n            assigned_room_type                booking_changes \n                            12                             21 \n                  deposit_type                          agent \n                             3                            334 \n                       company           days_in_waiting_list \n                           353                            128 \n                 customer_type                            adr \n                             4                           8879 \n   required_car_parking_spaces      total_of_special_requests \n                             5                              6 \n            reservation_status        reservation_status_date \n                             3                            926 \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nFrom the above dataset I have observed that the hotel bookings dataset has 119390 rows and 31 columns also consisting of data from mainly two different hotels called the City Hotel and the Resort Hotel. Each row in the dataset corresponds to the hotel bookings made by each of the customer and it also has a lot of additional information like the arrival date, stay days, meal, type of the room, customer, type, reservation status, number of the adult/children/babies in the room, previous cancellations, if there is a car parking space and lots more information and this data is from different parts of the world.\n\n## Tidy Data (as needed)\n\nI would like to tidy the data in the following way.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(hotels_booking$country)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  ABW   AGO   AIA   ALB   AND   ARE   ARG   ARM   ASM   ATA   ATF   AUS   AUT \n    2   362     1    12     7    51   214     8     1     2     1   426  1263 \n  AZE   BDI   BEL   BEN   BFA   BGD   BGR   BHR   BHS   BIH   BLR   BOL   BRA \n   17     1  2342     3     1    12    75     5     1    13    26    10  2224 \n  BRB   BWA   CAF   CHE   CHL   CHN   CIV   CMR    CN   COL   COM   CPV   CRI \n    4     1     5  1730    65   999     6    10  1279    71     2    24    19 \n  CUB   CYM   CYP   CZE   DEU   DJI   DMA   DNK   DOM   DZA   ECU   EGY   ESP \n    8     1    51   171  7287     1     1   435    14   103    27    32  8568 \n  EST   ETH   FIN   FJI   FRA   FRO   GAB   GBR   GEO   GGY   GHA   GIB   GLP \n   83     3   447     1 10415     5     4 12129    22     3     4    18     2 \n  GNB   GRC   GTM   GUY   HKG   HND   HRV   HUN   IDN   IMN   IND   IRL   IRN \n    9   128     4     1    29     1   100   230    35     2   152  3375    83 \n  IRQ   ISL   ISR   ITA   JAM   JEY   JOR   JPN   KAZ   KEN   KHM   KIR   KNA \n   14    57   669  3766     6     8    21   197    19     6     2     1     2 \n  KOR   KWT   LAO   LBN   LBY   LCA   LIE   LKA   LTU   LUX   LVA   MAC   MAR \n  133    16     2    31     8     1     3     7    81   287    55    16   259 \n  MCO   MDG   MDV   MEX   MKD   MLI   MLT   MMR   MNE   MOZ   MRT   MUS   MWI \n    4     1    12    85    10     1    18     1     5    67     1     7     2 \n  MYS   MYT   NAM   NCL   NGA   NIC   NLD   NOR   NPL  NULL   NZL   OMN   PAK \n   28     2     1     1    34     1  2104   607     1   488    74    18    14 \n  PAN   PER   PHL   PLW   POL   PRI   PRT   PRY   PYF   QAT   ROU   RUS   RWA \n    9    29    40     1   919    12 48590     4     1    15   500   632     2 \n  SAU   SDN   SEN   SGP   SLE   SLV   SMR   SRB   STP   SUR   SVK   SVN   SWE \n   48     1    11    39     1     2     1   101     2     5    65    57  1024 \n  SYC   SYR   TGO   THA   TJK   TMP   TUN   TUR   TWN   TZA   UGA   UKR   UMI \n    2     3     2    59     9     3    39   248    51     5     2    68     1 \n  URY   USA   UZB   VEN   VGB   VNM   ZAF   ZMB   ZWE \n   32  2097     4    26     1     8    80     2     4 \n```\n:::\n:::\n\n\nFrom the above we can observe that there is a NULL value in the country column and we can remove this value because this information will not help us in futher analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels_booking <- hotels_booking %>% \n  filter(!(country == \"NULL\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#To understand the class for each of the columns in the dataset.\nsapply(hotels_booking, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                         hotel                    is_canceled \n                   \"character\"                      \"numeric\" \n                     lead_time              arrival_date_year \n                     \"numeric\"                      \"numeric\" \n            arrival_date_month       arrival_date_week_number \n                   \"character\"                      \"numeric\" \n     arrival_date_day_of_month        stays_in_weekend_nights \n                     \"numeric\"                      \"numeric\" \n          stays_in_week_nights                         adults \n                     \"numeric\"                      \"numeric\" \n                      children                         babies \n                     \"numeric\"                      \"numeric\" \n                          meal                        country \n                   \"character\"                    \"character\" \n                market_segment           distribution_channel \n                   \"character\"                    \"character\" \n             is_repeated_guest         previous_cancellations \n                     \"numeric\"                      \"numeric\" \nprevious_bookings_not_canceled             reserved_room_type \n                     \"numeric\"                    \"character\" \n            assigned_room_type                booking_changes \n                   \"character\"                      \"numeric\" \n                  deposit_type                          agent \n                   \"character\"                    \"character\" \n                       company           days_in_waiting_list \n                   \"character\"                      \"numeric\" \n                 customer_type                            adr \n                   \"character\"                      \"numeric\" \n   required_car_parking_spaces      total_of_special_requests \n                     \"numeric\"                      \"numeric\" \n            reservation_status        reservation_status_date \n                   \"character\"                         \"Date\" \n```\n:::\n:::\n\n\nWe can now understand that there are 2 different fields called the agents and the company which have numerical values in them but has their class described as character. Therefore, these NULL values can be modified from NULL to NA and we can change the type of the column to numeric. We can also combine the arrival date in year, month and the date into one single field and name it as the arrival date.\n\n## Identify variables that need to be mutated\n\nI have identified the various variables that can be mutated and have performed the mutation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Mutating the arrival date into a single field and also mutate the adults, babies and children in order to get the total guests in the hotel.\n\nhotels_booking_mutate <- hotels_booking %>% \n  mutate(arrival_date = str_c(arrival_date_day_of_month,\n                              arrival_date_month,\n                              arrival_date_year, sep=\"/\"),\n         arrival_date = dmy(arrival_date),\n         total_guests = adults + children + babies) %>% \n  select(-c(arrival_date_day_of_month,arrival_date_month,arrival_date_year))\n\nhotels_booking_mutate\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 118,902 × 31\n   hotel     is_ca…¹ lead_…² arriv…³ stays…⁴ stays…⁵ adults child…⁶ babies meal \n   <chr>       <dbl>   <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl> <chr>\n 1 Resort H…       0     342      27       0       0      2       0      0 BB   \n 2 Resort H…       0     737      27       0       0      2       0      0 BB   \n 3 Resort H…       0       7      27       0       1      1       0      0 BB   \n 4 Resort H…       0      13      27       0       1      1       0      0 BB   \n 5 Resort H…       0      14      27       0       2      2       0      0 BB   \n 6 Resort H…       0      14      27       0       2      2       0      0 BB   \n 7 Resort H…       0       0      27       0       2      2       0      0 BB   \n 8 Resort H…       0       9      27       0       2      2       0      0 FB   \n 9 Resort H…       1      85      27       0       3      2       0      0 BB   \n10 Resort H…       1      75      27       0       3      2       0      0 HB   \n# … with 118,892 more rows, 21 more variables: country <chr>,\n#   market_segment <chr>, distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>,\n#   total_of_special_requests <dbl>, reservation_status <chr>, …\n```\n:::\n:::\n\nAfter the mutation now lets find the range of the arrival date of the different bookings of the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(hotels_booking_mutate$arrival_date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. \n\"2015-07-01\" \"2016-03-14\" \"2016-09-07\" \"2016-08-29\" \"2017-03-19\" \"2017-08-31\" \n```\n:::\n:::\n\n\nWe can now observe that the arrival dates now lie between the July 2015 - August 2017. Also, the lead time will help us in understanding when the total hotel reservation has been started and we can also calculate the booking date by subtracting the lead time from the arrival date.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels_booking_mutate <- hotels_booking_mutate %>%\n  mutate(booking_date = arrival_date - lead_time)\n\nhotels_booking_mutate\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 118,902 × 32\n   hotel     is_ca…¹ lead_…² arriv…³ stays…⁴ stays…⁵ adults child…⁶ babies meal \n   <chr>       <dbl>   <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl> <chr>\n 1 Resort H…       0     342      27       0       0      2       0      0 BB   \n 2 Resort H…       0     737      27       0       0      2       0      0 BB   \n 3 Resort H…       0       7      27       0       1      1       0      0 BB   \n 4 Resort H…       0      13      27       0       1      1       0      0 BB   \n 5 Resort H…       0      14      27       0       2      2       0      0 BB   \n 6 Resort H…       0      14      27       0       2      2       0      0 BB   \n 7 Resort H…       0       0      27       0       2      2       0      0 BB   \n 8 Resort H…       0       9      27       0       2      2       0      0 FB   \n 9 Resort H…       1      85      27       0       3      2       0      0 BB   \n10 Resort H…       1      75      27       0       3      2       0      0 HB   \n# … with 118,892 more rows, 22 more variables: country <chr>,\n#   market_segment <chr>, distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>,\n#   total_of_special_requests <dbl>, reservation_status <chr>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(hotels_booking$reservation_status)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Check-Out\" \"Canceled\"  \"No-Show\"  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#We can find the number of days after booking when the status was changed to cancelled\nhotel_booking_cancellation <- hotels_booking_mutate %>%\n  filter(reservation_status == 'Canceled') %>%\n  mutate(canc_time = booking_date - reservation_status_date)\n\nhotel_booking_cancellation %>%\n  summarise(min = min(canc_time), max = max(canc_time), mean = mean(canc_time), median = median(canc_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  min       max    mean          median  \n  <drtn>    <drtn> <drtn>        <drtn>  \n1 -584 days 0 days -58.9916 days -26 days\n```\n:::\n:::\n\n\nNow we can change the class of the column of the agent and the company from character to numeric.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Mutating the class of the agent and company field from character to numeric\n\nhotels_booking_mutate <- hotels_booking_mutate %>%\n  mutate(across(c(agent, company),~ replace(.,str_detect(., \"NULL\"), NA))) %>% mutate_at(vars(agent, company),as.numeric)\n\nis.numeric(hotels_booking_mutate$agent)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nis.numeric(hotels_booking_mutate$company)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}