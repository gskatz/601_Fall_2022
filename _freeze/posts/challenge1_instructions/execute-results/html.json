{
  "hash": "f418d85fa3b30344aba92cde27a20075",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1 Instructions\"\nauthor: \"Meredith Rolfe\"\ndesription: \"Reading in data and creating a post\"\ndate: \"08/15/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n  - railroads\n  - faostat\n  - wildbirds\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a dataset, and\n\n2)  describe the dataset using both words and any supporting information (e.g., tables, etc)\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   railroad_2012_clean_county.csv ⭐\n-   birds.csv ⭐⭐\n-   FAOstat\\*.csv ⭐⭐\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐⭐\n\nFind the `_data` folder, located inside the `posts` folder. Then you can read in the data, using either one of the `readr` standard tidy read commands, or a specialized package such as `readxl`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Read the clean_county data\nclean_county_data = read.csv('_data/railroad_2012_clean_county.csv')\n\n#Get dimensions\ndim(clean_county_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2930    3\n```\n:::\n\n```{.r .cell-code}\n#The dataset has 2930 rows and 3 columns\n\n#Get column names\ncolnames(clean_county_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"state\"           \"county\"          \"total_employees\"\n```\n:::\n\n```{.r .cell-code}\n#Displaying top 5 columns of dataframe\nhead(clean_county_data, n=5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state               county total_employees\n1    AE                  APO               2\n2    AK            ANCHORAGE               7\n3    AK FAIRBANKS NORTH STAR               2\n4    AK               JUNEAU               3\n5    AK    MATANUSKA-SUSITNA               2\n```\n:::\n\n```{.r .cell-code}\n#Grouping dataframe by state and county, to get total employees employed per state per county\n#Displaying only county having highest number of employees\nclean_county_data %>%\n  group_by(state, county) %>%\n  summarise_each(funs(sum)) %>%\n  arrange(state, county, desc(total_employees)) %>%\n  slice(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 53 × 3\n# Groups:   state [53]\n   state county        total_employees\n   <chr> <chr>                   <int>\n 1 AE    APO                         2\n 2 AK    ANCHORAGE                   7\n 3 AL    AUTAUGA                   102\n 4 AP    APO                         1\n 5 AR    ARKANSAS                   11\n 6 AZ    APACHE                    270\n 7 CA    ALAMEDA                   346\n 8 CO    ADAMS                     553\n 9 CT    FAIRFIELD                 486\n10 DC    WASHINGTON DC             279\n# … with 43 more rows\n```\n:::\n:::\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation.\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data). \\\\\n\n\nThe clean_county_data dataset looks to maintain information about the number of individuals employed per county in the United States within the railroad department, for the year 2012. \\\\\nThe dataset contains a total of 2930 rows, with 3 columns, namely 'state', 'county' and 'total_employees'. \\\\\nThis data was perhaps gathered via a census carried out in the year 2012 of all employees in the railroad department throughout the United States, or could also be gathered via historical data maintained by the department, as a subspace of the particular year (i.e. 2012).\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}