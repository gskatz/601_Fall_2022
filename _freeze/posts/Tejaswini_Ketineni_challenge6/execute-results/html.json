{
  "hash": "b33aa312b5f1d66c863c5352b4dff147",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6 \"\nauthor: \"Tejaswini_Ketineni\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"12/04/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#loading all the required libraries\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'lubridate' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: timechange\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'timechange' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(summarytools)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'summarytools'\n\nThe following object is masked from 'package:tibble':\n\n    view\n```\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n:::\n\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n5)  Create at least one graph depicting part-whole or flow relationships\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - debt  ⭐\n  - fed_rate ⭐⭐\n  - abc_poll ⭐⭐⭐\n  - usa_hh ⭐⭐⭐\n  - hotel_bookings ⭐⭐⭐⭐\n  - AB_NYC ⭐⭐⭐⭐⭐\n\n  \n\n{r}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\ndebt_in_trillions <- read_excel(\"_data/debt_in_trillions.xlsx\")\n```\n:::\n\n\n\n### Briefly describe the data\n\n::: {.cell}\n\n```{.r .cell-code}\n#we will use library fun modeling to get variable distribution\nlibrary(funModeling)\nplot_num(debt_in_trillions)\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge6_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(debt_in_trillions)  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Year and Quarter      Mortgage       HE Revolving      Auto Loan     \n Length:74          Min.   : 4.942   Min.   :0.2420   Min.   :0.6220  \n Class :character   1st Qu.: 8.036   1st Qu.:0.4275   1st Qu.:0.7430  \n Mode  :character   Median : 8.412   Median :0.5165   Median :0.8145  \n                    Mean   : 8.274   Mean   :0.5161   Mean   :0.9309  \n                    3rd Qu.: 9.047   3rd Qu.:0.6172   3rd Qu.:1.1515  \n                    Max.   :10.442   Max.   :0.7140   Max.   :1.4150  \n  Credit Card      Student Loan        Other            Total       \n Min.   :0.6590   Min.   :0.2407   Min.   :0.2960   Min.   : 7.231  \n 1st Qu.:0.6966   1st Qu.:0.5333   1st Qu.:0.3414   1st Qu.:11.311  \n Median :0.7375   Median :0.9088   Median :0.3921   Median :11.852  \n Mean   :0.7565   Mean   :0.9189   Mean   :0.3831   Mean   :11.779  \n 3rd Qu.:0.8165   3rd Qu.:1.3022   3rd Qu.:0.4154   3rd Qu.:12.674  \n Max.   :0.9270   Max.   :1.5840   Max.   :0.4860   Max.   :14.957  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#The dataset gave us information on different types of loan through different years (2003-2021) and quarters. There are 74 rows and 8 columns, of which 1 is character type(which is Year and Quarter) and rest of the 7 are numeric. There aren’t any missing values in the columns.\n#the unit ranges for these values dont look like they are on the same scale\n#some are left skewed and some are right skewed except Student Loan and HE Revolving\n```\n:::\n\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n::: {.cell}\n\n```{.r .cell-code}\n# assigning column names following standard convention\ncolnames(debt_in_trillions) <- c('year_quarter','mortgage','he_revolving','auto_loan',\n'credit_card', 'student_loan','other','total')\n```\n:::\n\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tsibble: tidy temporal data frames and tools\n#library(tsibble) --> installed\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#all the numerical variables are independent in nature and need no further manipulation\n#year_quarter can be further divided into year and quarter columns for ease of visualizations\ndebt_in_trillions$year = as.integer(substring(debt_in_trillions$year_quarter, first=1, last=2))\ndebt_in_trillions$quarter = substring(debt_in_trillions$year_quarter, first=4, last=5)\nhead(debt_in_trillions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 10\n  year_quarter mortg…¹ he_re…² auto_…³ credi…⁴ stude…⁵ other total  year quarter\n  <chr>          <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl> <dbl> <int> <chr>  \n1 03:Q1           4.94   0.242   0.641   0.688   0.241 0.478  7.23     3 Q1     \n2 03:Q2           5.08   0.26    0.622   0.693   0.243 0.486  7.38     3 Q2     \n3 03:Q3           5.18   0.269   0.684   0.693   0.249 0.477  7.56     3 Q3     \n4 03:Q4           5.66   0.302   0.704   0.698   0.253 0.449  8.07     3 Q4     \n5 04:Q1           5.84   0.328   0.72    0.695   0.260 0.446  8.29     4 Q1     \n6 04:Q2           5.97   0.367   0.743   0.697   0.263 0.423  8.46     4 Q2     \n# … with abbreviated variable names ¹​mortgage, ²​he_revolving, ³​auto_loan,\n#   ⁴​credit_card, ⁵​student_loan\n```\n:::\n\n```{.r .cell-code}\n#we added now two new columns --> year(integer) and quarter \n```\n:::\n\n\n## Time Dependent Visualization\n\n::: {.cell}\n\n```{.r .cell-code}\n#lets check how the total loan is spread of the years\nggplot(debt_in_trillions) +\n  geom_point(aes(x=year, y=total)) + labs(title = \"Debt trend with time\", x = \"Time\", y = \"Total Debt\") + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge6_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#it increased till 2006 and then dropped(maybe due to 2008 recession? and then increased\n#after 2011\n```\n:::\n\n\n## Visualizing Part-Whole Relationships\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#the dataset is in wide format\n#before doing any further visualizations, if we convert into long format, it will be easier\n\ndebt_in_trillions_long<-debt_in_trillions%>%pivot_longer(cols = mortgage:other, names_to = \"loan_type\", values_to = \"totals\")%>%select(-total)%>%mutate(loan_type = as.factor(loan_type))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(debt_in_trillions_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  year_quarter  year quarter loan_type    totals\n  <chr>        <int> <chr>   <fct>         <dbl>\n1 03:Q1            3 Q1      mortgage      4.94 \n2 03:Q1            3 Q1      he_revolving  0.242\n3 03:Q1            3 Q1      auto_loan     0.641\n4 03:Q1            3 Q1      credit_card   0.688\n5 03:Q1            3 Q1      student_loan  0.241\n6 03:Q1            3 Q1      other         0.478\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_values = c(\"aquamarine\", \"azure\", \"cornsilk\", \"coral1\", \"darkorange\", \n                 \"darkgoldenrod1\")\nggplot(debt_in_trillions_long, aes(x=year, y=totals, fill=loan_type)) +\n  geom_bar(position=\"stack\", stat=\"identity\") + labs(title = \"Distribution of Loan Types\")+\n  scale_y_continuous(labels = scales::label_number(suffix = \" Trillion\"))+\n  theme(legend.position = \"top\") +\n  guides(fill = guide_legend(nrow = 1)) +\n  scale_fill_manual(labels=\n                      str_replace(levels(debt_in_trillions_long$loan_type), \" \", \"\\n\"),\n                      values=color_values)\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge6_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\ndf <- debt_in_trillions_long %>%\n  select(loan_type,totals) %>%\n  group_by(loan_type) %>%\n  summarise(loantotal = sum(totals)) %>%\n  mutate(total_perc = (loantotal/sum(loantotal))*100) %>% \n  arrange(total_perc)\n```\n:::\n\n\n#for the below graph, it totals works, labels can use the value total_perc to display\n#total percentage\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df, aes(x=\"\", y=total_perc, fill=loan_type)) +\n  geom_bar(stat=\"identity\", width=1) +\n  coord_polar(\"y\", start=0) + labs(title = \"Proportion of Loan Types\") + theme_void() + scale_fill_brewer(palette=\"PiYG\") + geom_text(aes(x = 1.6, label = paste0(round(total_perc), \"%\")), position = position_stack(vjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge6_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Tejaswini_Ketineni_challenge6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}