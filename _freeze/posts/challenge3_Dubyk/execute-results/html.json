{
  "hash": "79a6b75dbb27f7ab23736787357035d9",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Mariia Dubyk\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"11/01/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nmarriage <- read_excel(\"_data/australian_marriage_law_postal_survey_2017_-_response_final.xls\",\n                       sheet = \"Table 2\",\n                       col_names = c(\"Division\", \"Yes\", \"Yes_percentage\", \"No\", \"No_percentage\", \"Total_clear\", \"Total_clear_percentage\", \"Delete\", \"Delete\", \"Delete\", \"Response_not_clear\", \"Response_not_clear_percentage\", \"Non_responding\", \"Non_responding_percentage\", \"Total\", \"Total_percentage\"))\n\nmarriage <- slice(marriage, 8:180)\nmarriage <- select(marriage, \"Division\", \"Yes\", \"Yes_percentage\", \"No\", \"No_percentage\", \"Total_clear\", \"Total_clear_percentage\", \"Response_not_clear\", \"Response_not_clear_percentage\", \"Non_responding\", \"Non_responding_percentage\", \"Total\", \"Total_percentage\")\nmarriage\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 173 × 13\n   Division  Yes   Yes_p…¹ No    No_pe…² Total…³ Total…⁴ Respo…⁵ Respo…⁶ Non_r…⁷\n   <chr>     <chr> <chr>   <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 New Sout… <NA>  <NA>    <NA>  <NA>    <NA>    <NA>    <NA>    <NA>    <NA>   \n 2 Banks     37736 44.899… 46343 55.100… 84079   100     247     0.2000… 20928  \n 3 Barton    37153 43.600… 47984 56.399… 85137   100     226     0.2000… 24008  \n 4 Bennelong 42943 49.799… 43215 50.200… 86158   100     244     0.2000… 19973  \n 5 Berowra   48471 54.600… 40369 45.399… 88840   100     212     0.2000… 16038  \n 6 Blaxland  20406 26.100… 57926 73.900… 78332   100     220     0.2000… 25883  \n 7 Bradfield 53681 60.600… 34927 39.399… 88608   100     202     0.2000… 17261  \n 8 Calare    54091 60.200… 35779 39.799… 89870   100     285     0.2000… 25342  \n 9 Chifley   32871 41.299… 46702 58.700… 79573   100     263     0.2000… 28180  \n10 Cook      47505 55      38804 45      86309   100     229     0.2000… 18713  \n# … with 163 more rows, 3 more variables: Non_responding_percentage <chr>,\n#   Total <chr>, Total_percentage <chr>, and abbreviated variable names\n#   ¹​Yes_percentage, ²​No_percentage, ³​Total_clear, ⁴​Total_clear_percentage,\n#   ⁵​Response_not_clear, ⁶​Response_not_clear_percentage, ⁷​Non_responding\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe dataset shows responses to the question in Australian Marriage Law Postal Survey 2017. We can see data gathered in different divisions of States and Territories in Australia. The responses are \"Yes\", \"No\", \"Not clear\" and \"No response\". The table also shows percentage of each answer and total numbers.\n\nTo tidy data I will leave only divisions in the first column. I am going to move State and Territories to another column by adding a variable (as it was shown during the class).I will also remove percentages and total numbers from the table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarriage <- marriage%>%\n  mutate(StateTerritory = case_when(str_ends(Division, \"Divisions\") ~ Division), NA_character_)%>%\n  fill(StateTerritory, .direction = \"down\")\nmarriage <- filter(marriage, !str_detect(Division, \"Division|Australia\"))\nmarriage <- select(marriage, \"Division\", \"Yes\", \"No\", \"Response_not_clear\", \"Non_responding\", \"StateTerritory\")\nmarriage\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 155 × 6\n   Division  Yes   No    Response_not_clear Non_responding StateTerritory       \n   <chr>     <chr> <chr> <chr>              <chr>          <chr>                \n 1 Banks     37736 46343 247                20928          New South Wales Divi…\n 2 Barton    37153 47984 226                24008          New South Wales Divi…\n 3 Bennelong 42943 43215 244                19973          New South Wales Divi…\n 4 Berowra   48471 40369 212                16038          New South Wales Divi…\n 5 Blaxland  20406 57926 220                25883          New South Wales Divi…\n 6 Bradfield 53681 34927 202                17261          New South Wales Divi…\n 7 Calare    54091 35779 285                25342          New South Wales Divi…\n 8 Chifley   32871 46702 263                28180          New South Wales Divi…\n 9 Cook      47505 38804 229                18713          New South Wales Divi…\n10 Cowper    57493 38317 315                25197          New South Wales Divi…\n# … with 145 more rows\n```\n:::\n:::\n\n\n\n## Anticipate the End Result\n\nIn the final dataframe we will have 4 rows (with answers \"Yes\", \"No\",\"Response_not_clear\", \"Non_responding\") for each division. \n\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA     217.    1102.\n2 USA      1990 NAFTA    -585.    1869.\n3 France   1980 EU       1351.     369.\n4 Mexico   1990 NAFTA     846.    1458.\n5 USA      1980 NAFTA     551.    1212.\n6 France   1990 EU       1932.     749.\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOr simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n### Challenge: Describe the final dimensions\n\n\n\n::: {.cell}\n\n:::\n\n\nAny additional comments?\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"trade_direction\",\n                 values_to = \"trade_value\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 5\n   country  year trade trade_direction trade_value\n   <chr>   <dbl> <chr> <chr>                 <dbl>\n 1 Mexico   1980 NAFTA outgoing               217.\n 2 Mexico   1980 NAFTA incoming              1102.\n 3 USA      1990 NAFTA outgoing              -585.\n 4 USA      1990 NAFTA incoming              1869.\n 5 France   1980 EU    outgoing              1351.\n 6 France   1980 EU    incoming               369.\n 7 Mexico   1990 NAFTA outgoing               846.\n 8 Mexico   1990 NAFTA incoming              1458.\n 9 USA      1980 NAFTA outgoing               551.\n10 USA      1980 NAFTA incoming              1212.\n11 France   1990 EU    outgoing              1932.\n12 France   1990 EU    incoming               749.\n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\n\nAfter pivoting the case is number of certain response in a division. I think it may be easier to visualize the data using this type of table. So we may say that data is tidy because it is easier to make next steps in analyzing data. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarriage_new<-pivot_longer(marriage, col = c(Yes, No, Response_not_clear, Non_responding),\n                 names_to=\"Response_type\",\n                 values_to = \"Number\")\nmarriage_new\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 620 × 4\n   Division  StateTerritory            Response_type      Number\n   <chr>     <chr>                     <chr>              <chr> \n 1 Banks     New South Wales Divisions Yes                37736 \n 2 Banks     New South Wales Divisions No                 46343 \n 3 Banks     New South Wales Divisions Response_not_clear 247   \n 4 Banks     New South Wales Divisions Non_responding     20928 \n 5 Barton    New South Wales Divisions Yes                37153 \n 6 Barton    New South Wales Divisions No                 47984 \n 7 Barton    New South Wales Divisions Response_not_clear 226   \n 8 Barton    New South Wales Divisions Non_responding     24008 \n 9 Bennelong New South Wales Divisions Yes                42943 \n10 Bennelong New South Wales Divisions No                 43215 \n# … with 610 more rows\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}