{
  "hash": "b73074a6a759b01f4bbafa6e58ad0a66",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4 Instructions\"\nauthor: \"Meredith Rolfe\"\ndesription: \"More data wrangling: pivoting\"\ndate: \"08/18/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - abc_poll\n  - eggs\n  - fed_rates\n  - hotel_bookings\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(tidyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   abc_poll.csv ⭐\n-   poultry_tidy.xlsx or organiceggpoultry.xls⭐⭐\n-   FedFundsRate.csv⭐⭐⭐\n-   hotel_bookings.csv⭐⭐⭐⭐\n-   debt_in_trillions.xlsx ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read csv file into dataframe\npoultry_data <- read_excel(\"_data/poultry_tidy.xlsx\")\n\n# Printing the top 5 rows\nhead(poultry_data, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  Product  Year Month    Price_Dollar\n  <chr>   <dbl> <chr>           <dbl>\n1 Whole    2013 January          2.38\n2 Whole    2013 February         2.38\n3 Whole    2013 March            2.38\n4 Whole    2013 April            2.38\n5 Whole    2013 May              2.38\n```\n:::\n\n```{.r .cell-code}\ndim(poultry_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 600   4\n```\n:::\n\n```{.r .cell-code}\n# Getting some initial statistics\nunique(poultry_data$Product)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Whole\"          \"B/S Breast\"     \"Bone-in Breast\" \"Whole Legs\"    \n[5] \"Thighs\"        \n```\n:::\n\n```{.r .cell-code}\nmin(poultry_data$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2004\n```\n:::\n\n```{.r .cell-code}\nmax(poultry_data$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2013\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe data consists of different poultry pieces (breast, thigh, etc.), and their prices in dollars through different years, starting from 2004, right upto 2013. The prices are documented month-wise for this period. \nThe dataset is composed of 600 rows and 4 columns, which holistically represent this data.\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transforming Year and Month columns into \"Date\" column\npoultry_data$Date <- format(as.Date((paste(poultry_data$Year,poultry_data$Month,\"01\",sep=\"\")), \"%Y%b%e\"), \"%Y-%m\")\n\nhead(poultry_data, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n  Product  Year Month    Price_Dollar Date   \n  <chr>   <dbl> <chr>           <dbl> <chr>  \n1 Whole    2013 January          2.38 2013-01\n2 Whole    2013 February         2.38 2013-02\n3 Whole    2013 March            2.38 2013-03\n4 Whole    2013 April            2.38 2013-04\n5 Whole    2013 May              2.38 2013-05\n```\n:::\n\n```{.r .cell-code}\n# Get rows having no values in \"Price_Dollar column\"\npoultry_data[is.na(poultry_data$Price_Dollar), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 5\n  Product         Year Month    Price_Dollar Date   \n  <chr>          <dbl> <chr>           <dbl> <chr>  \n1 Bone-in Breast  2004 January            NA 2004-01\n2 Bone-in Breast  2004 February           NA 2004-02\n3 Bone-in Breast  2004 March              NA 2004-03\n4 Bone-in Breast  2004 April              NA 2004-04\n5 Bone-in Breast  2004 May                NA 2004-05\n6 Bone-in Breast  2004 June               NA 2004-06\n7 Thighs          2004 January            NA 2004-01\n```\n:::\n\n```{.r .cell-code}\n# Populating the columns with 0, if no price value is available\npoultry_data <- poultry_data %>%\n  mutate(\n    Price_Dollar = ifelse(is.na(Price_Dollar), 0 , Price_Dollar)\n  )\n\n# Grouping data by Product types\npoultry_grouped <- poultry_data %>%\n  group_by(Product) %>%\n  summarise(\n    price_mean = mean(Price_Dollar),\n    price_median = median(Price_Dollar)\n  )\n\npoultry_grouped\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  Product        price_mean price_median\n  <chr>               <dbl>        <dbl>\n1 B/S Breast           6.55         6.46\n2 Bone-in Breast       3.71         3.90\n3 Thighs               2.16         2.22\n4 Whole                2.31         2.35\n5 Whole Legs           2.03         2.04\n```\n:::\n\n```{.r .cell-code}\nggplot(poultry_grouped) + \n  geom_point(aes(x=Product, y=price_mean)) +\n  ylab(\"Price Mean (in Dollars)\") + \n  xlab(\"Product type\") + \n  ggtitle(\"Graph to compare product type to mean price by product\")\n```\n\n::: {.cell-output-display}\n![](challenge4_SahasraIyer_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Boxplot to find price variations in each product type\nggplot(poultry_data, aes(x=Product, y=Price_Dollar, group=Product)) + \n  geom_boxplot() +\n  ylab(\"Price (in dollars)\") + \n  ggtitle(\"Boxplot for product type price comparison\")\n```\n\n::: {.cell-output-display}\n![](challenge4_SahasraIyer_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Data grouped by date\npoultry_grouped_date <- poultry_data %>%\n  group_by(Date) %>%\n  summarise(\n    price_mean = mean(Price_Dollar),\n    price_median = median(Price_Dollar)\n  )\n\npoultry_grouped_date\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 3\n   Date    price_mean price_median\n   <chr>        <dbl>        <dbl>\n 1 2004-01       2.07         1.94\n 2 2004-02       2.47         1.98\n 3 2004-03       2.50         2.03\n 4 2004-04       2.50         2.03\n 5 2004-05       2.51         2.03\n 6 2004-06       2.52         2.02\n 7 2004-07       3.31         2.17\n 8 2004-08       3.31         2.17\n 9 2004-09       3.31         2.17\n10 2004-10       3.31         2.17\n# … with 110 more rows\n```\n:::\n\n```{.r .cell-code}\noptions(repr.plot.width = 6, repr.plot.height =3)\n\ngraph <- ggplot(poultry_grouped_date, aes(x=Date, y=price_mean)) + \n  geom_point() + \n  ylab(\"Price Mean (in Dollars)\") + \n  theme_minimal() +\n  theme(text = element_text(size = 6),element_line(size =1)) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + \n  ggtitle(\"Price mean per month (2004 - 2013)\")\n\ngraph\n```\n\n::: {.cell-output-display}\n![](challenge4_SahasraIyer_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfilter(poultry_data, Year==\"2013\" & Month==\"November\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n  Product         Year Month    Price_Dollar Date   \n  <chr>          <dbl> <chr>           <dbl> <chr>  \n1 Whole           2013 November         2.38 2013-11\n2 B/S Breast      2013 November         7.04 2013-11\n3 Bone-in Breast  2013 November         3.90 2013-11\n4 Whole Legs      2013 November         2.04 2013-11\n5 Thighs          2013 November         2.16 2013-11\n```\n:::\n:::\n\nAny additional comments?\n\n## Identify variables that need to be mutated\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, are all time variables correctly coded as dates? Are all string variables reduced and cleaned to sensible categories? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nFor this data, I have used the Month and Year values to create a new \"Date\" column. I have then used this column, as well as the Product column, to group the data to get mean price and median price values. While the graphs formed by this grouping are not very informative, on scaling the data, this could be extremely informative. \n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reading into dataframe\ndata <- read_excel('_data/debt_in_trillions.xlsx')\ndata <- data %>%\n  separate(c(\"Year and Quarter\"), c(\"Year\", \"Quarter\"), \":\")\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 74 × 9\n   Year  Quarter Mortgage `HE Revolving` `Auto Loan` Credi…¹ Stude…² Other Total\n   <chr> <chr>      <dbl>          <dbl>       <dbl>   <dbl>   <dbl> <dbl> <dbl>\n 1 03    Q1          4.94          0.242       0.641   0.688   0.241 0.478  7.23\n 2 03    Q2          5.08          0.26        0.622   0.693   0.243 0.486  7.38\n 3 03    Q3          5.18          0.269       0.684   0.693   0.249 0.477  7.56\n 4 03    Q4          5.66          0.302       0.704   0.698   0.253 0.449  8.07\n 5 04    Q1          5.84          0.328       0.72    0.695   0.260 0.446  8.29\n 6 04    Q2          5.97          0.367       0.743   0.697   0.263 0.423  8.46\n 7 04    Q3          6.21          0.426       0.751   0.706   0.33  0.41   8.83\n 8 04    Q4          6.36          0.468       0.728   0.717   0.346 0.423  9.04\n 9 05    Q1          6.51          0.502       0.725   0.71    0.364 0.394  9.21\n10 05    Q2          6.70          0.528       0.774   0.717   0.374 0.402  9.49\n# … with 64 more rows, and abbreviated variable names ¹​`Credit Card`,\n#   ²​`Student Loan`\n```\n:::\n\n```{.r .cell-code}\n# Group data by year, and get total and mean debt per year\ndata_grouped <- data %>%\n  group_by(Year) %>%\n  summarise(total_debt_by_year = sum(Total),\n            mean_debt_by_year = mean(Total))\n\n# Plot the mean debt per year\nggplot(data_grouped, aes(x=Year, y=mean_debt_by_year, group=1)) + ylab(\"Mean debt (in Trillions)\") + \n  geom_point() + \n  geom_line() + \n  ggtitle(\"Year vs Mean debt (in Trillions) \")\n```\n\n::: {.cell-output-display}\n![](challenge4_SahasraIyer_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndata_grouped\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 × 3\n   Year  total_debt_by_year mean_debt_by_year\n   <chr>              <dbl>             <dbl>\n 1 03                  30.2              7.56\n 2 04                  34.6              8.66\n 3 05                  38.5              9.62\n 4 06                  43.6             10.9 \n 5 07                  47.8             12.0 \n 6 08                  50.5             12.6 \n 7 09                  49.4             12.3 \n 8 10                  47.6             11.9 \n 9 11                  46.7             11.7 \n10 12                  45.5             11.4 \n11 13                  45.2             11.3 \n12 14                  46.8             11.7 \n13 15                  47.9             12.0 \n14 16                  49.5             12.4 \n15 17                  51.7             12.9 \n16 18                  53.6             13.4 \n17 19                  55.6             13.9 \n18 20                  57.5             14.4 \n19 21                  29.6             14.8 \n```\n:::\n\n```{.r .cell-code}\n# Group data by year and get mean value statistics for each debt type\ndata_by_debt_type <- data %>%\n   group_by(Year) %>% \n   summarise(mort_mean = mean(Mortgage),\n             herev_mean = mean(`HE Revolving`),\n             auto_mean = mean(`Auto Loan`),\n             cred_mean = mean(`Credit Card`),\n             stud_mean = mean(`Student Loan`))\n\ndata_by_debt_type\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 × 6\n   Year  mort_mean herev_mean auto_mean cred_mean stud_mean\n   <chr>     <dbl>      <dbl>     <dbl>     <dbl>     <dbl>\n 1 03         5.22      0.268     0.663     0.693     0.246\n 2 04         6.09      0.397     0.736     0.704     0.300\n 3 05         6.80      0.534     0.780     0.724     0.377\n 4 06         7.87      0.595     0.806     0.746     0.450\n 5 07         8.79      0.626     0.808     0.804     0.524\n 6 08         9.26      0.685     0.804     0.853     0.604\n 7 09         9.00      0.710     0.742     0.818     0.688\n 8 10         8.65      0.680     0.707     0.742     0.777\n 9 11         8.43      0.633     0.721     0.697     0.859\n10 12         8.10      0.584     0.759     0.676     0.935\n11 13         7.93      0.539     0.829     0.671     1.02 \n12 14         8.14      0.517     0.917     0.677     1.13 \n13 15         8.20      0.497     1.02      0.708     1.20 \n14 16         8.39      0.477     1.12      0.742     1.28 \n15 17         8.74      0.45      1.20      0.798     1.36 \n16 18         9.05      0.426     1.25      0.839     1.43 \n17 19         9.41      0.398     1.31      0.881     1.49 \n18 20         9.85      0.368     1.36      0.834     1.54 \n19 21        10.3       0.328     1.40      0.778     1.58 \n```\n:::\n\n```{.r .cell-code}\n# Preprocess the data, to pivot it for graphing\ncol_names = names(data_by_debt_type)\ncol_names <- col_names[!col_names %in% c(\"Year\")]\n\ncol_names \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"mort_mean\"  \"herev_mean\" \"auto_mean\"  \"cred_mean\"  \"stud_mean\" \n```\n:::\n\n```{.r .cell-code}\n# Pivot the data such that each case represents the mean debt type for a given year\npivoted_debt_data <- pivot_longer(data_by_debt_type, cols=col_names, \n                          names_to = \"debt_type\",\n                          values_to = \"debt_mean_value\")\n\n# Graphing the data\nggplot(pivoted_debt_data, aes(x = Year)) +\n  geom_line(aes(y = debt_mean_value, group=debt_type, color=debt_type)) + \n  xlab(\"Year\") + \n  ylab(\"Debt mean (in trillions) \") + \n  ggtitle(\"Mean debt value across years, per debt type\") + \n  guides(color = guide_legend(title=\"Debt type\"))\n```\n\n::: {.cell-output-display}\n![](challenge4_SahasraIyer_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\npivoted_debt_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 95 × 3\n   Year  debt_type  debt_mean_value\n   <chr> <chr>                <dbl>\n 1 03    mort_mean            5.22 \n 2 03    herev_mean           0.268\n 3 03    auto_mean            0.663\n 4 03    cred_mean            0.693\n 5 03    stud_mean            0.246\n 6 04    mort_mean            6.09 \n 7 04    herev_mean           0.397\n 8 04    auto_mean            0.736\n 9 04    cred_mean            0.704\n10 04    stud_mean            0.300\n# … with 85 more rows\n```\n:::\n:::\n\n\nAny additional comments?\n\nWe can see that the mortgage debt has consistently been higher across all the years that the data has been collated for. The mortgage debt is almost 5 time the average debt of all other debt types. \n",
    "supporting": [
      "challenge4_SahasraIyer_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}