{
  "hash": "d609eb01a00a9ea9e39b7b80005769a2",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4 Instructions\"\nauthor: \"Owen Tibby\"\ndesription: \"More data wrangling: pivoting\"\ndate: \"10/05/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - poultry_tidy\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install pacman (\"package manager\") if needed\nif (!require(\"pacman\")) install.packages(\"pacman\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in contrib.url(repos, \"source\"): trying to use CRAN without setting a mirror\n```\n:::\n\n```{.r .cell-code}\n# Load  packages with pacman\npacman::p_load(pacman, rio, tidyverse, dplyr, readxl, readr)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in loadNamespace(x): there is no package called 'pacman'\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n\n\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## [Challenge Overview]{.underline}\n\n[*Today's challenge is to:*]{.underline}\n\n1)  [*read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)*]{.underline}\n2)  [*tidy data (as needed, including sanity checks)*]{.underline}\n3)  [*identify variables that need to be mutated*]{.underline}\n4)  [*mutate variables and sanity check all mutations*]{.underline}\n\n## [*Read in data*]{.underline}\n\n[*Read in one (or more) of the following datasets, using the correct R package and command.*]{.underline}\n\n-   [*abc_poll.csv ‚≠ê*]{.underline}\n-   [*poultry_tidy.xlsx or organiceggpoultry.xls‚≠ê‚≠ê*]{.underline}\n-   [*FedFundsRate.csv‚≠ê‚≠ê‚≠ê*]{.underline}\n-   [*hotel_bookings.csv‚≠ê‚≠ê‚≠ê‚≠ê*]{.underline}\n-   [*debt_in_trillions.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê \\###*]{.underline}\n\n------------------------------------------------------------------------\n\nFor my first attempt at this challenge, I'll be working with the poultry_tidy.csv data. üòé\n\n**Read in data: Method A**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Reading in data (method A)\n#poultry_tidy <- read_excel(\"_data/poultry_tidy.xlsx\")\npoultry_tidy <- read_excel(\"_data/poultry_tidy.xlsx\", \n    col_types = c(\"text\", \"numeric\", \"text\", \n        \"numeric\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in read_excel(\"_data/poultry_tidy.xlsx\", col_types = c(\"text\", \"numeric\", : could not find function \"read_excel\"\n```\n:::\n\n```{.r .cell-code}\nptidy <- poultry_tidy\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'poultry_tidy' not found\n```\n:::\n:::\n\n\n**Read in data: Method B using import ()**\n\nThis is very useful when importing other file formats like .xlsx\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Reading in data (method B) using the import function in rio\n\n#(poultry_tidy <- import(\"_data/poultry_tidy.xlsx\") %>% as_tibble())\n```\n:::\n\n\n### [*Briefly describe the data*]{.underline}\n\n\\*\\*The data in poultry_tidy represents the wholesaling to first receivers of 5 types of poultry products from 2004 to 2013. My analysis will detail several observances for price increases, missing values as well as the year-by-year totals for each poultry product.\n\n\\## [*Tidy Data (as needed)*]{.underline}\n\n[*Is your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.*]{.underline}\n\n**First, I want to explore how the data is stored/formatted in each column (character, mumeric, etc.). I want to ensure numeric fields are strictly numeric and character fields the same.**\n\n**From the summary() function I gather that only the *Price_Dollar* has NAs**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(poultry_tidy)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(poultry_tidy): object 'poultry_tidy' not found\n```\n:::\n\n```{.r .cell-code}\n#Finding the number of distinct products\npoultry_tidy %>% \n  select(Product) %>% \ndistinct(Product, .keep_all = TRUE) %>% as.tibble()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in as.tibble(.): could not find function \"as.tibble\"\n```\n:::\n:::\n\n\n**Finding the specific products/ years that had NAs (I'll keep this saved in a variable just in case I want to access it later)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Saving data with NAs\npoultry_tidy_raw <- poultry_tidy\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'poultry_tidy' not found\n```\n:::\n\n```{.r .cell-code}\n#Showing NAs\nna_poultry <- poultry_tidy[is.na(poultry_tidy$Price_Dollar),]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'poultry_tidy' not found\n```\n:::\n\n```{.r .cell-code}\nprint(na_poultry)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in print(na_poultry): object 'na_poultry' not found\n```\n:::\n:::\n\n\nAny additional comments?\n\n## [Identify variables that need to be mutated]{.underline}\n\n[Are there any variables that require mutation to be usable in your analysis stream? For example, are all time variables correctly coded as dates? Are all string variables reduced and cleaned to sensible categories? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?]{.underline}\n\n[Document your work here.]{.underline}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Mutating Price_Dollar (so that I can remove the NAs without a problem)\n# poultry_tidy <- poultry_tidy %>%\n# mutate(Price_withNA = Price_Dollar) %>%\n#   head()\n\n#Mutating before making a date column\n poultry_tidy <- mutate(poultry_tidy, Month2= `Month`, Year2= `Year`) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(poultry_tidy, Month2 = Month, Year2 = Year): object 'poultry_tidy' not found\n```\n:::\n\n```{.r .cell-code}\n#Replacing NAs with 0\n# poultry_tidy <- poultry_tidy %>%\n# mutate(across(Price_Dollar, ~replace_na(.x,0)))\n# poultry_tidy\n\n\n#Removing NAs\n# poultry_tidy <- poultry_tidy %>%\n# mutate(across(Price_Dollar, na.rm= TRUE)) %>% \n#   dfSummary()\n```\n:::\n\n\nI could also make a date column but this is just for practice because I don't actually need it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# making a date column\n\npoultry_tidy <- unite(poultry_tidy, `Month2`,`Year2`, col = \"Date\", sep = \" \")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in unite(poultry_tidy, Month2, Year2, col = \"Date\", sep = \" \"): could not find function \"unite\"\n```\n:::\n:::\n\n\n\n**Removing the the NAs. 7 records were removed**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n poultry_tidy <- na.omit(poultry_tidy,Price_Dollar)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in na.omit(poultry_tidy, Price_Dollar): object 'poultry_tidy' not found\n```\n:::\n\n```{.r .cell-code}\n summary(poultry_tidy)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(poultry_tidy): object 'poultry_tidy' not found\n```\n:::\n:::\n\n\n**When and how has the price increased for each product?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Explore the distinct records in each column}\nPriceHikes <-poultry_tidy %>%\nselect(Year, Product, Month, Price_Dollar) %>%\n  group_by(Year) %>% \narrange(Product) %>%\ndistinct(Price_Dollar, .keep_all = TRUE) %>% \n  print()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in select(., Year, Product, Month, Price_Dollar): object 'poultry_tidy' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(PriceHikes)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(PriceHikes): object 'PriceHikes' not found\n```\n:::\n:::\n\n\nThe table and summary above shows how the price to First Receivers increased, when it increased and how many price hikes took place within the period (76).\n\nNow it may be useful to explore how we can simply the visualisation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# #Replacing NAs with 0\npoultry_tidy <- poultry_tidy %>%\nmutate(across(Price_Dollar, ~replace_na(.x,0))) %>%\n\n\n#Pivot Wider\nselect(Product, Year, Month, Price_Dollar) %>% \n  pivot_wider(names_from = \"Month\", values_from = \"Price_Dollar\") %>% \n  tail() %>% \n  print()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in pivot_wider(., names_from = \"Month\", values_from = \"Price_Dollar\"): could not find function \"pivot_wider\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Adding a Total Column\npoultry_tidy <- poultry_tidy %>%\nrowwise() %>% \n  mutate(Total = sum(c_across(`January`: `December`))) %>% \nprint()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in rowwise(.): object 'poultry_tidy' not found\n```\n:::\n:::\n\n\n\\`\\`\\`\n\nAny additional comments?\n\nAlthough this data set was not particularly challenging, it showed me that I need to revisit how to replace NAs.\n\nI noticed that even after replacing the NAs as Zeros, the total column is not summing. I am assuming it may be a parsing error.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}