{
  "hash": "80e1679feecd069516b3807c473653fa",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 Instructions\"\nauthor: \"Matthew Norberg\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"09/26/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xls ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdf <- read_excel('./_data/USA Households by Total Money Income, Race, and Hispanic Origin of Householder 1967 to 2019.xlsx', skip = 4)\nmdf <- select(mdf, -(Total)) %>%\n       rename(Number = ...2,\n              MedianEstimate = Estimate...13, \n              MeanEstimate = Estimate...15,\n              MedianEstimateMOE = `Margin of error1 (¬±)...14`,\n              MeanEstimateMOE = `Margin of error1 (¬±)...16`) %>%\n       head(-31)\nhead(mdf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 15\n  ...1    Number Under‚Ä¶¬π $15,0‚Ä¶¬≤ $25,0‚Ä¶¬≥ $35,0‚Ä¶‚Å¥ $50,0‚Ä¶‚Åµ $75,0‚Ä¶‚Å∂ $100,‚Ä¶‚Å∑ $150,‚Ä¶‚Å∏\n  <chr>   <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 ALL RA‚Ä¶ <NA>      NA      NA      NA      NA      NA      NA      NA      NA  \n2 2019    128451     9.1     8       8.3    11.7    16.5    12.3    15.5     8.3\n3 2018    128579    10.1     8.8     8.7    12      17      12.5    15       7.2\n4 2017 2  127669    10       9.1     9.2    12      16.4    12.4    14.7     7.3\n5 2017    127586    10.1     9.1     9.2    11.9    16.3    12.6    14.8     7.5\n6 2016    126224    10.4     9       9.2    12.3    16.7    12.2    15       7.2\n# ‚Ä¶ with 5 more variables: `$200,000 and over` <dbl>, MedianEstimate <dbl>,\n#   MedianEstimateMOE <dbl>, MeanEstimate <chr>, MeanEstimateMOE <chr>, and\n#   abbreviated variable names ¬π‚Äã`Under $15,000`, ¬≤‚Äã`$15,000\\r\\nto\\r\\n$24,999`,\n#   ¬≥‚Äã`$25,000\\r\\nto\\r\\n$34,999`, ‚Å¥‚Äã`$35,000\\r\\nto\\r\\n$49,999`,\n#   ‚Åµ‚Äã`$50,000\\r\\nto\\r\\n$74,999`, ‚Å∂‚Äã`$75,000\\r\\nto\\r\\n$99,999`,\n#   ‚Å∑‚Äã`$100,000\\r\\nto\\r\\n$149,999`, ‚Å∏‚Äã`$150,000\\r\\nto\\r\\n$199,999`\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nDescribe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\"\n\nThe data set looks at total income by race and Hispanic origin of United States Households from 1967 to 2019.  The initial representation of the data is unorganized.  An arbitrary row describes total income for a given race and Hispanic origin by year.  Note that a row represents a population of households, not just one.\n\nThe first column of the data set provides the Race and Hispanic Origin as well as the year.  This format is readable in an excel sheet, but it is not tidy.  The second column describes the total number of households in the row.  The next group of columns is used to split the population into a number of different income groups.  The value in any of these columns tells us what percent of the population (column 2) falls into that income group.  For instance, if there is a value of 10 in the 'Under \\$15,000' column, it means that 10% of that population makes less than \\$15,000.  Finally, the last 2 groups of columns describe the median income and mean income of the group respectively.  Additionally, there are columns to describe how good the median income and mean income estimates are.\n\nThe first problem with the data set is the leftmost column.  In the excel file, it is being used to describe two different parameters: Race/Origin and Year.  This is not tidy data because it is describing more than one parameter. \n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA     67.1    1312.\n2 USA      1990 NAFTA   1131.     1398.\n3 France   1980 EU       340.     1734.\n4 Mexico   1990 NAFTA     89.4    1869.\n5 USA      1980 NAFTA    205.     2140.\n6 France   1990 EU      1010.      888.\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOr simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n### Challenge: Describe the final dimensions\n\nDocument your work here.\n\nTo make this tidy, I would like to to make one column which describes the race and another column which describes the year.  This was done in two steps.  First, I cleaned the column to get rid of footnotes and excess information that was present in the excel file.  Next, I created a vector containing the race information for each row such that the ith item in the vector corresponded to the ith row of the tibble.  I added this vector to the tibble as the Race Column and then removed the values that contain NA to visualize the result.  The code is placed below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Clean the leftmost column\nc1 <- mdf$...1\nfor (i in seq_along(c1)) {\n  item <- c1[[i]]\n  # Case where item is a category containing a number -> \"WHITE ALONE 24\"\n  if (!(is.na(slice(mdf, i)$Number)) & str_detect(item, \" \")) {\n    pieces <- str_split(item, \" \")[[1]]\n    c1[i] = pieces[1]\n  }\n  # Case where item is has superscript -> \"2017 2\"\n  else if (is.na(slice(mdf, i)$Number)){\n    c1[i] = str_squish(gsub('[0-9]+', '', item))\n  }\n}\n# Reset leftmost column \nmdf$...1 <- c1\n\n# Create a new column describing race information\nc2 <- mdf$...1\ncategory <- c2[[1]]\nfor (i in seq_along(c2)) {\n  item <- c2[[i]]\n  if (!(str_detect(item, \"[0-9][0-9][0-9][0-9]\")))\n      category <- item\n  c2[i] = category\n}\n# Add new column to tibble, remove old column\nmdf <- mutate(mdf, `Race/Hispanic` = c2) %>% \n       relocate(`Race/Hispanic`, .after = `...1`) %>%\n       rename(Year = `...1`)\n# Remove old rows\nmdf <- na.omit(mdf)\nhead(mdf, n = 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 √ó 16\n   Year  Race/H‚Ä¶¬π Number Under‚Ä¶¬≤ $15,0‚Ä¶¬≥ $25,0‚Ä¶‚Å¥ $35,0‚Ä¶‚Åµ $50,0‚Ä¶‚Å∂ $75,0‚Ä¶‚Å∑ $100,‚Ä¶‚Å∏\n   <chr> <chr>    <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 2019  ALL RAC‚Ä¶ 128451     9.1     8       8.3    11.7    16.5    12.3    15.5\n 2 2018  ALL RAC‚Ä¶ 128579    10.1     8.8     8.7    12      17      12.5    15  \n 3 2017  ALL RAC‚Ä¶ 127669    10       9.1     9.2    12      16.4    12.4    14.7\n 4 2017  ALL RAC‚Ä¶ 127586    10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 5 2016  ALL RAC‚Ä¶ 126224    10.4     9       9.2    12.3    16.7    12.2    15  \n 6 2015  ALL RAC‚Ä¶ 125819    10.6    10       9.6    12.1    16.1    12.4    14.9\n 7 2014  ALL RAC‚Ä¶ 124587    11.4    10.5     9.6    12.6    16.4    12.1    14  \n 8 2013  ALL RAC‚Ä¶ 123931    11.4    10.3     9.5    12.5    16.8    12      13.9\n 9 2013  ALL RAC‚Ä¶ 122952    11.3    10.4     9.7    13.1    17      12.5    13.6\n10 2012  ALL RAC‚Ä¶ 122459    11.4    10.6    10.1    12.5    17.4    12      13.9\n11 2011  ALL RAC‚Ä¶ 121084    11.6    10.2    10.2    13.1    17.2    11.9    13.8\n12 2010  ALL RAC‚Ä¶ 119927    11.2    10.7     9.4    13.3    16.8    12.4    14.1\n13 2009  ALL RAC‚Ä¶ 117538    10.4    10       9.7    13.2    17.4    12.4    14.5\n14 2008  ALL RAC‚Ä¶ 117181    10.4    10       9.4    13.4    17      12.5    15  \n15 2007  ALL RAC‚Ä¶ 116783    10      10       9      12.8    17.3    12.6    15.3\n# ‚Ä¶ with 6 more variables: `$150,000\\r\\nto\\r\\n$199,999` <dbl>,\n#   `$200,000 and over` <dbl>, MedianEstimate <dbl>, MedianEstimateMOE <dbl>,\n#   MeanEstimate <chr>, MeanEstimateMOE <chr>, and abbreviated variable names\n#   ¬π‚Äã`Race/Hispanic`, ¬≤‚Äã`Under $15,000`, ¬≥‚Äã`$15,000\\r\\nto\\r\\n$24,999`,\n#   ‚Å¥‚Äã`$25,000\\r\\nto\\r\\n$34,999`, ‚Åµ‚Äã`$35,000\\r\\nto\\r\\n$49,999`,\n#   ‚Å∂‚Äã`$50,000\\r\\nto\\r\\n$74,999`, ‚Å∑‚Äã`$75,000\\r\\nto\\r\\n$99,999`,\n#   ‚Å∏‚Äã`$100,000\\r\\nto\\r\\n$149,999`\n```\n:::\n:::\n\n\nAny additional comments?\n\nI like the way that the data frame is structured by the code above and I would argue that it does not need to be pivoted any further.  A case is made up by the pairing of Year and Race/Hispanic columns.  The view of the data created above clearly shows a case on each row which makes it easy to look at the data.  At this point, if you pivot the data to make it longer, you get a lot of repetition across rows.  If you pivot the table to make it wider, you end up with many values that are not available.\n\nIf I were to rearrange the tibble, I would probably sort the rows by Year so that you can compare different Race/Hispanic values across multiple years.  However, I do think there are a few different ways you can pivot the table to view it differently (although I don't think the views are as organized due to data repetition).  These alternate views are presented below in the pivot the data section. \n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"trade_direction\",\n                 values_to = \"trade_value\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 √ó 5\n   country  year trade trade_direction trade_value\n   <chr>   <dbl> <chr> <chr>                 <dbl>\n 1 Mexico   1980 NAFTA outgoing               67.1\n 2 Mexico   1980 NAFTA incoming             1312. \n 3 USA      1990 NAFTA outgoing             1131. \n 4 USA      1990 NAFTA incoming             1398. \n 5 France   1980 EU    outgoing              340. \n 6 France   1980 EU    incoming             1734. \n 7 Mexico   1990 NAFTA outgoing               89.4\n 8 Mexico   1990 NAFTA incoming             1869. \n 9 USA      1980 NAFTA outgoing              205. \n10 USA      1980 NAFTA incoming             2140. \n11 France   1990 EU    outgoing             1010. \n12 France   1990 EU    incoming              888. \n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\nOne interesting way to rearrange the data would be to combine the \"MedianEstimate\", \"MeanEstimate\", \"MedianEstimateMOE\", and \"MeanEstimateMOE\" columns into one to make the tibble longer.  Before we can do that, we need to convert the \"MeanEstimate\" and \"MeanEstimateMOE\" columns to have a <double> type.  Currently, they are character types because there are a few entries in those columns that have a value of \"N\" for some reason.  The code to do that is placed below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove \"N\"\nc1 = mdf$MeanEstimate\nfor (i in seq_along(c1)) {\n  item <- c1[[i]]\n  if (item == \"N\")\n    c1[i] = \"-1\"\n}\n\nc2 = mdf$MeanEstimateMOE\nfor (i in seq_along(c2)) {\n  item <- c2[[i]]\n  if (item == \"N\")\n    c2[i] = \"-1\"\n}\n\ntest <- mdf\ntest$MeanEstimate = c1\ntest$MeanEstimateMOE = c2\ntest <- type_convert(test)\n```\n:::\n\n\nNow we can pivot the tibble to make it longer.  As a sanity check, a case would be 4 variables.  There are currently 340 rows in the data frame.  Therefore, when we pivot the tibble, we expect there to be 340 * 4 = 1,360 rows in the resulting data set.  This is due to the fact that there will be four more rows for each row that was in the dataset before pivoting.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivotDF <- pivot_longer(test, cols = c(\"MedianEstimate\", \"MeanEstimate\", \"MedianEstimateMOE\", \"MeanEstimateMOE\"), names_to = \"EstimateType\", values_to = \"EstimateValue\")\nhead(pivotDF)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 14\n   Year Race/Hi‚Ä¶¬π Number Under‚Ä¶¬≤ $15,0‚Ä¶¬≥ $25,0‚Ä¶‚Å¥ $35,0‚Ä¶‚Åµ $50,0‚Ä¶‚Å∂ $75,0‚Ä¶‚Å∑ $100,‚Ä¶‚Å∏\n  <dbl> <chr>     <chr>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1  2019 ALL RACES 128451     9.1     8       8.3    11.7    16.5    12.3    15.5\n2  2019 ALL RACES 128451     9.1     8       8.3    11.7    16.5    12.3    15.5\n3  2019 ALL RACES 128451     9.1     8       8.3    11.7    16.5    12.3    15.5\n4  2019 ALL RACES 128451     9.1     8       8.3    11.7    16.5    12.3    15.5\n5  2018 ALL RACES 128579    10.1     8.8     8.7    12      17      12.5    15  \n6  2018 ALL RACES 128579    10.1     8.8     8.7    12      17      12.5    15  \n# ‚Ä¶ with 4 more variables: `$150,000\\r\\nto\\r\\n$199,999` <dbl>,\n#   `$200,000 and over` <dbl>, EstimateType <chr>, EstimateValue <dbl>, and\n#   abbreviated variable names ¬π‚Äã`Race/Hispanic`, ¬≤‚Äã`Under $15,000`,\n#   ¬≥‚Äã`$15,000\\r\\nto\\r\\n$24,999`, ‚Å¥‚Äã`$25,000\\r\\nto\\r\\n$34,999`,\n#   ‚Åµ‚Äã`$35,000\\r\\nto\\r\\n$49,999`, ‚Å∂‚Äã`$50,000\\r\\nto\\r\\n$74,999`,\n#   ‚Å∑‚Äã`$75,000\\r\\nto\\r\\n$99,999`, ‚Å∏‚Äã`$100,000\\r\\nto\\r\\n$149,999`\n```\n:::\n:::\n\n\nOne more view that is interesting occurs when you pivot the columns that describe the percent of the population that falls into that income group.  The code to do that is provided below.\n\n::: {.cell}\n\n```{.r .cell-code}\npivotDF <- pivot_longer(mdf, cols = 4:12, names_to = \"IncomeType\", values_to = \"Percentage\")\nhead(pivotDF)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 9\n  Year  `Race/Hispanic` Number MedianE‚Ä¶¬π Media‚Ä¶¬≤ MeanE‚Ä¶¬≥ MeanE‚Ä¶‚Å¥ Incom‚Ä¶‚Åµ Perce‚Ä¶‚Å∂\n  <chr> <chr>           <chr>      <dbl>   <dbl> <chr>   <chr>   <chr>     <dbl>\n1 2019  ALL RACES       128451     68703     904 98088   1042    \"Under‚Ä¶     9.1\n2 2019  ALL RACES       128451     68703     904 98088   1042    \"$15,0‚Ä¶     8  \n3 2019  ALL RACES       128451     68703     904 98088   1042    \"$25,0‚Ä¶     8.3\n4 2019  ALL RACES       128451     68703     904 98088   1042    \"$35,0‚Ä¶    11.7\n5 2019  ALL RACES       128451     68703     904 98088   1042    \"$50,0‚Ä¶    16.5\n6 2019  ALL RACES       128451     68703     904 98088   1042    \"$75,0‚Ä¶    12.3\n# ‚Ä¶ with abbreviated variable names ¬π‚ÄãMedianEstimate, ¬≤‚ÄãMedianEstimateMOE,\n#   ¬≥‚ÄãMeanEstimate, ‚Å¥‚ÄãMeanEstimateMOE, ‚Åµ‚ÄãIncomeType, ‚Å∂‚ÄãPercentage\n```\n:::\n:::\n\n\nAny additional comments?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}