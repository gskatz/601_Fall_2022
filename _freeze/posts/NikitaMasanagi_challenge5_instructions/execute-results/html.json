{
  "hash": "e4537dcfa098f6c391663695f9a0b9f7",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 \"\nauthor: Nikita Masanagi\"\ndescription: \"Introduction to Visualization\"\ndate: \"08/22/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ⭐\n-   Total_cost_for_top_15_pathogens_2018.xlsx ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = read_csv(\"../posts/_data/AB_NYC_2019.csv\")\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 16\n      id name      host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n   <dbl> <chr>       <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1  2539 Clean & …    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n 2  2595 Skylit M…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n 3  3647 THE VILL…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n 4  3831 Cozy Ent…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n 5  5022 Entire A…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n 6  5099 Large Co…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n 7  5121 BlissArt…    7356 Garon   Brookl… Bedfor…    40.7   -74.0 Privat…    60\n 8  5178 Large Fu…    8967 Shunic… Manhat… Hell's…    40.8   -74.0 Privat…    79\n 9  5203 Cozy Cle…    7490 MaryEl… Manhat… Upper …    40.8   -74.0 Privat…    79\n10  5238 Cute & C…    7549 Ben     Manhat… Chinat…    40.7   -74.0 Entire…   150\n# … with 48,885 more rows, 6 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe data shows Air BnB listings in New York City from 2019. Every row listing has a location, a host with a unique ID, a price rate and information about the place itself.\n\nThis data could be used to compare prices of similar listings and even hosts in case some hosts have multiple listings.\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nAs we can see that there are some N/A values in the reviews per month, we can perform some tidying.We can replace the reviews_per_month N/A values with 0 as there are no reviews yet.\nThere are also manually entered N/A values in the “data of last review” column, but these are fine to keep in as there actually is no data available.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreplace_na(data, list(reviews_per_month = 0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 16\n      id name      host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n   <dbl> <chr>       <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1  2539 Clean & …    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n 2  2595 Skylit M…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n 3  3647 THE VILL…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n 4  3831 Cozy Ent…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n 5  5022 Entire A…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n 6  5099 Large Co…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n 7  5121 BlissArt…    7356 Garon   Brookl… Bedfor…    40.7   -74.0 Privat…    60\n 8  5178 Large Fu…    8967 Shunic… Manhat… Hell's…    40.8   -74.0 Privat…    79\n 9  5203 Cozy Cle…    7490 MaryEl… Manhat… Upper …    40.8   -74.0 Privat…    79\n10  5238 Cute & C…    7549 Ben     Manhat… Chinat…    40.7   -74.0 Entire…   150\n# … with 48,885 more rows, 6 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nFor our specific use case, this dataset may not need any mutation, as all of the values I’m interested in are in good shape and have been thoroughly tidied up.\n\n\n## Univariate Visualizations\n\nThe area we can look more into is a breakdown by borough of where the listings are. You might expect Manhattan to have the most.\nSince it attracts the most tourists, it should see a spike in the rooms available.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(neighbourhood_group, fill = room_type)) + geom_bar() +\n  theme_bw() +\n  labs(title = \"Air BnB by Location \", y = \"Number of Listins\", x = \"Borough\")\n```\n\n::: {.cell-output-display}\n![](NikitaMasanagi_challenge5_instructions_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\nThe results are as expected, Manhattan has the most Air BnB listings, but Brooklyn is a very close second with Queens having a few and the Bronx and Staten Island having very few.\n\nThis graphic also shows us a breakdown of listing count by room type as well. Visually, we can tell that Entire Homes/Apartments make up the majority of listings, but another interesting takeaway here in that there appears to be a higher proportion of these kind of listings in Manhattan than in other areas.\n\nThe bar graph for this data because it’s a good way to prepare counts and because it was easy to differentiate between sub-types.\n\n\nFor the second plot we can look at reviews per month, which could be a metric of the typical length of stay at different places.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(reviews_per_month), xlim = c(0,10)) + \n  geom_histogram(binwidth = .25) + \n  labs(title = \"Reviews Per Month\")\n```\n\n::: {.cell-output-display}\n![](NikitaMasanagi_challenge5_instructions_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nThis histogram showing the distribution of reviews per month. Most listings do not have many per month, but some have upwards of 7 or 8. Most of the listings in NYC are longer term, so this plot makes sense as most won’t be rented out too many times per month.\n\n## Bivariate Visualization(s)\n\nWe might be interested in which area has the highest demand, with the highest proce to stay per night.\nWe can use a bivariate plot to plot this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  ggplot(aes(neighbourhood_group, price), fill = neighbourhood) + \n  geom_boxplot() + \n  labs(title = \"Price per Listing by Borough\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](NikitaMasanagi_challenge5_instructions_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe plot above shows how price per night is scattered among listings in different areas.The boxplot shows the distributed prices in distributed areas \nAs we could have predicted, most of the listing in the Bronx and Staten Island are relatively cheap and collect together in one cluster. \n\nQueens appears to be cheap as a whole but does have a handful of expensive outliers. Finally, it’s clear that both Brooklyn and Manhattan are more expensive in general and have make up the vast majority of the most expensive Air BnBs.\n\nWe can use this dataset is a good example to make practice visualizations.\nThere are definitely a lot more comparisons we could make, like how reviews relate to price, or how price breaks down by neighborhood.\n",
    "supporting": [
      "NikitaMasanagi_challenge5_instructions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}