{
  "hash": "08c38391a4fc18ee30ce473964134a94",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Solutions\"\nauthor: \"Tejaswini Ketineni\"\ndate: \"11/17/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\n## Read in data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC_2019 <- read_csv(\"_data/AB_NYC_2019.csv\")\n```\n:::\n\n\n### Briefly describe the data\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nInitially viewing the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 16\n     id name       host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n  <dbl> <chr>        <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n1  2539 Clean & q…    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n2  2595 Skylit Mi…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n3  3647 THE VILLA…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n4  3831 Cozy Enti…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n5  5022 Entire Ap…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n6  5099 Large Coz…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n# … with 6 more variables: minimum_nights <dbl>, number_of_reviews <dbl>,\n#   last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"id\"                             \"name\"                          \n [3] \"host_id\"                        \"host_name\"                     \n [5] \"neighbourhood_group\"            \"neighbourhood\"                 \n [7] \"latitude\"                       \"longitude\"                     \n [9] \"room_type\"                      \"price\"                         \n[11] \"minimum_nights\"                 \"number_of_reviews\"             \n[13] \"last_review\"                    \"reviews_per_month\"             \n[15] \"calculated_host_listings_count\" \"availability_365\"              \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895    16\n```\n:::\n:::\n\nThe data set contains of 48895 rows and about 16 columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\nlibrary(dplyr)\nskim(AB_NYC_2019)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |            |\n|:------------------------|:-----------|\n|Name                     |AB_NYC_2019 |\n|Number of rows           |48895       |\n|Number of columns        |16          |\n|_______________________  |            |\n|Column type frequency:   |            |\n|character                |5           |\n|Date                     |1           |\n|numeric                  |10          |\n|________________________ |            |\n|Group variables          |None        |\n\n\n**Variable type: character**\n\n|skim_variable       | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|name                |        16|             1|   1| 179|     0|    47894|          0|\n|host_name           |        21|             1|   1|  35|     0|    11452|          0|\n|neighbourhood_group |         0|             1|   5|  13|     0|        5|          0|\n|neighbourhood       |         0|             1|   4|  26|     0|      221|          0|\n|room_type           |         0|             1|  11|  15|     0|        3|          0|\n\n\n**Variable type: Date**\n\n|skim_variable | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|last_review   |     10052|          0.79|2011-03-28 |2019-07-08 |2019-05-19 |     1764|\n\n\n**Variable type: numeric**\n\n|skim_variable                  | n_missing| complete_rate|        mean|          sd|      p0|        p25|         p50|          p75|         p100|hist  |\n|:------------------------------|---------:|-------------:|-----------:|-----------:|-------:|----------:|-----------:|------------:|------------:|:-----|\n|id                             |         0|          1.00| 19017143.24| 10983108.39| 2539.00| 9471945.00| 19677284.00|  29152178.50|  36487245.00|▆▆▆▆▇ |\n|host_id                        |         0|          1.00| 67620010.65| 78610967.03| 2438.00| 7822033.00| 30793816.00| 107434423.00| 274321313.00|▇▂▁▁▁ |\n|latitude                       |         0|          1.00|       40.73|        0.05|   40.50|      40.69|       40.72|        40.76|        40.91|▁▁▇▅▁ |\n|longitude                      |         0|          1.00|      -73.95|        0.05|  -74.24|     -73.98|      -73.96|       -73.94|       -73.71|▁▁▇▂▁ |\n|price                          |         0|          1.00|      152.72|      240.15|    0.00|      69.00|      106.00|       175.00|     10000.00|▇▁▁▁▁ |\n|minimum_nights                 |         0|          1.00|        7.03|       20.51|    1.00|       1.00|        3.00|         5.00|      1250.00|▇▁▁▁▁ |\n|number_of_reviews              |         0|          1.00|       23.27|       44.55|    0.00|       1.00|        5.00|        24.00|       629.00|▇▁▁▁▁ |\n|reviews_per_month              |     10052|          0.79|        1.37|        1.68|    0.01|       0.19|        0.72|         2.02|        58.50|▇▁▁▁▁ |\n|calculated_host_listings_count |         0|          1.00|        7.14|       32.95|    1.00|       1.00|        1.00|         2.00|       327.00|▇▁▁▁▁ |\n|availability_365               |         0|          1.00|      112.78|      131.62|    0.00|       0.00|       45.00|       227.00|       365.00|▇▂▁▁▂ |\n:::\n:::\n\nWe use skimr to understand about the data set- as per the results, we see that there are about 10 columns with numeric type of data, 5 columns which are of character data_type and one date kind of column.we see there are certain missing values in name(16),host_name(21) in character data type;\nThe highest number of missing data is observed in reviews_per_month and last_review.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id               name              host_id           host_name        \n Min.   :    2539   Length:48895       Min.   :     2438   Length:48895      \n 1st Qu.: 9471945   Class :character   1st Qu.:  7822033   Class :character  \n Median :19677284   Mode  :character   Median : 30793816   Mode  :character  \n Mean   :19017143                      Mean   : 67620011                     \n 3rd Qu.:29152178                      3rd Qu.:107434423                     \n Max.   :36487245                      Max.   :274321313                     \n                                                                             \n neighbourhood_group neighbourhood         latitude       longitude     \n Length:48895        Length:48895       Min.   :40.50   Min.   :-74.24  \n Class :character    Class :character   1st Qu.:40.69   1st Qu.:-73.98  \n Mode  :character    Mode  :character   Median :40.72   Median :-73.96  \n                                        Mean   :40.73   Mean   :-73.95  \n                                        3rd Qu.:40.76   3rd Qu.:-73.94  \n                                        Max.   :40.91   Max.   :-73.71  \n                                                                        \n  room_type             price         minimum_nights    number_of_reviews\n Length:48895       Min.   :    0.0   Min.   :   1.00   Min.   :  0.00   \n Class :character   1st Qu.:   69.0   1st Qu.:   1.00   1st Qu.:  1.00   \n Mode  :character   Median :  106.0   Median :   3.00   Median :  5.00   \n                    Mean   :  152.7   Mean   :   7.03   Mean   : 23.27   \n                    3rd Qu.:  175.0   3rd Qu.:   5.00   3rd Qu.: 24.00   \n                    Max.   :10000.0   Max.   :1250.00   Max.   :629.00   \n                                                                         \n  last_review         reviews_per_month calculated_host_listings_count\n Min.   :2011-03-28   Min.   : 0.010    Min.   :  1.000               \n 1st Qu.:2018-07-08   1st Qu.: 0.190    1st Qu.:  1.000               \n Median :2019-05-19   Median : 0.720    Median :  1.000               \n Mean   :2018-10-04   Mean   : 1.373    Mean   :  7.144               \n 3rd Qu.:2019-06-23   3rd Qu.: 2.020    3rd Qu.:  2.000               \n Max.   :2019-07-08   Max.   :58.500    Max.   :327.000               \n NA's   :10052        NA's   :10052                                   \n availability_365\n Min.   :  0.0   \n 1st Qu.:  0.0   \n Median : 45.0   \n Mean   :112.8   \n 3rd Qu.:227.0   \n Max.   :365.0   \n                 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb <- AB_NYC_2019 \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb %>%\n  count(`room_type`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  room_type           n\n  <chr>           <int>\n1 Entire home/apt 25409\n2 Private room    22326\n3 Shared room      1160\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb %>% \n  select(neighbourhood_group,neighbourhood, price)  %>% \n  group_by(neighbourhood_group) %>% \n  summarize(mean_price = mean(price),max_price = max(price),min_price = min(price),median_price=median(price))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n  neighbourhood_group mean_price max_price min_price median_price\n  <chr>                    <dbl>     <dbl>     <dbl>        <dbl>\n1 Bronx                     87.5      2500         0           65\n2 Brooklyn                 124.      10000         0           90\n3 Manhattan                197.      10000         0          150\n4 Queens                    99.5     10000        10           75\n5 Staten Island            115.       5000        13           75\n```\n:::\n:::\n\n\nWe now observe that the highest mean_price is the highest in the neighbourhood of Manhattan and lowest in Bronx.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb %>% \n  select(neighbourhood_group,neighbourhood, price)  %>% \n  group_by(neighbourhood_group) %>% \n  summarize(mean_price = mean(price),max_price = max(price),min_price = min(price),median_price=median(price))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n  neighbourhood_group mean_price max_price min_price median_price\n  <chr>                    <dbl>     <dbl>     <dbl>        <dbl>\n1 Bronx                     87.5      2500         0           65\n2 Brooklyn                 124.      10000         0           90\n3 Manhattan                197.      10000         0          150\n4 Queens                    99.5     10000        10           75\n5 Staten Island            115.       5000        13           75\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb %>% \n  select(neighbourhood_group)  %>% \n  group_by(neighbourhood_group) %>% \n  count(neighbourhood_group) %>%\n  slice(which.max(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n# Groups:   neighbourhood_group [5]\n  neighbourhood_group     n\n  <chr>               <int>\n1 Bronx                1091\n2 Brooklyn            20104\n3 Manhattan           21661\n4 Queens               5666\n5 Staten Island         373\n```\n:::\n:::\n\n\nwe see that there are higher bookings in Manhattan and the lowest in Staten Island\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb %>% \n  count(`minimum_nights`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 109 × 2\n   minimum_nights     n\n            <dbl> <int>\n 1              1 12720\n 2              2 11696\n 3              3  7999\n 4              4  3303\n 5              5  3034\n 6              6   752\n 7              7  2058\n 8              8   130\n 9              9    80\n10             10   483\n# … with 99 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb %>% \n  select(neighbourhood_group,minimum_nights)  %>% \n  group_by(neighbourhood_group) %>% \n  count(minimum_nights) %>%\n  slice(which.max(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n# Groups:   neighbourhood_group [5]\n  neighbourhood_group minimum_nights     n\n  <chr>                        <dbl> <int>\n1 Bronx                            1   362\n2 Brooklyn                         2  5321\n3 Manhattan                        1  5418\n4 Queens                           1  2178\n5 Staten Island                    2   122\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb %>% \n  select(neighbourhood_group,minimum_nights)  %>% \n  group_by(neighbourhood_group) %>% \n  count(minimum_nights) %>%\n  slice(which.min(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n# Groups:   neighbourhood_group [5]\n  neighbourhood_group minimum_nights     n\n  <chr>                        <dbl> <int>\n1 Bronx                           22     1\n2 Brooklyn                        43     1\n3 Manhattan                       33     1\n4 Queens                          17     1\n5 Staten Island                    6     1\n```\n:::\n:::\n\n\nWe observe that there are more number of bookings for one or two nights in all the neighbourhoods\n\n## Univariate Visualizations\n\nIn order to understand the count distribution for each of the neighborhood group we use bar graph.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(airbnb, aes(x = neighbourhood_group)) + \n  geom_bar(fill = \"lightblue\") + \n  labs(title = \"Neighbourhood Group count\", x = \"Neighbourhood Group\", \n     y = \"Count\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge5_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(airbnb, aes(x = room_type)) + \n  geom_bar(fill = \"lightpink\") + \n  labs(title = \"Room type and count\", x = \"Neighborhood Group\", \n     y = \"Count\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge5_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(airbnb, aes(x = price)) + \n  geom_histogram(binwidth=20,alpha=0.6,fill = \"purple\") + \n  labs(title = \"Price range and count\", x = \"Price\", \n     y = \"Count\") + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge5_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\nwe see that the high distribution is observed for room prices of 500\n\n## Bivariate Visualization(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(airbnb, aes(x = neighbourhood_group, fill = room_type)) + \n  geom_bar(bins = 25) + \n  labs(title = \"neighbourhood_group and Room Type\", x = \"neighbourhood_group\", y = \"Frequency\", \n     fill = guide_legend(\"room_type\")) + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge5_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(airbnb, aes(x = price, fill = neighbourhood_group)) + \n  geom_histogram(bins = 25) + xlim(0,1000)\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge5_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  labs(title = \"neighbourhood_group and Price\", x = \"price\", y = \"Frequency\", \n     fill = guide_legend(\"neighbourhood_group\")) + \n  theme_bw()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(airbnb, aes(x = minimum_nights, y = price,na.rm = TRUE)) +\n  geom_point(color=\"lightblue\") +\n  scale_y_continuous(label = scales::dollar) +\n  labs(x = \"Minium Nights\",\n       y = \"Price Per Night ($)\",\n       title = \"Minimum Nights vs Price Per Night ($)\")\n```\n\n::: {.cell-output-display}\n![](Tejaswini_Ketineni_challenge5_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\nThe above graph shows the price entry distribution for the nights of stay.\n\n\n\n",
    "supporting": [
      "Tejaswini_Ketineni_challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}