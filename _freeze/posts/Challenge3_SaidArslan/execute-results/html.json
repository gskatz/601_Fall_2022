{
  "hash": "2549c397c97e4be5dc54a26d6492f66c",
  "result": {
    "markdown": "---\ntitle: \"Challenge-3\"\nauthor: \"Said Arslan\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"10/01/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - eggs\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n## Read in data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs <- read.csv(\"_data/eggs_tidy.csv\")\n```\n:::\n\n\n\n### Briefly describe the data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120   6\n```\n:::\n\n```{.r .cell-code}\nhead(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     month year large_half_dozen large_dozen extra_large_half_dozen\n1  January 2004            126.0     230.000                  132.0\n2 February 2004            128.5     226.250                  134.5\n3    March 2004            131.0     225.000                  137.0\n4    April 2004            131.0     225.000                  137.0\n5      May 2004            131.0     225.000                  137.0\n6     June 2004            133.5     231.375                  137.0\n  extra_large_dozen\n1             230.0\n2             230.0\n3             230.0\n4             234.5\n5             236.0\n6             241.0\n```\n:::\n\n```{.r .cell-code}\ntail(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        month year large_half_dozen large_dozen extra_large_half_dozen\n115      July 2013              178       267.5                 188.13\n116    August 2013              178       267.5                 188.13\n117 September 2013              178       267.5                 188.13\n118   October 2013              178       267.5                 188.13\n119  November 2013              178       267.5                 188.13\n120  December 2013              178       267.5                 188.13\n    extra_large_dozen\n115               290\n116               290\n117               290\n118               290\n119               290\n120               290\n```\n:::\n\n```{.r .cell-code}\nsample_n(eggs, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       month year large_half_dozen large_dozen extra_large_half_dozen\n1   November 2005           128.50       233.5                  135.5\n2    January 2012           174.50       267.5                  185.5\n3   December 2009           174.50       271.5                  185.5\n4  September 2005           128.50       233.5                  135.5\n5     August 2011           174.50       270.0                  185.5\n6      March 2006           128.50       233.5                  135.5\n7   December 2006           128.50       233.5                  135.5\n8       July 2004           133.50       233.5                  137.0\n9    October 2012           173.25       267.5                  185.5\n10  February 2006           128.50       233.5                  135.5\n   extra_large_dozen\n1            241.000\n2            285.500\n3            285.500\n4            241.000\n5            285.500\n6            241.375\n7            241.500\n8            241.000\n9            288.500\n10           241.000\n```\n:::\n\n```{.r .cell-code}\nunique(eggs$year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013\n```\n:::\n:::\n\n\nThe dataset includes monthly prices of 4 types of boxes of eggs (in cents) beginning from January 2004 to December 2013.\n\n\nThe column variables `large_half_dozen`, `large_dozen`, `extra_large_half_dozen` and `extra_large_half_dozen` are actually not variable names but type and number of eggs in boxes. On the other hand, the values under these 4 columns show prices. Thus we should reorganize these columns so that each row represents an observation. Column names in tidied version are: `month`, `year`, `type` and `price`. \n\n\n\n## Anticipate the End Result\n\n\noriginally our dataset has 120 rows and 6 columns. I will use 4 variables for pivoting. So 2 variables will be used as identifiers for each observation. Therefore I should have 480(120*4) rows and 4(2+2) columns in the longer format.\n\n\n\n## Pivot the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs.pivoted <-pivot_longer(eggs, cols= ends_with(\"dozen\"),\n                 names_to= \"type\",\n                 values_to= \"price\")\n\nhead(eggs.pivoted)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  month     year type                   price\n  <chr>    <int> <chr>                  <dbl>\n1 January   2004 large_half_dozen        126 \n2 January   2004 large_dozen             230 \n3 January   2004 extra_large_half_dozen  132 \n4 January   2004 extra_large_dozen       230 \n5 February  2004 large_half_dozen        128.\n6 February  2004 large_dozen             226.\n```\n:::\n:::\n\n\n\nAlso, it would be better if the first column is `year` and the second column is `month` because main identifier for time of an observation is `year`. Values of `month` are repetitive.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs.pivoted <- eggs.pivoted[, c(\"year\", \"month\", \"type\", \"price\")]\n\nhead(eggs.pivoted)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n   year month    type                   price\n  <int> <chr>    <chr>                  <dbl>\n1  2004 January  large_half_dozen        126 \n2  2004 January  large_dozen             230 \n3  2004 January  extra_large_half_dozen  132 \n4  2004 January  extra_large_dozen       230 \n5  2004 February large_half_dozen        128.\n6  2004 February large_dozen             226.\n```\n:::\n:::\n\n\n\nTo check if my calculation for dimension of new dataset is correct or not, let me look at row and column numbers of pivoted dataframe.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Number of rows are: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNumber of rows are: \n```\n:::\n\n```{.r .cell-code}\nnrow(eggs.pivoted)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\ncat(\"Number of columns are: \\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNumber of columns are: \n```\n:::\n\n```{.r .cell-code}\nncol(eggs.pivoted)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\nIn new dataset, each row shows price of a specific type of box of eggs in a month of a year.\nNow, using this dataframe, we can do further price analysis by grouping based on type.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}