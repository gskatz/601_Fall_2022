{
  "hash": "3c134627d345c936dded2b0766d93dcb",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2 Solutions\"\nauthor: \"Vishnupriya Varadharaju\"\ndesription: \"Data wrangling: using group() and summarise()\"\ndate: \"10/12/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - railroads\n  - faostat\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n\noptions(dplyr.summarise.inform = FALSE)\n```\n:::\n\n\n### Working with Birds data set\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a data set, and describe the data using both words and any supporting information (e.g., tables, etc)\n2)  provide summary statistics for different interesting groups within the data, and interpret those statistics\n\n## 1. Read in the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reading the birds data into variable birds_data\nbirds_data <- read_csv(\"_data/birds.csv\")\nhead(birds_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  Domai…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year Unit \n  <chr>   <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl> <chr>\n1 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1961  1961 1000…\n2 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1962  1962 1000…\n3 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1963  1963 1000…\n4 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1964  1964 1000…\n5 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1965  1965 1000…\n6 QA      Live …       2 Afgh…    5112 Stocks     1057 Chic…    1966  1966 1000…\n# … with 3 more variables: Value <dbl>, Flag <chr>, `Flag Description` <chr>,\n#   and abbreviated variable names ¹​`Domain Code`, ²​`Area Code`,\n#   ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\n\n## 2. Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Finding the dimensions of the data\ndim(birds_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 30977    14\n```\n:::\n\n```{.r .cell-code}\n# Finding the columns of the data and their respective datatypes\nstr(birds_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspc_tbl_ [30,977 × 14] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Domain Code     : chr [1:30977] \"QA\" \"QA\" \"QA\" \"QA\" ...\n $ Domain          : chr [1:30977] \"Live Animals\" \"Live Animals\" \"Live Animals\" \"Live Animals\" ...\n $ Area Code       : num [1:30977] 2 2 2 2 2 2 2 2 2 2 ...\n $ Area            : chr [1:30977] \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n $ Element Code    : num [1:30977] 5112 5112 5112 5112 5112 ...\n $ Element         : chr [1:30977] \"Stocks\" \"Stocks\" \"Stocks\" \"Stocks\" ...\n $ Item Code       : num [1:30977] 1057 1057 1057 1057 1057 ...\n $ Item            : chr [1:30977] \"Chickens\" \"Chickens\" \"Chickens\" \"Chickens\" ...\n $ Year Code       : num [1:30977] 1961 1962 1963 1964 1965 ...\n $ Year            : num [1:30977] 1961 1962 1963 1964 1965 ...\n $ Unit            : chr [1:30977] \"1000 Head\" \"1000 Head\" \"1000 Head\" \"1000 Head\" ...\n $ Value           : num [1:30977] 4700 4900 5000 5300 5500 5800 6600 6290 6300 6000 ...\n $ Flag            : chr [1:30977] \"F\" \"F\" \"F\" \"F\" ...\n $ Flag Description: chr [1:30977] \"FAO estimate\" \"FAO estimate\" \"FAO estimate\" \"FAO estimate\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   `Domain Code` = col_character(),\n  ..   Domain = col_character(),\n  ..   `Area Code` = col_double(),\n  ..   Area = col_character(),\n  ..   `Element Code` = col_double(),\n  ..   Element = col_character(),\n  ..   `Item Code` = col_double(),\n  ..   Item = col_character(),\n  ..   `Year Code` = col_double(),\n  ..   Year = col_double(),\n  ..   Unit = col_character(),\n  ..   Value = col_double(),\n  ..   Flag = col_character(),\n  ..   `Flag Description` = col_character()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Removing the code columns and retaining the columns with detailed description\n# for better readability\nnew_birds_data <- select(birds_data, !ends_with('Code') & !('Flag'))\nhead(new_birds_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  Domain       Area        Element Item      Year Unit      Value Flag Descrip…¹\n  <chr>        <chr>       <chr>   <chr>    <dbl> <chr>     <dbl> <chr>         \n1 Live Animals Afghanistan Stocks  Chickens  1961 1000 Head  4700 FAO estimate  \n2 Live Animals Afghanistan Stocks  Chickens  1962 1000 Head  4900 FAO estimate  \n3 Live Animals Afghanistan Stocks  Chickens  1963 1000 Head  5000 FAO estimate  \n4 Live Animals Afghanistan Stocks  Chickens  1964 1000 Head  5300 FAO estimate  \n5 Live Animals Afghanistan Stocks  Chickens  1965 1000 Head  5500 FAO estimate  \n6 Live Animals Afghanistan Stocks  Chickens  1966 1000 Head  5800 FAO estimate  \n# … with abbreviated variable name ¹​`Flag Description`\n```\n:::\n\n```{.r .cell-code}\n# Getting the summary of the new data\nsummary(new_birds_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Domain              Area             Element              Item          \n Length:30977       Length:30977       Length:30977       Length:30977      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n      Year          Unit               Value          Flag Description  \n Min.   :1961   Length:30977       Min.   :       0   Length:30977      \n 1st Qu.:1976   Class :character   1st Qu.:     171   Class :character  \n Median :1992   Mode  :character   Median :    1800   Mode  :character  \n Mean   :1991                      Mean   :   99411                     \n 3rd Qu.:2005                      3rd Qu.:   15404                     \n Max.   :2018                      Max.   :23707134                     \n                                   NA's   :1036                         \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Finding the number of distinct elements in each column \n\n# Domain\nn_distinct(new_birds_data$Domain)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\ntable(new_birds_data$Domain)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nLive Animals \n       30977 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Area\n# Printing only the first 100 entries to save on space\nn_distinct(new_birds_data$Area)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 248\n```\n:::\n\n```{.r .cell-code}\ntable(new_birds_data$Area) %>%\n  head(100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n                          Afghanistan                                Africa \n                                   58                                   290 \n                              Albania                               Algeria \n                                  232                                   232 \n                       American Samoa                              Americas \n                                   58                                   232 \n                               Angola                   Antigua and Barbuda \n                                   58                                    58 \n                            Argentina                               Armenia \n                                  232                                    54 \n                                Aruba                                  Asia \n                                   29                                   290 \n                            Australia             Australia and New Zealand \n                                  174                                   232 \n                              Austria                            Azerbaijan \n                                  232                                    54 \n                              Bahamas                               Bahrain \n                                   58                                    58 \n                           Bangladesh                              Barbados \n                                  116                                   116 \n                              Belarus                               Belgium \n                                   81                                    76 \n                   Belgium-Luxembourg                                Belize \n                                  156                                   174 \n                                Benin                               Bermuda \n                                   58                                   110 \n                               Bhutan      Bolivia (Plurinational State of) \n                                   58                                   174 \n               Bosnia and Herzegovina                              Botswana \n                                  108                                    58 \n                               Brazil                     Brunei Darussalam \n                                  174                                   116 \n                             Bulgaria                          Burkina Faso \n                                  232                                    58 \n                              Burundi                            Cabo Verde \n                                   86                                    58 \n                             Cambodia                              Cameroon \n                                  116                                    58 \n                               Canada                             Caribbean \n                                  232                                   232 \n                       Cayman Islands              Central African Republic \n                                   53                                   116 \n                      Central America                          Central Asia \n                                  174                                   108 \n                                 Chad                                 Chile \n                                   58                                   116 \n                 China, Hong Kong SAR                      China, Macao SAR \n                                  279                                    58 \n                      China, mainland             China, Taiwan Province of \n                                  174                                   232 \n                             Colombia                               Comoros \n                                   58                                    58 \n                                Congo                          Cook Islands \n                                   58                                   109 \n                           Costa Rica                         Côte d'Ivoire \n                                   58                                    86 \n                              Croatia                                  Cuba \n                                  108                                    58 \n                               Cyprus                               Czechia \n                                  277                                   104 \n                       Czechoslovakia Democratic People's Republic of Korea \n                                  128                                   116 \n     Democratic Republic of the Congo                               Denmark \n                                   58                                   232 \n                             Dominica                    Dominican Republic \n                                   58                                    58 \n                       Eastern Africa                          Eastern Asia \n                                  232                                   290 \n                       Eastern Europe                               Ecuador \n                                  232                                   232 \n                                Egypt                           El Salvador \n                                  290                                    58 \n                    Equatorial Guinea                               Eritrea \n                                  116                                    26 \n                              Estonia                              Eswatini \n                                  108                                    58 \n                             Ethiopia                          Ethiopia PDR \n                                   26                                    32 \n                               Europe           Falkland Islands (Malvinas) \n                                  290                                    58 \n                                 Fiji                               Finland \n                                  174                                   166 \n                               France                         French Guyana \n                                  290                                   116 \n                     French Polynesia                                 Gabon \n                                  116                                    58 \n                               Gambia                               Georgia \n                                   58                                    54 \n                              Germany                                 Ghana \n                                  232                                    58 \n                               Greece                               Grenada \n                                  290                                    58 \n                           Guadeloupe                                  Guam \n                                  154                                    58 \n                            Guatemala                                Guinea \n                                   58                                    58 \n                        Guinea-Bissau                                Guyana \n                                   58                                    58 \n                                Haiti                              Honduras \n                                  232                                    58 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Element\nn_distinct(new_birds_data$Element)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\ntable(new_birds_data$Element)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nStocks \n 30977 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Item\nn_distinct(new_birds_data$Item)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\ntable(new_birds_data$Item)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n              Chickens                  Ducks Geese and guinea fowls \n                 13074                   6909                   4136 \n  Pigeons, other birds                Turkeys \n                  1165                   5693 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Year\nn_distinct(new_birds_data$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 58\n```\n:::\n\n```{.r .cell-code}\ntable(new_birds_data$Year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 \n 493  493  493  493  494  495  495  495  498  498  498  498  498  499  499  499 \n1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 \n 498  498  497  496  498  498  495  498  499  499  500  502  503  512  514  569 \n1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 \n 574  574  574  574  574  574  574  575  575  575  575  575  575  576  576  576 \n2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 \n 576  576  576  577  577  577  577  577  577  577 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Unit\nn_distinct(new_birds_data$Unit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\ntable(new_birds_data$Unit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n1000 Head \n    30977 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Value\n# n_distinct(new_birds_data$Value)\n# table(new_birds_data$Value)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Flag Description\nn_distinct(new_birds_data$Flag.Description)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\ntable(new_birds_data$Flag.Description)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n< table of extent 0 >\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Checking for null values in Value column\n# Percentage of Null Values in Value Field\nnulsval <- ((sum(is.na(new_birds_data$Value)))/length(new_birds_data$Value)) * 100\nnulsval\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.344417\n```\n:::\n\n```{.r .cell-code}\n# Omit all the entries with null values\nnew_birds_data <- na.omit(new_birds_data)\ndim(new_birds_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 29941     8\n```\n:::\n:::\n\n\n\nANALYSIS:\n\nFrom the above data analysis, we can see that the total number of observations are 30977 and 14 different fields. Out of the 14 only the important 8 fields were selected for further analysis as the remaining columns were redundant. In the 8 fields, 7 fields are categorical and 1 field is numerical. This data contains entries of the quantities of livestock in different countries around the world across different years. All the entries are \"Live Animals\" and \"Stocks\" with Unit of \"1000 Head\". There are 248 different countries starting from Afghanistan going all the way to Zimbabwe. Out of the 30977 entries, there are Chickens (13074) Ducks (6909), Geese and Guinea Fowls (4136), Pigeons, other birds (1165) and Turkeys (5693). The Year spans from 1961 to 2018 with values increasing from 493 to 577. The Value for each entry is highly varying as it is a numerical field. Under the Flag.Description field, there are 6 sub-groups. While checking for null values in the Value field it's seen that there are 1036 entries with null values. These entries can be removed as they will not be intuitive to the analysis. After omitting null values, the total number of entries are 29941.\n\n\n\n## Provide Grouped Summary Statistics\n\nConduct some exploratory data analysis, using dplyr commands such as `group_by()`, `select()`, `filter()`, and `summarise()`. Find the central tendency (mean, median, mode) and dispersion (standard deviation, mix/max/quantile) for different subgroups within the data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Finding the central tendency - mean, median and std for subgroup Item\n# Not calculating mode here as Value is numeric\nnew_birds_data %>%\n  select(Item, Value)%>%\n  group_by(Item) %>%\n  summarize(mean(Value), median(Value), sd(Value))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  Item                   `mean(Value)` `median(Value)` `sd(Value)`\n  <chr>                          <dbl>           <dbl>       <dbl>\n1 Chickens                     207931.          10784.    1081629.\n2 Ducks                         23072.            510      110621.\n3 Geese and guinea fowls        10292.            258       44489.\n4 Pigeons, other birds           6163.           2800        8481.\n5 Turkeys                       15228.            528       56416.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Finding the mean of Values for subgroups Area and Item\nnew_birds_data %>%\n  select(Year, Area, Item, Value)%>%\n  group_by(Area, Item) %>%\n  summarize(mean(Value)) %>%\n  head(20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 3\n# Groups:   Area [7]\n   Area           Item                   `mean(Value)`\n   <chr>          <chr>                          <dbl>\n 1 Afghanistan    Chickens                      8099. \n 2 Africa         Chickens                    936779. \n 3 Africa         Ducks                        13639. \n 4 Africa         Geese and guinea fowls       12164. \n 5 Africa         Pigeons, other birds         11222. \n 6 Africa         Turkeys                       9004. \n 7 Albania        Chickens                      4055. \n 8 Albania        Ducks                          558. \n 9 Albania        Geese and guinea fowls         396. \n10 Albania        Turkeys                        750. \n11 Algeria        Chickens                     70378. \n12 Algeria        Ducks                           36.3\n13 Algeria        Geese and guinea fowls          19.9\n14 Algeria        Turkeys                         50.6\n15 American Samoa Chickens                        41.4\n16 Americas       Chickens                   3163543. \n17 Americas       Ducks                        20757. \n18 Americas       Geese and guinea fowls         689. \n19 Americas       Turkeys                     240435. \n20 Angola         Chickens                      9453. \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Finding the mean of Values for subgroups Area and Item\n# Getting the mean value of items specifically for India\nnew_birds_data %>%\n  select(Year, Area, Item, Value)%>%\n  group_by(Area, Item) %>%\n  summarize(mean(Value)) %>%\n  filter(Area == \"India\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n# Groups:   Area [1]\n  Area  Item     `mean(Value)`\n  <chr> <chr>            <dbl>\n1 India Chickens       335921.\n2 India Ducks           19518.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Finding the mode of Item for subgroups Area and Item and arranging in \n# ascending order\n\nnew_birds_data %>%\n  select(Year, Area, Item, Value)%>%\n  group_by(Area, Item) %>%\n  summarize(mode = sum(n())) %>%\n  arrange(mode) %>%\n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n# Groups:   Area [7]\n   Area        Item                    mode\n   <chr>       <chr>                  <int>\n 1 Aruba       Chickens                   3\n 2 South Sudan Chickens                   7\n 3 Sudan       Chickens                   7\n 4 Lebanon     Turkeys                    8\n 5 Montenegro  Chickens                  13\n 6 Serbia      Chickens                  13\n 7 Serbia      Ducks                     13\n 8 Serbia      Geese and guinea fowls    13\n 9 Serbia      Turkeys                   13\n10 Belgium     Geese and guinea fowls    14\n```\n:::\n\n```{.r .cell-code}\nnew_birds_data %>%\n  select(Year, Area, Item, Value)%>%\n  group_by(Area, Item) %>%\n  summarize(mode = sum(n())) %>%\n  arrange(desc(mode)) %>%\n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n# Groups:   Area [4]\n   Area        Item                    mode\n   <chr>       <chr>                  <int>\n 1 Afghanistan Chickens                  58\n 2 Africa      Chickens                  58\n 3 Africa      Ducks                     58\n 4 Africa      Geese and guinea fowls    58\n 5 Africa      Pigeons, other birds      58\n 6 Africa      Turkeys                   58\n 7 Albania     Chickens                  58\n 8 Algeria     Chickens                  58\n 9 Algeria     Ducks                     58\n10 Algeria     Geese and guinea fowls    58\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculating the dispersion - min, max, std\n# Finding the min, max and std of Value for Items for each Year globally\n\nnew_birds_data %>%\n  select(Year, Area, Item, Value)%>%\n  group_by(Year, Item) %>%\n  summarize(minVal = min(Value, na.rm = TRUE), maxVal = max(Value, na.rm = TRUE),\n            stdVal = sd(Value, na.rm = TRUE)) %>%\n  arrange(desc(Year)) %>%\n  head(20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 5\n# Groups:   Year [4]\n    Year Item                   minVal   maxVal   stdVal\n   <dbl> <chr>                   <dbl>    <dbl>    <dbl>\n 1  2018 Chickens                    4 23707134 1910971.\n 2  2018 Ducks                       1  1124917  163342.\n 3  2018 Geese and guinea fowls      0   365485   73359.\n 4  2018 Pigeons, other birds      153    28795    7013.\n 5  2018 Turkeys                     0   466787   63609.\n 6  2017 Chickens                    4 23212565 1867386.\n 7  2017 Ducks                       1  1110234  162060.\n 8  2017 Geese and guinea fowls      0   359384   72359.\n 9  2017 Pigeons, other birds      152    29333    7156.\n10  2017 Turkeys                     0   464073   63422.\n11  2016 Chickens                    4 22826754 1838043.\n12  2016 Ducks                       1  1119590  164051.\n13  2016 Geese and guinea fowls      0   361012   72914.\n14  2016 Pigeons, other birds      150    28737    7029.\n15  2016 Turkeys                     0   465359   63495.\n16  2015 Chickens                    4 21678753 1732607.\n17  2015 Ducks                       0  1096515  158538.\n18  2015 Geese and guinea fowls      0   355167   69373.\n19  2015 Pigeons, other birds      137    31290    7691.\n20  2015 Turkeys                     0   445796   60814.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculating the dispersion - quantile\n# Finding the min, max and std of Value for Items for each Year globally\n\nnew_birds_data %>%\n  select(Area, Item, Value)%>%\n  group_by(Area, Item) %>%\n  summarize(quantVal = quantile(Value, na.rm = TRUE)) %>%\n  filter(Area == \"Bahamas\" || Area == \"Zimbabwe\" || Area == \"Seychelles\") %>%\n  arrange(desc(Area))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 3\n# Groups:   Area, Item [6]\n   Area     Item     quantVal\n   <chr>    <chr>       <dbl>\n 1 Zimbabwe Chickens   6500  \n 2 Zimbabwe Chickens   8025  \n 3 Zimbabwe Chickens  11500  \n 4 Zimbabwe Chickens  19937. \n 5 Zimbabwe Chickens  30000  \n 6 Zimbabwe Ducks         2  \n 7 Zimbabwe Ducks         7.5\n 8 Zimbabwe Ducks        42.5\n 9 Zimbabwe Ducks        75  \n10 Zimbabwe Ducks        86  \n# … with 20 more rows\n```\n:::\n:::\n\n\n\n### Explain and Interpret\n\nBe sure to explain why you choose a specific group. Comment on the interpretation of any interesting differences between groups that you uncover. This section can be integrated with the exploratory data analysis, just be sure it is included.\n\nANALYSIS:\n\nExploratory data analysis is performed on the cleaned data. First, the dataset is grouped by Item to find the mean, median and standard deviation of Values for each of the Item entries across all Areas and Years. Mean, median and std is the highest for the Item Chickens. Looking at the data, the mean values seem to be higher than the median indicating that they’re all right skewed. \nNext, group by Area and Item is done and the mean Value of each category of items for each Country is calculated. Then on filtering specifically for the Area ‘India’, the mean Values for the item “Chickens” and “Ducks” are shown.\nThen, the mode of the Item for different Areas is calculated and arranged in ascending order. The Item Chicken occurs the least in Aruba with a mode of 3 and plenty of values with the maximum mode of 58 across Areas and Items.\nNext, the data is grouped by Year and Item and the minimum, maximum and standard deviation of the Values across all Area is calculated. On arranging them in descending order of Years, we can see that the minimum values start from 0 and the maximum values go beyond 7 digits as well. The standard deviation of these values is also very large, especially for the Item “Chickens”.\nFinally, the Quantile is calculated after grouping by Area and Item. The data is then filtered to show the entries for the Area - “Bahamas, Zimbabwe, and Seychelles” arranged in descending order. \n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}