{
  "hash": "d15dc4b1002754efc8d86323338a1617",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Nikita Masanagi\"\ndescription: \"Joining Data\"\ndate: \"08/25/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nUsing the FAOSTAT dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncodes <- read_csv(\"_data/FAOSTAT_country_groups.csv\")\ncattle <- read_csv(\"_data/FAOSTAT_cattle_dairy.csv\")\n```\n:::\n\n\n\n\n### Briefly describe the data\n\nThe primary dataset I have chosen is the Fao Stat Cattle dataset.It has information about available food and agriculture data from 245 countries.\nIt contains information about cow milk, units sold and price of the product.the data ranges from 1960,s to 2018.\n\nThe next file I will using to perform the join is codebook, which groups the data by countries to provide a high level overview, instead of at the country level.\n\nWe can then perform join within these datasets and analyze within the country groups.\n\n\n## Tidy Data (as needed)\n\nMatching the column name of the two tables, as one has Area code and one has Country Code. Renaming the cattle Area Code with Country Code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncattlenew <- rename (cattle, \"Country Code\"= \"Area Code\" )\nhead(cattlenew)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  Domai…¹ Domain Count…² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year Unit \n  <chr>   <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl> <chr>\n1 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961 Head \n2 QL      Lives…       2 Afgh…    5420 Yield       882 Milk…    1961  1961 hg/An\n3 QL      Lives…       2 Afgh…    5510 Produc…     882 Milk…    1961  1961 tonn…\n4 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1962  1962 Head \n5 QL      Lives…       2 Afgh…    5420 Yield       882 Milk…    1962  1962 hg/An\n6 QL      Lives…       2 Afgh…    5510 Produc…     882 Milk…    1962  1962 tonn…\n# … with 3 more variables: Value <dbl>, Flag <chr>, `Flag Description` <chr>,\n#   and abbreviated variable names ¹​`Domain Code`, ²​`Country Code`,\n#   ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\n\n\n\n## Join Data\n\nWe can perform left join by using the Country Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncattlefinal <- left_join(cattlenew, codes, by = \"Country Code\" )\nhead(cattlefinal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 20\n  Domai…¹ Domain Count…² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year Unit \n  <chr>   <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl> <chr>\n1 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961 Head \n2 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961 Head \n3 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961 Head \n4 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961 Head \n5 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961 Head \n6 QL      Lives…       2 Afgh…    5318 Milk A…     882 Milk…    1961  1961 Head \n# … with 9 more variables: Value <dbl>, Flag <chr>, `Flag Description` <chr>,\n#   `Country Group Code` <dbl>, `Country Group` <chr>, Country <chr>,\n#   `M49 Code` <chr>, `ISO2 Code` <chr>, `ISO3 Code` <chr>, and abbreviated\n#   variable names ¹​`Domain Code`, ²​`Country Code`, ³​`Element Code`,\n#   ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n:::\n\nAfter performing join, we can now display the graph by Country Code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncattlefinal %>%\n  filter(Year >= 2000) %>%\n  filter(`Flag Description` == \"Official data\") %>%\n  filter(`Country Group`==\"Central Asia\") %>%\n  filter(`Unit` == \"tonnes\") %>%\n  ggplot(aes(x=`Area`, y=`Value`)) + \n  geom_point(\n    color=\"blue\",\n    fill=\"#69b3a2\",\n    size=.5,\n    alpha=.5\n  )+\n  labs(title = \"Official Tonnes of Milk Produced in Central Asia from the Year 2000-2018\", x=\"Country\", y=\"Price of Milk\") +\n  scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) \n```\n\n::: {.cell-output-display}\n![](NikitaMasanagi_challenge8_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "NikitaMasanagi_challenge8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}