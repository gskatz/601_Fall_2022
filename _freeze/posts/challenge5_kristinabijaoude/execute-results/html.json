{
  "hash": "794dbbfea90ce5de8ff50bac86ed6de5",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Kristin Abijaoude\"\nauthor: \"Kristin Abijaoude\"\ndescription: \"Introduction to Visualization\"\ndate: \"10/19/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - kristin_abijaoude\n  - AB_NYC_19\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC_2019 <- read_csv(\"_data/AB_NYC_2019.csv\")\nAB_NYC_2019\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 16\n      id name      host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n   <dbl> <chr>       <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1  2539 Clean & …    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n 2  2595 Skylit M…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n 3  3647 THE VILL…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n 4  3831 Cozy Ent…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n 5  5022 Entire A…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n 6  5099 Large Co…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n 7  5121 BlissArt…    7356 Garon   Brookl… Bedfor…    40.7   -74.0 Privat…    60\n 8  5178 Large Fu…    8967 Shunic… Manhat… Hell's…    40.8   -74.0 Privat…    79\n 9  5203 Cozy Cle…    7490 MaryEl… Manhat… Upper …    40.8   -74.0 Privat…    79\n10  5238 Cute & C…    7549 Ben     Manhat… Chinat…    40.7   -74.0 Entire…   150\n# … with 48,885 more rows, 6 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThis dataset comprises of AirBnB listings in New York City by borough, neighborhood, hosts, and availability in the year of 2019. This CSV file has 48,895 rows and 16 columns. Below, we have the names of the variables in the dataset. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895\n```\n:::\n\n```{.r .cell-code}\nncol(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n\n```{.r .cell-code}\ndim(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895    16\n```\n:::\n\n```{.r .cell-code}\nsummary(AB_NYC_2019)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id               name              host_id           host_name        \n Min.   :    2539   Length:48895       Min.   :     2438   Length:48895      \n 1st Qu.: 9471945   Class :character   1st Qu.:  7822033   Class :character  \n Median :19677284   Mode  :character   Median : 30793816   Mode  :character  \n Mean   :19017143                      Mean   : 67620011                     \n 3rd Qu.:29152178                      3rd Qu.:107434423                     \n Max.   :36487245                      Max.   :274321313                     \n                                                                             \n neighbourhood_group neighbourhood         latitude       longitude     \n Length:48895        Length:48895       Min.   :40.50   Min.   :-74.24  \n Class :character    Class :character   1st Qu.:40.69   1st Qu.:-73.98  \n Mode  :character    Mode  :character   Median :40.72   Median :-73.96  \n                                        Mean   :40.73   Mean   :-73.95  \n                                        3rd Qu.:40.76   3rd Qu.:-73.94  \n                                        Max.   :40.91   Max.   :-73.71  \n                                                                        \n  room_type             price         minimum_nights    number_of_reviews\n Length:48895       Min.   :    0.0   Min.   :   1.00   Min.   :  0.00   \n Class :character   1st Qu.:   69.0   1st Qu.:   1.00   1st Qu.:  1.00   \n Mode  :character   Median :  106.0   Median :   3.00   Median :  5.00   \n                    Mean   :  152.7   Mean   :   7.03   Mean   : 23.27   \n                    3rd Qu.:  175.0   3rd Qu.:   5.00   3rd Qu.: 24.00   \n                    Max.   :10000.0   Max.   :1250.00   Max.   :629.00   \n                                                                         \n  last_review         reviews_per_month calculated_host_listings_count\n Min.   :2011-03-28   Min.   : 0.010    Min.   :  1.000               \n 1st Qu.:2018-07-08   1st Qu.: 0.190    1st Qu.:  1.000               \n Median :2019-05-19   Median : 0.720    Median :  1.000               \n Mean   :2018-10-04   Mean   : 1.373    Mean   :  7.144               \n 3rd Qu.:2019-06-23   3rd Qu.: 2.020    3rd Qu.:  2.000               \n Max.   :2019-07-08   Max.   :58.500    Max.   :327.000               \n NA's   :10052        NA's   :10052                                   \n availability_365\n Min.   :  0.0   \n 1st Qu.:  0.0   \n Median : 45.0   \n Mean   :112.8   \n 3rd Qu.:227.0   \n Max.   :365.0   \n                 \n```\n:::\n:::\n\n\n### Tidy Data (as needed)\n\nFor the most part, the dataset is clean, but it needs a fixer-upper in some areas. First, let's rename the variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC_tidy <- AB_NYC_2019 %>%\n  rename(\"Listing ID\" = id,\n         \"Listing Name\" = name,\n         \"Host ID\" = host_id,\n         \"Host Name\" = host_name,\n         \"Borough\" = neighbourhood_group,\n         \"Neighborhood\" = neighbourhood,\n         \"Room Type\" = room_type,\n         \"Price per Night ($)\" = price,\n         \"Minimum Number of Nights\" = minimum_nights,\n         \"Number of Reviews\" = number_of_reviews,\n         \"Date of Last Review\" = last_review,\n         \"Number of Reviews per Month\" = reviews_per_month,\n         \"Calculated Host Listings Count\" = calculated_host_listings_count,\n         \"Number of Days Available During the Year\" = availability_365)\nAB_NYC_tidy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 16\n   `Listing ID` Listin…¹ Host …² Host …³ Borough Neigh…⁴ latit…⁵ longi…⁶ Room …⁷\n          <dbl> <chr>      <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>  \n 1         2539 Clean &…    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…\n 2         2595 Skylit …    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…\n 3         3647 THE VIL…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…\n 4         3831 Cozy En…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…\n 5         5022 Entire …    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…\n 6         5099 Large C…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…\n 7         5121 BlissAr…    7356 Garon   Brookl… Bedfor…    40.7   -74.0 Privat…\n 8         5178 Large F…    8967 Shunic… Manhat… Hell's…    40.8   -74.0 Privat…\n 9         5203 Cozy Cl…    7490 MaryEl… Manhat… Upper …    40.8   -74.0 Privat…\n10         5238 Cute & …    7549 Ben     Manhat… Chinat…    40.7   -74.0 Entire…\n# … with 48,885 more rows, 7 more variables: `Price per Night ($)` <dbl>,\n#   `Minimum Number of Nights` <dbl>, `Number of Reviews` <dbl>,\n#   `Date of Last Review` <date>, `Number of Reviews per Month` <dbl>,\n#   `Calculated Host Listings Count` <dbl>,\n#   `Number of Days Available During the Year` <dbl>, and abbreviated variable\n#   names ¹​`Listing Name`, ²​`Host ID`, ³​`Host Name`, ⁴​Neighborhood, ⁵​latitude,\n#   ⁶​longitude, ⁷​`Room Type`\n```\n:::\n:::\n\n\nLet's create a new variable called \"Geolocation\" by combining the latitude and longitude columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC_tidy <- unite(AB_NYC_tidy, \"latitude\", \"longitude\", col = \"Geolocation\", sep = \":\")\n\nAB_NYC_tidy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 15\n   `Listing ID` Listin…¹ Host …² Host …³ Borough Neigh…⁴ Geolo…⁵ Room …⁶ Price…⁷\n          <dbl> <chr>      <dbl> <chr>   <chr>   <chr>   <chr>   <chr>     <dbl>\n 1         2539 Clean &…    2787 John    Brookl… Kensin… 40.647… Privat…     149\n 2         2595 Skylit …    2845 Jennif… Manhat… Midtown 40.753… Entire…     225\n 3         3647 THE VIL…    4632 Elisab… Manhat… Harlem  40.809… Privat…     150\n 4         3831 Cozy En…    4869 LisaRo… Brookl… Clinto… 40.685… Entire…      89\n 5         5022 Entire …    7192 Laura   Manhat… East H… 40.798… Entire…      80\n 6         5099 Large C…    7322 Chris   Manhat… Murray… 40.747… Entire…     200\n 7         5121 BlissAr…    7356 Garon   Brookl… Bedfor… 40.686… Privat…      60\n 8         5178 Large F…    8967 Shunic… Manhat… Hell's… 40.764… Privat…      79\n 9         5203 Cozy Cl…    7490 MaryEl… Manhat… Upper … 40.801… Privat…      79\n10         5238 Cute & …    7549 Ben     Manhat… Chinat… 40.713… Entire…     150\n# … with 48,885 more rows, 6 more variables: `Minimum Number of Nights` <dbl>,\n#   `Number of Reviews` <dbl>, `Date of Last Review` <date>,\n#   `Number of Reviews per Month` <dbl>,\n#   `Calculated Host Listings Count` <dbl>,\n#   `Number of Days Available During the Year` <dbl>, and abbreviated variable\n#   names ¹​`Listing Name`, ²​`Host ID`, ³​`Host Name`, ⁴​Neighborhood,\n#   ⁵​Geolocation, ⁶​`Room Type`, ⁷​`Price per Night ($)`\n```\n:::\n\n```{.r .cell-code}\n# it should come out like this\n\n# Geolocation\n# 40.64749:-73.97237 \n\n# I didn't know how to add the N,S,E,W on the geolocations, so I left it as that\n```\n:::\n\n\n### Univariate Visualizations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nAB_NYC_tidy %>%\n  count(`Room Type`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  `Room Type`         n\n  <chr>           <int>\n1 Entire home/apt 25409\n2 Private room    22326\n3 Shared room      1160\n```\n:::\n\n```{.r .cell-code}\nRoom_Type <- data.frame(\n  Room_Type =factor(c(\"Entire home or Apt\",\"Private Room\",\"Shared Room\")),  \n  Number_of_Hostings =c(25409,22326,1160)\n  )\nRoom_Type\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Room_Type Number_of_Hostings\n1 Entire home or Apt              25409\n2       Private Room              22326\n3        Shared Room               1160\n```\n:::\n\n```{.r .cell-code}\nggplot(data=Room_Type, \n       aes(x = Room_Type, \n           y = Number_of_Hostings,\n           fill=Number_of_Hostings)) + \n  geom_bar(stat = \"identity\", fill =\"lightblue\") +\n  geom_text(aes(label = Number_of_Hostings), \n            vjust=-0.5) +\n  labs(x = \"Room Type\", \n       y = \"Number of Hostings\", \n       title  = \"Types of Rooms available on AirBnB\")\n```\n\n::: {.cell-output-display}\n![](challenge5_kristinabijaoude_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nBar graphs are incredibly helpful for univariates, or data involving only one variable. I used Room Types as an example to make my point. I apply the same coding with with variables Boroughs and Minimum Number of Nights.\n\nThe majority of AirBnB hostings are entire homes or apartment rooms and private rooms, with 25409 and 22326 hostings respectively, while shared rooms make up a much smaller share, with 1160 hostings.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC_tidy %>%\n  count(`Borough`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  Borough           n\n  <chr>         <int>\n1 Bronx          1091\n2 Brooklyn      20104\n3 Manhattan     21661\n4 Queens         5666\n5 Staten Island   373\n```\n:::\n\n```{.r .cell-code}\nBorough <- data.frame(\n  Borough =factor(c(\"Bronx\",\"Brooklyn\",\"Manhattan\",\"Queens\",\"Staten Island\")),  \n  Number_of_Hostings =c(1091,20104,21661,5666,373)\n  )\nBorough\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Borough Number_of_Hostings\n1         Bronx               1091\n2      Brooklyn              20104\n3     Manhattan              21661\n4        Queens               5666\n5 Staten Island                373\n```\n:::\n\n```{.r .cell-code}\nggplot(data=Borough, \n       aes(x = Borough, \n           y = Number_of_Hostings,\n           fill=Number_of_Hostings)) + \n  geom_bar(stat = \"identity\", fill =\"lightgreen\") +\n  geom_text(aes(label = Number_of_Hostings), \n            vjust=-0.5) +\n  labs(x = \"Boroughs\", \n       y = \"Number of Hostings\", \n       title  = \"Number of AirBnB Hostings by Borough\")\n```\n\n::: {.cell-output-display}\n![](challenge5_kristinabijaoude_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nto the surprise of almost nobody, the vast majority of AirBnB hostings are located in the boroughs of Manhattan and Brooklyn, due to the proximity of famous points of interests we all know of, such as Times Square. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC_tidy %>%\n  filter(`Minimum Number of Nights` == 1)%>%\n  count(`Minimum Number of Nights`) +\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Minimum Number of Nights     n\n1                        1 12720\n```\n:::\n\n```{.r .cell-code}\n# Minimum Number of Nights n\n# <dbl>                   <int>\n# 1                       634\n# 2                       563\n# 3                       412\n\n# I filtered out by minimum number of nights. For example == 1 night, == 2 nights, and so on...\n\n\nNights <- data.frame(\n  Minimum_Number_of_Nights =factor(c(\"1 night\",\"2 nights\",\"3 nights\",\"4 nights\",\"5 night\", \"more than 5 nights\")),  \n  Number_of_Hostings =c(12720, 11696, 7999, 3303, 3034, 10143))\n\nggplot(data=Nights, aes(x= Minimum_Number_of_Nights, y=Number_of_Hostings, fill=Number_of_Hostings)) +\n  geom_bar(stat=\"identity\",fill=\"lightpink\") +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](challenge5_kristinabijaoude_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# for whatever reason, R would give me an error when I try to replicate the same coding as the first two graphs above\n```\n:::\n\n\nInteresting, the majority of the hostings lets visitors sleep for 1 night. The more than 5 nights bar comprises of 6 nights to the highest value of 1,250 nights in a Greenwich village home in Manhattan. Very generous of the host Genevieve.\n\n### Bivariate Visualization(s)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create data\nx <- c(AB_NYC_tidy$`Minimum Number of Nights`)\ny <- c(AB_NYC_tidy$`Price per Night ($)`)\n\n# create scatterplot\nggplot(AB_NYC_tidy, \n       aes(x = x, \n           y = y,\n           na.rm = TRUE)) +\n  geom_point(color=\"cornflowerblue\") +\n  scale_y_continuous(label = scales::dollar) +\n  labs(x = \"Minium Numbers of Night\",\n       y = \"Price Per Night ($)\",\n       title = \"Minimum Number per Nights vs Price Per Night ($)\",\n       subtitle = \"AirBnB Hostings in NYC\")\n```\n\n::: {.cell-output-display}\n![](challenge5_kristinabijaoude_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nBivariates plots involve two variables, and it could be either categorical variable and numerical variable, both numerical variable, or both categorical variables. \n\nThe scatterplot graph I coded above shows a correlation between Minimum Number of Nights and Price Per Night in a given hosting. The majority of those hostings are scattered in the bottom left side of the graph-- in other words, the majority allow visitors to stay a few nights in relatively less expensive (for New York City standards) places.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create data\nNYC_Borough <- c(AB_NYC_tidy$Borough)\nPrice <- c(AB_NYC_tidy$`Price per Night ($)`)\n\n# create violin plot\n ggplot(AB_NYC_tidy, aes(x=NYC_Borough, y=Price, fill=Price)) +\n   scale_y_continuous(label = scales::dollar) +\n  geom_violin()\n```\n\n::: {.cell-output-display}\n![](challenge5_kristinabijaoude_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nThis is a funny looking violin plot. The upper tip of each violin plot shows the outlier-- the most expensive hosting per borough. Again, to no one's surprise, the most expensive hostings are in Manhattan, Brooklyn, and Queens as well. \n\nBelow, I plot out a map of New York ity with one dot representing one AirBnB location.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# AirBnB locations in NYC\nlat <- c(AB_NYC_2019$latitude)\nlong <- c(AB_NYC_2019$longitude)\n\n\n# one dot represents one AirBnB hosting\nggplot() +\n  geom_polygon(data = AB_NYC_2019, aes(x=lat, y = long, group = long), fill=\"grey\", alpha=0.3) +\n  geom_point(data= AB_NYC_2019, aes(x=lat, y=long)) +\n  ggtitle(\"AirBnb Hosting Locations in New York City\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](challenge5_kristinabijaoude_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot() + \n  geom_polygon(data=AB_NYC_2019, aes(x=long, y=lat),\n                color=\"black\", fill=\"lightblue\" )\n```\n\n::: {.cell-output-display}\n![](challenge5_kristinabijaoude_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge5_kristinabijaoude_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}