{
  "hash": "02a4b2f634756ab43868aeaa29a74cc3",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Submission\"\nauthor: \"Julian Castoro\"\ndescription: \"Introduction to Visualization\"\ndate: \"10/21/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - pathogen_cost\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(plotly)\n\noptions(scipen=999)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n-   Total_cost_for_top_15_pathogens_2018.xlsx ‚≠ê\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrawData<- read_excel(\"C:/Users/Julian/Desktop/Amherst CS/DACSS602/601_Fall_2022/posts/_data/Total_cost_for_top_15_pathogens_2018.xlsx\",skip = 3)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: `path` does not exist: 'C:/Users/Julian/Desktop/Amherst CS/DACSS602/601_Fall_2022/posts/_data/Total_cost_for_top_15_pathogens_2018.xlsx'\n```\n:::\n\n```{.r .cell-code}\nhead(rawData)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(rawData): object 'rawData' not found\n```\n:::\n:::\n\n\n### Briefly describe the data\nThis data set looks to be describing different foodborne illnesses and their associated case count and cost to the US.\n\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nData needed a little tidying as shown below. While reading in the data I also cut a few unnecessary lines.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy <- rawData%>%\n  rename(PathogenName = 1)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in rename(., PathogenName = 1): object 'rawData' not found\n```\n:::\n\n```{.r .cell-code}\ntidy <- tidy%>%\n  slice(1:(n()-8))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in slice(., 1:(n() - 8)): object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\ntidy\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'tidy' not found\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## after some light graphing i wanted to create a qualitative variable\ntidy<- tidy%>%\n  mutate(severity= case_when(\n    Cases<500000 ~ \"Mild\",\n    (Cases<2000000) ~ \"Moderate\",\n    Cases > 2000000 ~ \"Extreme\"\n  ))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., severity = case_when(Cases < 500000 ~ \"Mild\", (Cases < : object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\n## calculating some stats\nmedianCost <- median(tidy$Cost)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in median(tidy$Cost): object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\nmeanCost <- mean(tidy$Cost)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mean(tidy$Cost): object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\nsdCost<- sd(tidy$Cost)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\nsdCases<- sd(tidy$Cases)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'tidy' not found\n```\n:::\n:::\n\n\n## Univariate Visualizations\n\n::: {.cell}\n\n```{.r .cell-code}\nhistogramCases <- \n  tidy %>%\n    ggplot(aes(x=Cases)) +\n    geom_histogram(bins = 200,fill=\"#69b3a2\") +\n    labs(title=\"Number of Cases of Foodborne illness 2018\",x=\"Cases\", y = \"Count\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(., aes(x = Cases)): object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\nhistogramCases\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'histogramCases' not found\n```\n:::\n\n```{.r .cell-code}\n## seems like there is one pathogen with a very large number of cases.\n\n# i want to try and group these different pathogens into mild moderate and extreme number of cases\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nPointCases <- \n  tidy %>%\n    ggplot(aes(y=PathogenName,x=Cases)) +\n    geom_point() +\n    labs(title=\"Cases of Foodborne illness 2018\",x=\"Cases\", y = \"Pathogen\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(., aes(y = PathogenName, x = Cases)): object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\nPointCases\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'PointCases' not found\n```\n:::\n:::\n\n\nNow I look at the cost and see if there is a similar outlier\n\n::: {.cell}\n\n```{.r .cell-code}\nhistogramCost <- \n  tidy %>%\n    ggplot(aes(x=Cost)) +\n    geom_histogram(bins = 100)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(., aes(x = Cost)): object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\n#+\n #  scale_x_continuous(breaks = round(seq(min(tidy$Cost), max(tidy$Cost), by = 100000),1))\n\nhistogramCost\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'histogramCost' not found\n```\n:::\n\n```{.r .cell-code}\n## seems like there is one pathogen with a very large number of cases.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nPointCost <- \n  tidy %>%\n    mutate(Cost=Cost/1000000)%>%\n    ggplot(aes(y=PathogenName,x=Cost,color=severity)) +\n    geom_point()+\n    labs(title=\"Cost of Foodborne illness 2018\",x=\"Cost(Millions)\", y = \"Pathogen\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., Cost = Cost/1000000): object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\nPointCost\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'PointCost' not found\n```\n:::\n:::\n\n\n\n\n## Bivariate Visualization(s)\nI am not including the Extreme case so that the graph does not need to be rescaled\n\n::: {.cell}\n\n```{.r .cell-code}\n#cases vs Count\n# i removed the extreme case so its a bit easier to visualize\nbiVariate <- tidy %>%\n  filter(severity!=\"Extreme\") %>%\n  ggplot( aes(Cases, Cost, color=severity,label=PathogenName)) +\n    geom_point() +\n    theme_bw()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., severity != \"Extreme\"): object 'tidy' not found\n```\n:::\n\n```{.r .cell-code}\nggplotly(biVariate)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplotly(biVariate): object 'biVariate' not found\n```\n:::\n:::\n\n\nAny additional comments?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}