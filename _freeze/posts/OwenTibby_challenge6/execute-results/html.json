{
  "hash": "5a47a1d91837954111a5b62b5477dd25",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Owen Tibby\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"11/23/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(stringr)\n\nlibrary(dplyr)\nlibrary(babynames)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in library(babynames): there is no package called 'babynames'\n```\n:::\n\n```{.r .cell-code}\nlibrary(viridis)\nlibrary(hrbrthemes)\nlibrary(plotly)\nlibrary(readxl)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n\n-   try to make them \"publication\" ready (optional)\n-   Explain why you choose the specific graph type\n\n5)  Create at least one graph depicting part-whole or flow relationships\n\n-   try to make them \"publication\" ready (optional)\n-   Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following data-sets, using the correct R package and command.\n\n-   debt ⭐\n-   fed_rate ⭐⭐\n-   abc_poll ⭐⭐⭐\n-   usa_hh ⭐⭐⭐\n-   hotel_bookings ⭐⭐⭐⭐\n-   AB_NYC ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndebt<- read_excel(\"_data/debt_in_trillions.xlsx\")\n```\n:::\n\n\n### Briefly describe the data\n\nThis data-set provides insight into the total household debt (in trillions) in the U.S from 2003 to 2021 published quarterly. The debt is broken down into major loan types: mortgage, revolving home equity line of credit, auto loans, credit cards and student loans.\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(debt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 74  8\n```\n:::\n\n```{.r .cell-code}\nsummary(debt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Year and Quarter      Mortgage       HE Revolving      Auto Loan     \n Length:74          Min.   : 4.942   Min.   :0.2420   Min.   :0.6220  \n Class :character   1st Qu.: 8.036   1st Qu.:0.4275   1st Qu.:0.7430  \n Mode  :character   Median : 8.412   Median :0.5165   Median :0.8145  \n                    Mean   : 8.274   Mean   :0.5161   Mean   :0.9309  \n                    3rd Qu.: 9.047   3rd Qu.:0.6172   3rd Qu.:1.1515  \n                    Max.   :10.442   Max.   :0.7140   Max.   :1.4150  \n  Credit Card      Student Loan        Other            Total       \n Min.   :0.6590   Min.   :0.2407   Min.   :0.2960   Min.   : 7.231  \n 1st Qu.:0.6966   1st Qu.:0.5333   1st Qu.:0.3414   1st Qu.:11.311  \n Median :0.7375   Median :0.9088   Median :0.3921   Median :11.852  \n Mean   :0.7565   Mean   :0.9189   Mean   :0.3831   Mean   :11.779  \n 3rd Qu.:0.8165   3rd Qu.:1.3022   3rd Qu.:0.4154   3rd Qu.:12.674  \n Max.   :0.9270   Max.   :1.5840   Max.   :0.4860   Max.   :14.957  \n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Creating a date variable\ndebt <-  debt %>% \n  mutate(Month_day= case_when(str_detect(`Year and Quarter`, \"Q1\")~ \"March 31\", str_detect(`Year and Quarter`, \"Q2\")~ \"June 30\", str_detect(`Year and Quarter`, \"Q3\")~ \"September 30\", str_detect(`Year and Quarter`, \"Q4\")~ \"December 31\")) %>% \n  mutate(Year_prefix= \"20\")\n\ndebt<- debt %>% \nunite(`FullYearQ`, `Year_prefix`, `Year and Quarter`, sep=\"\") %>% \n  separate(FullYearQ,into = c(\"Year2\", \"Quarter\"), sep = \":\") %>% \n  mutate(Year=Year2) %>% \n  unite(`Date`, `Month_day`, `Year2`, sep = \", \")\n\nprint(head(debt))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 10\n  Date         Quarter Mortg…¹ HE Re…² Auto …³ Credi…⁴ Stude…⁵ Other Total Year \n  <chr>        <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl> <dbl> <chr>\n1 March 31, 2… Q1         4.94   0.242   0.641   0.688   0.241 0.478  7.23 2003 \n2 June 30, 20… Q2         5.08   0.26    0.622   0.693   0.243 0.486  7.38 2003 \n3 September 3… Q3         5.18   0.269   0.684   0.693   0.249 0.477  7.56 2003 \n4 December 31… Q4         5.66   0.302   0.704   0.698   0.253 0.449  8.07 2003 \n5 March 31, 2… Q1         5.84   0.328   0.72    0.695   0.260 0.446  8.29 2004 \n6 June 30, 20… Q2         5.97   0.367   0.743   0.697   0.263 0.423  8.46 2004 \n# … with abbreviated variable names ¹​Mortgage, ²​`HE Revolving`, ³​`Auto Loan`,\n#   ⁴​`Credit Card`, ⁵​`Student Loan`\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\ndebt$Date <-  debt$Date %>% \nmdy() \n\n#Reorganizing columns\n col_order <- c(10, 2, 1, 3:9)\ndebt<-debt[, col_order]\n  print((debt))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 74 × 10\n   Year  Quarter Date       Mortgage HE Re…¹ Auto …² Credi…³ Stude…⁴ Other Total\n   <chr> <chr>   <date>        <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl> <dbl>\n 1 2003  Q1      2003-03-31     4.94   0.242   0.641   0.688   0.241 0.478  7.23\n 2 2003  Q2      2003-06-30     5.08   0.26    0.622   0.693   0.243 0.486  7.38\n 3 2003  Q3      2003-09-30     5.18   0.269   0.684   0.693   0.249 0.477  7.56\n 4 2003  Q4      2003-12-31     5.66   0.302   0.704   0.698   0.253 0.449  8.07\n 5 2004  Q1      2004-03-31     5.84   0.328   0.72    0.695   0.260 0.446  8.29\n 6 2004  Q2      2004-06-30     5.97   0.367   0.743   0.697   0.263 0.423  8.46\n 7 2004  Q3      2004-09-30     6.21   0.426   0.751   0.706   0.33  0.41   8.83\n 8 2004  Q4      2004-12-31     6.36   0.468   0.728   0.717   0.346 0.423  9.04\n 9 2005  Q1      2005-03-31     6.51   0.502   0.725   0.71    0.364 0.394  9.21\n10 2005  Q2      2005-06-30     6.70   0.528   0.774   0.717   0.374 0.402  9.49\n# … with 64 more rows, and abbreviated variable names ¹​`HE Revolving`,\n#   ²​`Auto Loan`, ³​`Credit Card`, ⁴​`Student Loan`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Pivoting the data wider\ndebt_wide <- debt%>%\n  pivot_longer(cols= 4:10, names_to = \"Debt_Type\", values_to=\"Debt_Amount\") %>%\n   group_by(Debt_Type)\n\ndebt_tidy <- debt_wide\n```\n:::\n\n\n## Time Dependent Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndebt_tidy %>% \nfilter(Debt_Type == \"Total\") %>% \nggplot() + aes(x=`Date`,y=(Debt_Amount), color= Debt_Type) +\ngeom_point(stat = \"identity\")+\nlabs(y= \"Debt Amount (Trillions)\", x= \"Year\", color=\" Type of Debt\") +\nggtitle(\"Graph 1.0: US Annual Household Debt on Aggregate\")\n```\n\n::: {.cell-output-display}\n![](OwenTibby_challenge6_files/figure-html/Total debt-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Vizualizing all types of debt\n\ndebt_total <- debt_tidy %>% filter(`Debt_Type` != \"Total\")\n\ndebt_total %>% \nggplot() + aes(x=`Date`,y=(Debt_Amount), color= Debt_Type) +\ngeom_point(stat = \"identity\")+\nlabs(y= \"Debt Amount (Trillions)\", x= \"Year\" , color=\" Type of Debt\") +\nggtitle(\"Graph 1.1: Types of Household Debt\")\n```\n\n::: {.cell-output-display}\n![](OwenTibby_challenge6_files/figure-html/All types of debt-1.png){width=672}\n:::\n:::\n\n\nIn the series of graphs below, I'll take a closer look at some useful patterns. The following time series relationships will be visualized using xy plots, chosen for the double-scaled effect when comparing two variables on both sides of the y-axis\n\nIn the example below, graph 1.2, I chose to compare auto loans with credit card debt because they are often two of the easiest types of loans to qualify for.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(latticeExtra)\n #Comparing Auto and Credit Card debt\n\n Auto.Loan <- xyplot(`Auto Loan` ~ `Date`, debt, type = \"l\" , lwd=2)\n Credit.Card <- xyplot(`Credit Card` ~ `Date`, debt, type = \"l\", lwd=2)\ndoubleYScale(Auto.Loan, Credit.Card, text = c(\"Graph 1.2: Easily Accessible Credit           \nAuto Loans in Trillions\",\"Credit Cards in Trillions\") , add.ylab2 = TRUE)\n```\n\n::: {.cell-output-display}\n![](OwenTibby_challenge6_files/figure-html/graph 1.2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Comparing HE Revolving and Mortgage Loans\n\nHE.Rev <- xyplot(`HE Revolving`~Date, debt, type= \"l\", lwd=2)\nMortgage <- xyplot(`Mortgage`~`Date`, debt, type=\"l\", lwd=2)\n doubleYScale(HE.Rev, Mortgage, text = c(\"Graph 1.3:        \nRevolving Home Equity Loans in Trillions\",  \"Mortgages in Trillions\") , add.ylab2 = TRUE)\n```\n\n::: {.cell-output-display}\n![](OwenTibby_challenge6_files/figure-html/graph 1.3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Comparing  Auto and Student Loans\n\nHE.Rev <- xyplot(`HE Revolving`~Date, debt, type= \"l\", lwd=2)\nStudent <- xyplot(`Student Loan`~`Date`, debt, type=\"l\", lwd=2)\n doubleYScale(HE.Rev, Student, text = c(\"Graph 1.4: \nRevolving Home Equity Loans in Trillions\", \"Student Laons in Trillions\") , add.ylab2 = TRUE)\n```\n\n::: {.cell-output-display}\n![](OwenTibby_challenge6_files/figure-html/graph 1.4-1.png){width=672}\n:::\n:::\n\n\n## Visualizing Part-Whole Relationships\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndebt_total %>% ggplot() + \naes(x=`Date`, y=Debt_Amount, fill= reorder(`Debt_Type`,Debt_Amount)) +\ngeom_area()+\nggtitle(\"Graph 1.5: Debt in Trillions\")+\n  labs(y= \"Debt Amount (Trillions)\", x= \"Date\", fill=\"Type of Debt\")\n```\n\n::: {.cell-output-display}\n![](OwenTibby_challenge6_files/figure-html/graph 1.5-1.png){width=672}\n:::\n:::\n\n\nThe above graph was chosen to illustrate the aftermath of the US financial cliff of 2012. This stacked area graph helped me to understand the part-whole relationships while keeping time continuous on the x-axis.\n",
    "supporting": [
      "OwenTibby_challenge6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}