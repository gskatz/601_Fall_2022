{
  "hash": "e15dd734483e24ba30d4e1315ad48dad",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 Solutions\"\nauthor: \"Caitlin Rowley\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"10/20/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xls ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in data (I am having trouble setting my working directory):\n\nanimal_weight <- read_csv(\"_data/animal_weight.csv\")\n# This data set, which appears to represent animal weights by IPCC area. The IPCC, or Intergovernmental Panel on Climate Change, is the United Nations body for assessing the science related to climate change, so this is clearly data collected from a governmental source. After reading in the data set, we can see that the data set has 9 rows/cases and 17 columns/variables. One variable represents IPCC areas, and the remaining 16 variables represent varying species/breeds of livestock. The values for each observation represent the animals' weight.\n```\n:::\n\n\n### Briefly describe the data\n\nDescribe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\"\n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA    1351.     827.\n2 USA      1990 NAFTA     682.     811.\n3 France   1980 EU       1432.    1272.\n4 Mexico   1990 NAFTA     881.    1100.\n5 USA      1980 NAFTA    1213.    1460.\n6 France   1990 EU        460.     170.\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOr simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n### Challenge: Describe the final dimensions\n\nDocument your work here.\n\n\nBecause each row represents several observations (16 observations about the weights of varying species/breeds of livestock for every case), we will need to tidy the data. To do this, I will consolidate the livestock species/breeds into one category, then create a separate column/variable that captures weight by case.\n\nWe know that there are 9 cases and 16 livestock-specific variables in this data set, so the final pivoted data table should have 3 columns (IPCC area, livestock, weight) and 144 rows.\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculation for number of rows:\n9*16\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144\n```\n:::\n:::\n\n\n\nAny additional comments?\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"trade_direction\",\n                 values_to = \"trade_value\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 √ó 5\n   country  year trade trade_direction trade_value\n   <chr>   <dbl> <chr> <chr>                 <dbl>\n 1 Mexico   1980 NAFTA outgoing              1351.\n 2 Mexico   1980 NAFTA incoming               827.\n 3 USA      1990 NAFTA outgoing               682.\n 4 USA      1990 NAFTA incoming               811.\n 5 France   1980 EU    outgoing              1432.\n 6 France   1980 EU    incoming              1272.\n 7 Mexico   1990 NAFTA outgoing               881.\n 8 Mexico   1990 NAFTA incoming              1100.\n 9 USA      1980 NAFTA outgoing              1213.\n10 USA      1980 NAFTA incoming              1460.\n11 France   1990 EU    outgoing               460.\n12 France   1990 EU    incoming               170.\n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pivot data\n\nanimals_pivot <- pivot_longer(animals,col=-'IPCC Area', names_to=\"Livestock\", values_to=\"Weight\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in pivot_longer(animals, col = -\"IPCC Area\", names_to = \"Livestock\", : object 'animals' not found\n```\n:::\n:::\n\n\nNow that I have pivoted this data, I have a case that includes Indian Subcontinent (IPCC Area), Cattle - Dairy (Livestock), and 275 (Weight). This meets tidy data requirements because each variable has its own column, each observation has its own row, and each value has its own cell.\n\n\nAny additional comments?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}