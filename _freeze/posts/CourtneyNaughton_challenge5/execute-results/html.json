{
  "hash": "59c8a7e2fa21cbbc3f5e627c050897b3",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5\"\nauthor: \"Courtney Naughton\"\ndescription: \"Introduction to Visualization\"\ndate: \"10/13/2022\"\nformat:\n  html:\n    html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - cereal\n  - Courtney Naughton\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(viridisLite)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ⭐\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal<- read_csv(\"_data/cereal.csv\")\ncereal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 4\n   Cereal                Sodium Sugar Type \n   <chr>                  <dbl> <dbl> <chr>\n 1 Frosted Mini Wheats        0    11 A    \n 2 Raisin Bran              340    18 A    \n 3 All Bran                  70     5 A    \n 4 Apple Jacks              140    14 C    \n 5 Captain Crunch           200    12 C    \n 6 Cheerios                 180     1 C    \n 7 Cinnamon Toast Crunch    210    10 C    \n 8 Crackling Oat Bran       150    16 A    \n 9 Fiber One                100     0 A    \n10 Frosted Flakes           130    12 C    \n11 Froot Loops              140    14 C    \n12 Honey Bunches of Oats    180     7 A    \n13 Honey Nut Cheerios       190     9 C    \n14 Life                     160     6 C    \n15 Rice Krispies            290     3 C    \n16 Honey Smacks              50    15 A    \n17 Special K                220     4 A    \n18 Wheaties                 180     4 A    \n19 Corn Flakes              200     3 A    \n20 Honeycomb                210    11 C    \n```\n:::\n:::\n\n\n### Briefly describe the data\nThis dataset has 20 rows and 4 column. It includes 20 types of cereal with detailed amount of sodium, sugar and type (A or C). The type is either child or adult.\n\n## Tidy Data (as needed)\n\nThis dataset is relatively tidy. We can sort this by sugar levels. I also converted Sodium in milligrams to grams so that we can compare it to Sugar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_sugar <-cereal %>% \n  arrange(desc(Sugar))  %>%\n  mutate(Sodium = Sodium/1000)\nby_sugar\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 4\n   Cereal                Sodium Sugar Type \n   <chr>                  <dbl> <dbl> <chr>\n 1 Raisin Bran             0.34    18 A    \n 2 Crackling Oat Bran      0.15    16 A    \n 3 Honey Smacks            0.05    15 A    \n 4 Apple Jacks             0.14    14 C    \n 5 Froot Loops             0.14    14 C    \n 6 Captain Crunch          0.2     12 C    \n 7 Frosted Flakes          0.13    12 C    \n 8 Frosted Mini Wheats     0       11 A    \n 9 Honeycomb               0.21    11 C    \n10 Cinnamon Toast Crunch   0.21    10 C    \n11 Honey Nut Cheerios      0.19     9 C    \n12 Honey Bunches of Oats   0.18     7 A    \n13 Life                    0.16     6 C    \n14 All Bran                0.07     5 A    \n15 Special K               0.22     4 A    \n16 Wheaties                0.18     4 A    \n17 Rice Krispies           0.29     3 C    \n18 Corn Flakes             0.2      3 A    \n19 Cheerios                0.18     1 C    \n20 Fiber One               0.1      0 A    \n```\n:::\n:::\n\n\nI also pivoted the data longer so that I could eventially create a stacked graph of sodium and sugar in one bar graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal_new<- pivot_longer(by_sugar, col = c(\"Sodium\",\"Sugar\"),\n                 names_to=\"Ingredient\",\n                 values_to = \"Amount\")\ncereal_new\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 40 × 4\n   Cereal             Type  Ingredient Amount\n   <chr>              <chr> <chr>       <dbl>\n 1 Raisin Bran        A     Sodium       0.34\n 2 Raisin Bran        A     Sugar       18   \n 3 Crackling Oat Bran A     Sodium       0.15\n 4 Crackling Oat Bran A     Sugar       16   \n 5 Honey Smacks       A     Sodium       0.05\n 6 Honey Smacks       A     Sugar       15   \n 7 Apple Jacks        C     Sodium       0.14\n 8 Apple Jacks        C     Sugar       14   \n 9 Froot Loops        C     Sodium       0.14\n10 Froot Loops        C     Sugar       14   \n# … with 30 more rows\n```\n:::\n:::\n\n\n## Univariate Visualizations\nUsing cereal data, we can look at the amount of sugar in each cereal, separating by type (adult or child).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_sugar %>%\n  filter(Type== \"A\") %>% \n  arrange(Sugar) %>%   \n mutate(Cereal=factor(Cereal, levels=Cereal)) %>%\n  ggplot( aes(x=Cereal, y=Sugar)) +\n    geom_segment( aes(xend=Cereal, yend=0)) +\n    geom_point( size=4, color=\"orange\") +\n    coord_flip() +\n    theme_bw() +\n    xlab(\"\")+\n  ggtitle(\"Adult Cereals by Sugar Levels\")\n```\n\n::: {.cell-output-display}\n![](CourtneyNaughton_challenge5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Barplot\nby_sugar %>%\n  filter(Type== \"C\") %>% \n  arrange(Sugar) %>%   \n  mutate(Cereal=factor(Cereal, levels=Cereal)) %>%\nggplot( aes(x=Cereal, y=Sugar)) + \n  geom_bar(stat = \"identity\", fill = viridis(10)) +\n  theme_minimal() +\n  coord_flip() +\n    ggtitle(\"Children Cereals by Sugar Levels\")\n```\n\n::: {.cell-output-display}\n![](CourtneyNaughton_challenge5_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n\n\n## Bivariate Visualization(s)\n\nNext, I want to see the amount of ingredients in each children's cereal. I first had to convert Sodium in mg to grams so that units of measurement are consistent.\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal_new %>%\n  filter(Type== \"C\") %>% \n  mutate(Cereal = fct_reorder(Cereal, desc(Amount))) %>%\nggplot(aes(fill=Ingredient, y= Amount, x=Cereal), ) + \n    geom_bar(position=\"stack\", stat=\"identity\")+\n   theme(axis.text.x = element_text(angle = 90)) +\n    ggtitle(\"Children Cereals with Sodium and Sugar Amounts\")\n```\n\n::: {.cell-output-display}\n![](CourtneyNaughton_challenge5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nAny additional comments?\n\nAs you can see from the chart, the makeup of Apple Jacks and Froot Loops are identical. Cheerios could be considered the most healthy with the lowest amount of sugar and sodium.\n",
    "supporting": [
      "CourtneyNaughton_challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}