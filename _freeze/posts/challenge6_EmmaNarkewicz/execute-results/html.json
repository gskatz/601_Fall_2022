{
  "hash": "8776d16ac06ca69e66089f841d4880e8",
  "result": {
    "markdown": "---\ntitle: \"Emma Narkewicz Challenge 6\"\nauthor: \"Emma Narkewicz\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"11/6/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - emma_narkewicz\n  - usa_households\neditor: \n  markdown: \n    wrap: 72\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n::: panel-tabset\n\n## Read in data\n\n-   usa_hh ⭐⭐⭐\n\nI chose to read in the usa_hh data because I hadn't worked with it yet\nand it contained a measure of time and many variables that can be used\nas parts of a whole, including racial groups and income levels. This\ndata set was trickier than I remembered, and I didn't anticipate how\nmuch upfront tidying, mutating, and critical thinking I had to do before\ngraphing it.\n\nOn the read in I: \n- skipped over notes and the title at the beginning of\nthe table \n- renamed the columns\n- deleted the standard error columns\nbecause I didn't feel like including them in my visualization \n- removed the footnotes from the bottom (after I read them)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\n#read in data \nUSA_HH <-read_excel(\"_data/USA Households by Total Money Income, Race, and Hispanic Origin of Householder 1967 to 2019.xlsx\",\n         skip = 5,\n         col_names = c(\"Year\", \"Number_of_HHolds_in_1000s\", \"Delete\", \"Income_Under_$15,000\", \"Income_$15,000-$24,999\", \"Income_$25,000_to_$34,999\", \"Income_$35,000_to_$49,999\",\"Income_$50,000_to_$74,999K\", \"Income_$75,999_$99,999K\", \"Income_$100,000_$149,999\", \"Income_$150,000_to_$199,999\", \"Income_Over_$200,000\", \"Median_Income\", \"Delete\", \"Mean_Income\", \"Delete\")) %>%\n   select(!contains(\"Delete\")) \n#Remove Footnotes At Bottom of Tables\nUSA_HH <- head(USA_HH, -31) \n\nUSA_HH\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 352 × 13\n   Year  Numbe…¹ Incom…² Incom…³ Incom…⁴ Incom…⁵ Incom…⁶ Incom…⁷ Incom…⁸ Incom…⁹\n   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL … <NA>       NA      NA      NA      NA      NA      NA      NA      NA  \n 2 2019  128451      9.1     8       8.3    11.7    16.5    12.3    15.5     8.3\n 3 2018  128579     10.1     8.8     8.7    12      17      12.5    15       7.2\n 4 2017… 127669     10       9.1     9.2    12      16.4    12.4    14.7     7.3\n 5 2017  127586     10.1     9.1     9.2    11.9    16.3    12.6    14.8     7.5\n 6 2016  126224     10.4     9       9.2    12.3    16.7    12.2    15       7.2\n 7 2015  125819     10.6    10       9.6    12.1    16.1    12.4    14.9     7.1\n 8 2014  124587     11.4    10.5     9.6    12.6    16.4    12.1    14       6.6\n 9 2013… 123931     11.4    10.3     9.5    12.5    16.8    12      13.9     6.7\n10 2013… 122952     11.3    10.4     9.7    13.1    17      12.5    13.6     6.3\n# … with 342 more rows, 3 more variables: `Income_Over_$200,000` <dbl>,\n#   Median_Income <dbl>, Mean_Income <chr>, and abbreviated variable names\n#   ¹​Number_of_HHolds_in_1000s, ²​`Income_Under_$15,000`,\n#   ³​`Income_$15,000-$24,999`, ⁴​`Income_$25,000_to_$34,999`,\n#   ⁵​`Income_$35,000_to_$49,999`, ⁶​`Income_$50,000_to_$74,999K`,\n#   ⁷​`Income_$75,999_$99,999K`, ⁸​`Income_$100,000_$149,999`,\n#   ⁹​`Income_$150,000_to_$199,999`\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe US Households data set contains information collected by the US\nCensus Bureau on household income level by race and Hispanic ethnicity.\nThe data set spans collected from 1967 through 2019, with measures of\nrace changing over time (more on this later). For each racial category,\nthere was an annual count of the number of households (in 1000s),\nestimated median income, estimates mean income, and percentage of\nhouseholds in each of 9 income brackets: \n- Less than \\$15,000 \n- \\$15,000 - \\$24,999 \n- \\$25,000 - \\$34,999 \n- \\$35,000 - \\$49,999\n- \\$50,000 - \\$74,999 \n- \\$75,000 - \\$99,999\n- \\$100,000 - \\$149,999 \n- \\$150,000 - \\$199,999 \n- \\$200,000 and over\n\nThe income brackets are not\nall the same size and range from \\$9,999 to \\$49,999.\n\nAfter reading in the data, I have a data set with 259 rows and 13\ncolumns. Some of these columns contain more than one variable or\nvariables that are the currently assigned the incorrect variable type.\n\n-   Year (<chr>) contains years, and information on race and Hispanic\n    origin in one column. Race and year will need to be separated, and\n    year converted to a date type variable.\n-   Number_of_HHolds_in_1000s <chr> this is the total number of\n    households in units of 1000s. It is currently a character variable\n    and will need to be made numerical.\n-   The 9 income columns, all numeric <dbl> (with units of %)\n-   Estimated median income <dbl> (units of \\$)\n-   Estimated mean income <chr>, needs to be made numeric (units of \\$)\n\nReturning to the measures of race, according to the data table foot\nnotes, sampling design and racial categories changed over time. In\naddition to being asked their race, households were asked to indicate if\nthey were Hispanic. One of the most noticeable changes in measuring race\nis that beginning in 2002, Census respondents were able to select more\nthan one race category. This means racial categories prior to 2002 do\nnot map on perfectly to data from 2002 - 2019. The total \"identity\"\ncategories which encompass both race and hispanic origin, as well as the\nyears each racial measure was used are below:\n\n-   All Races (1967 - 2019)\n-   Hispanic, Any Race (1972 - 2019)\n-   White Alone (2002 - 2019)\n-   White (1967 - 2001)\n-   White Alone, Not Hispanic (2002 - 2019)\n-   White, Not Hispanic (1972 - 2001)\n-   Black Alone or In Combination (2002 - 2019)\n-   Black Alone (2002 - 2019)\n-   Black (1967 - 2001)\n-   Asian Alone or In Combination (2002 - 2019\n-   Asian Alone 2002 - 2019\n-   Asian and Pacific Islander (1987 - 2001)\n\n## Tidy & Mutate Data (as needed)\n\nThe data required further tidying and mutating before working with it\ngraphically. Race and year need to be separated out into their own\ncolumns, variable types corrected (chr -\\> dbl) for some variables,\nconsistent racial categories need to be created, footnotes should be\nremoved, and the data set can be tidied by pivoting longer the income\ncategories. Phew, that's a lot!\n\nTo begin, the first Year column contains not only year, but information\non race, and Hispanic origin. Furthermore, there are also footnotes in\nthe first column and data multiple times for certain years. I revisited\nmy challenge 3 code on the Australian marriage data set to mutate out\nRace. I referenced Prof Rolfe's Challenge 3 solution to find the\n\\[\\[:alpha:\\]\\] function to select alphabetical columns (race and\nHispanic origin) from year (numerical).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Creating new Identity column\nUSA_HH_Data <- USA_HH %>%\n  mutate(Identity = case_when(\n    str_detect(Year, \"[[:alpha:]]\") ~ Year)\n    )%>%\n  relocate(`Identity`, .before = `Year`)%>%\n#Fill down the Identity Column\n   fill(Identity) %>%\n#Remove the Identity from the  year\n    filter(!str_detect(Year, \"[[:alpha:]]\"))\n  \n\nUSA_HH_Data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 340 × 14\n   Ident…¹ Year  Numbe…² Incom…³ Incom…⁴ Incom…⁵ Incom…⁶ Incom…⁷ Incom…⁸ Incom…⁹\n   <chr>   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL RA… 2019  128451      9.1     8       8.3    11.7    16.5    12.3    15.5\n 2 ALL RA… 2018  128579     10.1     8.8     8.7    12      17      12.5    15  \n 3 ALL RA… 2017… 127669     10       9.1     9.2    12      16.4    12.4    14.7\n 4 ALL RA… 2017  127586     10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 5 ALL RA… 2016  126224     10.4     9       9.2    12.3    16.7    12.2    15  \n 6 ALL RA… 2015  125819     10.6    10       9.6    12.1    16.1    12.4    14.9\n 7 ALL RA… 2014  124587     11.4    10.5     9.6    12.6    16.4    12.1    14  \n 8 ALL RA… 2013… 123931     11.4    10.3     9.5    12.5    16.8    12      13.9\n 9 ALL RA… 2013… 122952     11.3    10.4     9.7    13.1    17      12.5    13.6\n10 ALL RA… 2012  122459     11.4    10.6    10.1    12.5    17.4    12      13.9\n# … with 330 more rows, 4 more variables: `Income_$150,000_to_$199,999` <dbl>,\n#   `Income_Over_$200,000` <dbl>, Median_Income <dbl>, Mean_Income <chr>, and\n#   abbreviated variable names ¹​Identity, ²​Number_of_HHolds_in_1000s,\n#   ³​`Income_Under_$15,000`, ⁴​`Income_$15,000-$24,999`,\n#   ⁵​`Income_$25,000_to_$34,999`, ⁶​`Income_$35,000_to_$49,999`,\n#   ⁷​`Income_$50,000_to_$74,999K`, ⁸​`Income_$75,999_$99,999K`,\n#   ⁹​`Income_$100,000_$149,999`\n```\n:::\n:::\n\n\nIdentity and Year are now in their own columns, however they still have\npesky footnotes. I remembered I could use the presence of numbers in the\nalphabetical Identity column and the space between the year and the\nfootnotes in the Year column to strategically remove the footnotes using\nthe separate and mutate functions. I did reference and heavily utilize\nProfessor Rolfe's code from Solution 3 to execute these steps.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Remove the Footnotes with help of Prof Rolfe's Challenge 3 Code\nUSA_HH_Data <- USA_HH_Data %>%\n# Delete the footnotes after year using \n  separate(Year, into=c(\"Year\", \"Delete\"), sep=\" \")%>%\n# Delete the footnotes after Identity by identifying a number after a space in the \n  mutate(Identity = str_remove(Identity, \" [0-9]+\")) %>%\n  select(-\"Delete\")\n\nUSA_HH_Data \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 340 × 14\n   Ident…¹ Year  Numbe…² Incom…³ Incom…⁴ Incom…⁵ Incom…⁶ Incom…⁷ Incom…⁸ Incom…⁹\n   <chr>   <chr> <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL RA… 2019  128451      9.1     8       8.3    11.7    16.5    12.3    15.5\n 2 ALL RA… 2018  128579     10.1     8.8     8.7    12      17      12.5    15  \n 3 ALL RA… 2017  127669     10       9.1     9.2    12      16.4    12.4    14.7\n 4 ALL RA… 2017  127586     10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 5 ALL RA… 2016  126224     10.4     9       9.2    12.3    16.7    12.2    15  \n 6 ALL RA… 2015  125819     10.6    10       9.6    12.1    16.1    12.4    14.9\n 7 ALL RA… 2014  124587     11.4    10.5     9.6    12.6    16.4    12.1    14  \n 8 ALL RA… 2013  123931     11.4    10.3     9.5    12.5    16.8    12      13.9\n 9 ALL RA… 2013  122952     11.3    10.4     9.7    13.1    17      12.5    13.6\n10 ALL RA… 2012  122459     11.4    10.6    10.1    12.5    17.4    12      13.9\n# … with 330 more rows, 4 more variables: `Income_$150,000_to_$199,999` <dbl>,\n#   `Income_Over_$200,000` <dbl>, Median_Income <dbl>, Mean_Income <chr>, and\n#   abbreviated variable names ¹​Identity, ²​Number_of_HHolds_in_1000s,\n#   ³​`Income_Under_$15,000`, ⁴​`Income_$15,000-$24,999`,\n#   ⁵​`Income_$25,000_to_$34,999`, ⁶​`Income_$35,000_to_$49,999`,\n#   ⁷​`Income_$50,000_to_$74,999K`, ⁸​`Income_$75,999_$99,999K`,\n#   ⁹​`Income_$100,000_$149,999`\n```\n:::\n:::\n\n\nNext I wanted to convert character type variables to numeric type where\nappropriate. This change is needed for 2 columns: - Year -\nNumber_of_HHold_in_1000s - Mean Incomes I had converted variables to\nfactors previously, but that is not what I want to accomplish here. I\ncan convert them all to numerical variable type at once using mutate(),\nacross(), any_of(),\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Changing Year, Number_of_HHolds_in_1000s, and Mean Income from chr to dbl using parse\nUSA_HH_Data <- USA_HH_Data %>%\nmutate(across(any_of(c(\"Year\", \"Number_of_HHolds_in_1000s\", \"Mean_Income\")), \n                parse_number))\n```\n:::\n\n\nI also decided to replace Number_of_HHolds_in_1000s with\nNumber_of_HHolds by multiplying the first column by 1000 and deleting\nthe original. I used mutate(), relocate(), and select() to do this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Converting households in 1000s to households\nUSA_HH_Data <- USA_HH_Data %>%\n  mutate(Number_HHolds = 1000 * Number_of_HHolds_in_1000s) %>%\n  relocate(`Number_HHolds`, .before = `Income_Under_$15,000`) %>%\n  select(-\"Number_of_HHolds_in_1000s\")\n\nUSA_HH_Data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 340 × 14\n   Ident…¹  Year Numbe…² Incom…³ Incom…⁴ Incom…⁵ Incom…⁶ Incom…⁷ Incom…⁸ Incom…⁹\n   <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 ALL RA…  2019  1.28e8     9.1     8       8.3    11.7    16.5    12.3    15.5\n 2 ALL RA…  2018  1.29e8    10.1     8.8     8.7    12      17      12.5    15  \n 3 ALL RA…  2017  1.28e8    10       9.1     9.2    12      16.4    12.4    14.7\n 4 ALL RA…  2017  1.28e8    10.1     9.1     9.2    11.9    16.3    12.6    14.8\n 5 ALL RA…  2016  1.26e8    10.4     9       9.2    12.3    16.7    12.2    15  \n 6 ALL RA…  2015  1.26e8    10.6    10       9.6    12.1    16.1    12.4    14.9\n 7 ALL RA…  2014  1.25e8    11.4    10.5     9.6    12.6    16.4    12.1    14  \n 8 ALL RA…  2013  1.24e8    11.4    10.3     9.5    12.5    16.8    12      13.9\n 9 ALL RA…  2013  1.23e8    11.3    10.4     9.7    13.1    17      12.5    13.6\n10 ALL RA…  2012  1.22e8    11.4    10.6    10.1    12.5    17.4    12      13.9\n# … with 330 more rows, 4 more variables: `Income_$150,000_to_$199,999` <dbl>,\n#   `Income_Over_$200,000` <dbl>, Median_Income <dbl>, Mean_Income <dbl>, and\n#   abbreviated variable names ¹​Identity, ²​Number_HHolds,\n#   ³​`Income_Under_$15,000`, ⁴​`Income_$15,000-$24,999`,\n#   ⁵​`Income_$25,000_to_$34,999`, ⁶​`Income_$35,000_to_$49,999`,\n#   ⁷​`Income_$50,000_to_$74,999K`, ⁸​`Income_$75,999_$99,999K`,\n#   ⁹​`Income_$100,000_$149,999`\n```\n:::\n:::\n\n\nMy next step in tidying the data was pivoting the income levels longer\ninto a \"Income Level columns\" with values of \"Percentages\".\n\nPrior to pivoting the Households data set will had 340 rows and 14\ncolumns. I am pivoting 9 income columns into 2 columns meaning I expect\n7 columns.\n\nI expect there to be 3060 rows after pivoting due to 9 income columns\nbeing pivoted multiplied by the 340 existing rows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Calculating number of columns\n14 - 9 +2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7\n```\n:::\n\n```{.r .cell-code}\n#Calculating number of rows\n340 * 9\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3060\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nUSA_HH_Data <- USA_HH_Data %>%\n  pivot_longer(cols=starts_with(\"Income\"),\n               names_to = \"Income_Bracket\",\n               values_to = \"Percent\") \n\n\nUSA_HH_Data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3,060 × 7\n   Identity   Year Number_HHolds Median_Income Mean_Income Income_Brac…¹ Percent\n   <chr>     <dbl>         <dbl>         <dbl>       <dbl> <chr>           <dbl>\n 1 ALL RACES  2019     128451000         68703       98088 Income_Under…     9.1\n 2 ALL RACES  2019     128451000         68703       98088 Income_$15,0…     8  \n 3 ALL RACES  2019     128451000         68703       98088 Income_$25,0…     8.3\n 4 ALL RACES  2019     128451000         68703       98088 Income_$35,0…    11.7\n 5 ALL RACES  2019     128451000         68703       98088 Income_$50,0…    16.5\n 6 ALL RACES  2019     128451000         68703       98088 Income_$75,9…    12.3\n 7 ALL RACES  2019     128451000         68703       98088 Income_$100,…    15.5\n 8 ALL RACES  2019     128451000         68703       98088 Income_$150,…     8.3\n 9 ALL RACES  2019     128451000         68703       98088 Income_Over_…    10.3\n10 ALL RACES  2018     128579000         64324       91652 Income_Under…    10.1\n# … with 3,050 more rows, and abbreviated variable name ¹​Income_Bracket\n```\n:::\n:::\n\n\nWoohoo, 3,060 x 7 dimensions as predicted.\n\nI know I want to combine some of the racial categories, and when I do\npercentage columns can not be combined together properly. To deal with\nthis, I will create a new \"HHolds_In_Bracket\" Column that converts\npercentages to counts prior to adjusting identity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Creating a column of counts\nUSA_HH_Data <- USA_HH_Data %>%\n  mutate(HHolds_In_Bracket = round(Number_HHolds*(Percent/100)))\n\nUSA_HH_Data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3,060 × 8\n   Identity   Year Number_HHolds Median_Income Mean_In…¹ Incom…² Percent HHold…³\n   <chr>     <dbl>         <dbl>         <dbl>     <dbl> <chr>     <dbl>   <dbl>\n 1 ALL RACES  2019     128451000         68703     98088 Income…     9.1  1.17e7\n 2 ALL RACES  2019     128451000         68703     98088 Income…     8    1.03e7\n 3 ALL RACES  2019     128451000         68703     98088 Income…     8.3  1.07e7\n 4 ALL RACES  2019     128451000         68703     98088 Income…    11.7  1.50e7\n 5 ALL RACES  2019     128451000         68703     98088 Income…    16.5  2.12e7\n 6 ALL RACES  2019     128451000         68703     98088 Income…    12.3  1.58e7\n 7 ALL RACES  2019     128451000         68703     98088 Income…    15.5  1.99e7\n 8 ALL RACES  2019     128451000         68703     98088 Income…     8.3  1.07e7\n 9 ALL RACES  2019     128451000         68703     98088 Income…    10.3  1.32e7\n10 ALL RACES  2018     128579000         64324     91652 Income…    10.1  1.30e7\n# … with 3,050 more rows, and abbreviated variable names ¹​Mean_Income,\n#   ²​Income_Bracket, ³​HHolds_In_Bracket\n```\n:::\n:::\n\n\nFor a sanity check, I'm going to try to check that this math worked\nwell. For all races, there are 128,451,000 households, and 9.1% are in\nthe income under 15K bracket. A quick calculation shows that this is\n11,689,041 households, which is what the HHolds_in_Bracket says.\nAwesome!\n\nThe most challenging decision when tidying this data set was deciding\nhow to handle the inconsistent race and Hispanic identity measures\nmentioned before.\n\nOne of the aims of this challenge is visualize part-whole relationships.\nThe best way to do this, is to create new \"identity\" categories while\nremoving categories that overlap in multiple categories.\n\nWhile its great that surveyed households can express multiple racial\nidentities in recent censuses, any \"alone or in combination\" categories\nare measuring multiple parts i.e. Black & White vs. just Black & just\nWhite.\n\n-   The new Black category will contain \"Black Alone\" (2002-2019) &\n    \"Black\" (1967-2001), but NOT \"Black Alone or in Combination\"\n    (2002-2019)\n-   The new Asian category will contain \"Asian Alone\" (2002-2019) &\n    \"Asian & Pacific Islander\" (1987-2001), but NOT \"Asian Alone or In\n    Combination\" (2002 - 2019).\n\nHispanic identity needs to also be considered when creating a new white\ncategory. White is the only specific racial group that has categories\nreflecting Hispanic information, which are \"White Alone, Not Hispanic\"\nand \"White Not Hispanic\". I decided to only include non-Hispanic white\nin the new White category to make it a consistent with the other\ncategories, as there were no white in combination categories.\n\n- The new White category will contain \"While Alone, Not Hispanic\" (2002 -\n2019) & \"White Not Hispanic\" (1972 - 2001) but NOT \"White Alone\"\n(2002-2019) or \"White\" 1967-2001.\n- The larger All Races (1967-2019) and Hispanic, Any Race (1972-2019)\ncategories are kept as is.\n\nAfter creating the new \"Tot_Identity\" column using mutate(), I removed\nall the data from the identities that weren't included in the new\ncategories using filter (!is.na).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Dealing with Identity\n\nUSA_HH_Data_Identity <- USA_HH_Data %>%\n  mutate(Tot_Identity = case_when(\n    Identity %in% c(\"BLACK\", \"BLACK ALONE\") ~ \"Black\",\n    Identity %in% c(\"ASIAN ALONE\",\n                  \"ASIAN AND PACIFIC ISLANDER\") ~ \"Asian\",\n    Identity %in% c(\"WHITE, NOT HISPANIC\", \n                    \"WHITE ALONE, NOT HISPANIC\") ~ \"White\",\n    Identity %in% c(\"HISPANIC (ANY RACE)\") ~ \"All_Hispanic\",\n    Identity %in% c(\"ALL RACES\") ~ \"All_Races\")) %>%\n  relocate(`Tot_Identity`, .before = `Year`)\n\n#Remove old identity column & empty rows\n  \nUSA_HH_Data_Identity <- USA_HH_Data_Identity %>%\n  select(!Identity) %>%\n    filter(!is.na(Tot_Identity))\n\nUSA_HH_Data_Identity\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,205 × 8\n   Tot_Identity  Year Number_HHolds Median_Inc…¹ Mean_…² Incom…³ Percent HHold…⁴\n   <chr>        <dbl>         <dbl>        <dbl>   <dbl> <chr>     <dbl>   <dbl>\n 1 All_Races     2019     128451000        68703   98088 Income…     9.1  1.17e7\n 2 All_Races     2019     128451000        68703   98088 Income…     8    1.03e7\n 3 All_Races     2019     128451000        68703   98088 Income…     8.3  1.07e7\n 4 All_Races     2019     128451000        68703   98088 Income…    11.7  1.50e7\n 5 All_Races     2019     128451000        68703   98088 Income…    16.5  2.12e7\n 6 All_Races     2019     128451000        68703   98088 Income…    12.3  1.58e7\n 7 All_Races     2019     128451000        68703   98088 Income…    15.5  1.99e7\n 8 All_Races     2019     128451000        68703   98088 Income…     8.3  1.07e7\n 9 All_Races     2019     128451000        68703   98088 Income…    10.3  1.32e7\n10 All_Races     2018     128579000        64324   91652 Income…    10.1  1.30e7\n# … with 2,195 more rows, and abbreviated variable names ¹​Median_Income,\n#   ²​Mean_Income, ³​Income_Bracket, ⁴​HHolds_In_Bracket\n```\n:::\n:::\n\n\n## Time Dependent Visualization\n\nLets do some graphing!\n\nI graphed Median income over time in geom_line(), using Identity for the\ncolor code. I used factor reorder the legend variables to match how\nvariables appear on the y-axis, the Identity group with the highest\nmedian income would be at the top of the legend. Additionally, I found\nhaving the y-axis in scientific notation was challenging to read and\neasily understand, so I used options(scipen) to put a stop to that.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(viridis)\n\n#Original Graph\nUSA_HH_Data_Identity %>%\n  ggplot(aes(x=Year, y = Median_Income, color=Tot_Identity)) +\n    geom_line() +\n    scale_color_viridis(discrete = TRUE) +\n    ggtitle(\"Median Household Income over Time\") +\n    ylab(\"Median Household Income ($)\")\n```\n\n::: {.cell-output-display}\n![](challenge6_EmmaNarkewicz_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#remove scientific notation\noptions(scipen = 999)\n\n#factor reorder &  do all titles in 1 & remove scientific notation\nUSA_HH_Data_Identity %>%\n  ggplot(aes(x=Year, y = Median_Income, color=fct_reorder2(Tot_Identity, Year, Median_Income))) +\n    geom_line() +\n    scale_color_viridis(discrete = TRUE) +   ggtitle(\"US Median Household Income($) by Identity Group over Time\") +labs( x = \"Year\", y = \"Median Household Income ($)\", colour = \"Identity\")\n```\n\n::: {.cell-output-display}\n![](challenge6_EmmaNarkewicz_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n:::\n\n\nThe graph indicates that for all races, median US household incomes\nincreased over time. \n\n - For Asian households, the median US household income increased by \\$30,000 in ~ 30 years, from \\$70,000 to \\$100,000. That is an average rate of increase of ~$1,000 a year.\n -  Asian households had the highest median\nincome of any race or ethnicity, approaching \\$100,000 in the year 2019. \n - Asian was only an option on the US Census starting a few\nyears before 1990, while the measurement of All Races, White, and Black\nhousehold income started 10-20 years earlier.\n - White households have the  second highest income of any group, at roughly\n\\$75,000 in 2019. \n - For White households, the median US household income increased by ~$20,000 in 50  years, from ~$55,000 to ~$75,000. That is an average rate of increase of ~$400 a year.\n - The shape of the All Races Median Household Income line perfectly mirrors the pattern of the White line, expect the y-intercept is approximately \\$5,000 below the White income.This suggests that the median household income for All-Races is heavily influenced by the income of White households. In 2019, the median US household income for All Races was slightly under \\$70,000.\n - The median US household income for all races increased by $20,000 over ~55 years, from $50,000 to $70,000. That is an average rate of increase of ~$365 a year. \n - US Census measurements of All Hispanic households only began after 2000. All Hispanic households had the second lowest US median income of all groups.\nFor all Hispanic households, the median income increased by $10,000 in 15 years, from $45,000 to $55,000. The average rate of increase was ~$667 a year.\n - Black households consistently had the lowest median household income of all racial and ethnic groups.\n - For Black households, the median US income increased by about \\$15,000 in ~ 55 years, from $30,000 to $45,000. That is an average rate of increase of ~ $275 a year. Black households had not only the lowest median household income of any racial group and the lowest average rate of household income increasing.\n \n\n## Visualizing Part-Whole Relationships\n\nWhen trying to graph part-whole relationships, I realized that the Income Brackets were not properly coded as ordinal, meaning they would show up out of order on graphs. Using mutate() and recode_factor() I fixed this, using .ordered at the end.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Make Income Bracket Ordinal\nUSA_HH_Data_Identity_Ord <-mutate(USA_HH_Data_Identity, Income_Bracket = recode_factor(Income_Bracket, \n                                   \"Income_Under_$15,000\" = \"<$15,000\",\n                                   \"Income_$15,000-$24,999\" = \"$15,000-$24,999\",  \n                                   \"Income_$25,000_to_$34,999\"= \"$25,000-$34,999\", \n                                   \"Income_$35,000_to_$49,999\" = \"$35,000-$49,999\",\n                                   \"Income_$50,000_to_$74,999K\" = \"$50,000-$74,999\",\n                                   \"Income_$75,999_$99,999K\" = \"$75,999-$99,999\", \n                                   \"Income_$100,000_$149,999\" = \"$100,000-$149,999\",\n                                   \"Income_$150,000_to_$199,999\" = \"$150,000-$199,999\",\n                                  \"Income_Over_$200,000\" = \">$200,000\",\n                                  .ordered = TRUE))\n\n\nUSA_HH_Data_Identity_Ord\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,205 × 8\n   Tot_Identity  Year Number_HHolds Median_Inc…¹ Mean_…² Incom…³ Percent HHold…⁴\n   <chr>        <dbl>         <dbl>        <dbl>   <dbl> <ord>     <dbl>   <dbl>\n 1 All_Races     2019     128451000        68703   98088 <$15,0…     9.1  1.17e7\n 2 All_Races     2019     128451000        68703   98088 $15,00…     8    1.03e7\n 3 All_Races     2019     128451000        68703   98088 $25,00…     8.3  1.07e7\n 4 All_Races     2019     128451000        68703   98088 $35,00…    11.7  1.50e7\n 5 All_Races     2019     128451000        68703   98088 $50,00…    16.5  2.12e7\n 6 All_Races     2019     128451000        68703   98088 $75,99…    12.3  1.58e7\n 7 All_Races     2019     128451000        68703   98088 $100,0…    15.5  1.99e7\n 8 All_Races     2019     128451000        68703   98088 $150,0…     8.3  1.07e7\n 9 All_Races     2019     128451000        68703   98088 >$200,…    10.3  1.32e7\n10 All_Races     2018     128579000        64324   91652 <$15,0…    10.1  1.30e7\n# … with 2,195 more rows, and abbreviated variable names ¹​Median_Income,\n#   ²​Mean_Income, ³​Income_Bracket, ⁴​HHolds_In_Bracket\n```\n:::\n:::\n\n\n\nI decided to create a grouped bar chart below to compare the number of households in each income bracket between races. For my first graph I created a grouped bar chart with x-axis = Income Levels, y-axis = number of households, fill = Identity. This isn't a very easy to interpret graph because of how many more more White and All-Races households there are than Hispanic, Black, or Asian.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#grouped barchart, income level as x-axis\nggplot(USA_HH_Data_Identity_Ord, aes(fill=Tot_Identity, y=HHolds_In_Bracket, x=Income_Bracket)) + \n    geom_bar(position=\"dodge\", stat=\"identity\") + ggtitle(\"Grouped Bar Chart: Number of US Households in Income Bracket by Race (X Axis = Income Level)\") + labs (x= \"Income Bracket\", y=\"Number of Households\")\n```\n\n::: {.cell-output-display}\n![](challenge6_EmmaNarkewicz_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nTo better visualize visualize the distribution of income levels within a racial group, I swapped Identity onto the x-axis and used Income Bracket as the fill in another graph below. Grouping income bracket columns by race this way allows for a much easier comparison within racial groups. Even the though the size of different racial groups vary, you can still see differences in income distributions between races, such as the lower-income skew of Black households, and higher income skew of Asian households.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#\nggplot(USA_HH_Data_Identity_Ord, aes(fill=Income_Bracket, y=HHolds_In_Bracket, x=Tot_Identity)) + \n    geom_bar(position=\"dodge\", stat=\"identity\") + ggtitle(\"Grouped Bar Chart: Number of US Households in Income Bracket by Race (X Axis = Race)\") + labs(x= \"Identity\", y=\"Number of Households\")\n```\n\n::: {.cell-output-display}\n![](challenge6_EmmaNarkewicz_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\nNext, I tried creating a stacked bar chart below, keeping Identity on the x-axis and income bracket as filled. This stacked bar chart used counts, and with the differences in the sizes of the racial groups, it's very difficult to read the Asian, Black, and All Hispanics bars.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#stacked bar chart by counts\nggplot(USA_HH_Data_Identity_Ord, aes(fill=Income_Bracket, y=HHolds_In_Bracket, x=Tot_Identity)) + \n    geom_bar(position=\"stack\", stat=\"identity\") + ggtitle(\"Stacked Bar Chart by Count: Number of US Households in Income Bracket by Race\") + labs(x= \"Identity\", y=\"Number of Households\")\n```\n\n::: {.cell-output-display}\n![](challenge6_EmmaNarkewicz_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nTo try to improve the chart, I modified the stacked bar chart to use percentages instead of counts. This was much easier to read than the stacked bar chart. In fact, it was easier to compare the income distributions between racial groups than the grouped bar charts.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#stacked bar chart by percentage\nggplot(USA_HH_Data_Identity_Ord, aes(fill=Income_Bracket, y=HHolds_In_Bracket, x=Tot_Identity)) + geom_bar(position=\"fill\", stat=\"identity\") + ggtitle(\"Stacked Bar Chart by %:Number of US Households in Income Bracket by Race\") + labs(x= \"Identity\", y=\"Percentage of Households(%)\")\n```\n\n::: {.cell-output-display}\n![](challenge6_EmmaNarkewicz_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\nWhile the stacked bar chart by percentage does not show the different sizes of the racial group, it does the best job in showing the relative differences in household income distribution between races.\n\n:::\n",
    "supporting": [
      "challenge6_EmmaNarkewicz_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}