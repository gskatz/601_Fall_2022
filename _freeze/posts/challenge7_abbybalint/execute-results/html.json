{
  "hash": "dc70631b35f6e76295075df886150a0b",
  "result": {
    "markdown": "---\ntitle: \"Challenge 7 Abby Balint\"\nauthor: \"Abby Balint\"\ndescription: \"Visualizing Multiple Dimensions\"\ndate: \"11/5/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_7\n  - air_bnb\n  - abby_balint\n \n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(viridis)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\nReading in AirBnb dataset -\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrentals <- read_csv(\"_data/AB_NYC_2019.csv\")\nhead(rentals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 16\n     id name       host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n  <dbl> <chr>        <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n1  2539 Clean & q…    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n2  2595 Skylit Mi…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n3  3647 THE VILLA…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n4  3831 Cozy Enti…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n5  5022 Entire Ap…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n6  5099 Large Coz…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n# … with 6 more variables: minimum_nights <dbl>, number_of_reviews <dbl>,\n#   last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n:::\n\n\n### Description of data\n\n*In this challenge I am copying the work I did for challenge 5 but working on adding some elements to the charts to make them look more visually pleasing or publication ready.*\n\nThis data set describes AirBnB rental data for NYC. The dataset contains information about the location of the property (4 different variables), room type, price, minimum nights for a stay, reviews, and availability. It also includes personal data about the name and host ID of the person listing the property. There are a total of 16 variables and over 48,000 individual rows of data, indicating this dataset can tell us about more than 48,000 properties. Given that the reviews variable indicates records of reviews from 2019 all the way back to 2011, it is likely safe to assume that not all of these properties are currently listed on AirBnb today.\n\n\n::: {.cell}\n\n:::\n\n\n## Data tidying\n\nThis data is actually relatively tidy already. The numerical values we would most be interested in looking at are already in a clean and consistent format, such as Date, Availability, and Minimum number of nights. There is also already a grouping variable that groups up the neighborhoods into the burrows which is a regrouping I would have done for graphing purposes if it didn't already exist. \n\nThe one thing I thought would be helpful to tidy would be to regroup the price column, as the prices vary greatly individually and wouldn't have much meaning on their own. This way I can use these groups when graphing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrentalsclean <- rentals %>%\n  mutate(`PriceRanges` = dplyr::case_when(\n    `price` >= 0 & `price` < 100 ~ \"<$100\",\n    `price` >= 100 & `price` < 250 ~ \"$100-$250\",\n    `price` >= 250 & `price` < 500 ~ \"$250-$500\",\n    `price` >= 500 & `price` < 1000 ~ \"$500-$1000\",\n    `price` >= 1000 ~ \"$1000+\" ))\nhead(rentalsclean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 17\n     id name       host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n  <dbl> <chr>        <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n1  2539 Clean & q…    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n2  2595 Skylit Mi…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n3  3647 THE VILLA…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n4  3831 Cozy Enti…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n5  5022 Entire Ap…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n6  5099 Large Coz…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n# … with 7 more variables: minimum_nights <dbl>, number_of_reviews <dbl>,\n#   last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>,\n#   PriceRanges <chr>, and abbreviated variable names ¹​host_name,\n#   ²​neighbourhood_group, ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n:::\n\n\n## Univariate Visualizations\n\nHere I generated a univariate visualization to show the counts of AirBnbs in NYC by both Borough and Price. I broke both of these down by Room Type as well so that I could visualize within the different boroughs and price ranges respectively what the most common room type would be.\n\n*To update these, I made the following changes: changed to a percentage fill for more accurate representation, added the Viridis color theme. *\n\n::: {.cell}\n\n```{.r .cell-code}\nrentalsclean %>%\n  ggplot(aes(`neighbourhood_group`, fill = `room_type`)) + \n  geom_bar(position=\"fill\"\n           ) + \n  labs(title = \"AirBnb Counts by NYC Neighborhood\", x=\"Borough\", y=\"Number of Airbnbs\") + \n  theme_bw() +\n  scale_fill_discrete(name=\"Room Type\")+\n  scale_fill_viridis(discrete = T)\n```\n\n::: {.cell-output-display}\n![](challenge7_abbybalint_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrentalsclean %>%\n  ggplot(aes(`PriceRanges`, fill = `room_type`)) + \n  geom_bar(position=\"fill\") + \n  labs(title = \"AirBnb Counts by NYC Neighborhood\", x=\"Price\", y=\"Number of Airbnbs\") + \n  theme_bw() +\n  scale_fill_discrete(name=\"Room Type\")+\n  scale_fill_viridis(discrete = T)\n```\n\n::: {.cell-output-display}\n![](challenge7_abbybalint_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Bivariate Visualization(s)\nFor this first bivariate visualization, I looked at the number of reviews a property got per month in comparison to how many days a year the property is available. I filtered by properties available 300 days a year or more to limit the business of the scatterplot and also to zoom in on properties that operate essentially year round. Surprisingly, I see that most properties still receive a few or less reviews per month.\n\n*To update this, I added some color and detail to the scatterplots, as well as a geom_smooth line.*\n\n::: {.cell}\n\n```{.r .cell-code}\nrentalsclean %>%\n  filter(`availability_365` >= 300) %>%\n  ggplot(aes(x=`reviews_per_month`, y=`availability_365`)) + \n  geom_point(\n    color=\"purple\",\n    fill=\"#69b3a2\",\n    size=.5,\n    alpha=.5\n  ) + \n  geom_smooth(\n    color=\"pink\"\n  )+\n  labs(title = \"AirBnb Reviews Gathered by Availability of Listing\", x=\"Reviews Per Month\", y=\"Number of Days Per Year Available\") + \n  facet_wrap (~`neighbourhood_group`, nrow=2) +\n  xlim(0,18)\n```\n\n::: {.cell-output-display}\n![](challenge7_abbybalint_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nFor this  bivariate visualization, I looked at the number of reviews a property got per month in comparison to how many properties the property owner lists. I think this makes it clear that 1) the majority of people list a small number of airbnbs, and 2) the number of reviews received (and in turn the amount of business) maybe isn't impacted by the number of properties that lister holds.\n\n*To update this, I added scale labels for both the x and y axis, as well as color-coded the scatterplot by borough.*\n\n::: {.cell}\n\n```{.r .cell-code}\nrentalsclean %>%\n  ggplot(aes(x=`calculated_host_listings_count`, y=`number_of_reviews`, colour=`neighbourhood_group`)) + \n  geom_point() + \n  labs(title = \"Relationship Between Number of Reviews and Number of Host Listings \", x=\"Number of Listings Host Controls\", y=\"Number of Reviews\", colour=\"Neighborhood\")+\n  scale_y_continuous(breaks = seq(0, 700, by = 100))+\n  scale_x_continuous(breaks = seq(0, 400, by = 50))\n```\n\n::: {.cell-output-display}\n![](challenge7_abbybalint_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge7_abbybalint_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}