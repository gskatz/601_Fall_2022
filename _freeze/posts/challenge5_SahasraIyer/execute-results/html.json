{
  "hash": "a765d1b0e79104240abe7a2c7d66b110",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Instructions\"\nauthor: \"Meredith Rolfe\"\ndescription: \"Introduction to Visualization\"\ndate: \"08/22/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ⭐\n-   Total_cost_for_top_15_pathogens_2018.xlsx ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read data into dataframe\ndata <- read_csv(\"_data/AB_NYC_2019.csv\")\n\nhead(data, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 16\n     id name       host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n  <dbl> <chr>        <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n1  2539 Clean & q…    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n2  2595 Skylit Mi…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n3  3647 THE VILLA…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n4  3831 Cozy Enti…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n5  5022 Entire Ap…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n# … with 6 more variables: minimum_nights <dbl>, number_of_reviews <dbl>,\n#   last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n\n```{.r .cell-code}\n# Get summary statistics of data\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id               name              host_id           host_name        \n Min.   :    2539   Length:48895       Min.   :     2438   Length:48895      \n 1st Qu.: 9471945   Class :character   1st Qu.:  7822033   Class :character  \n Median :19677284   Mode  :character   Median : 30793816   Mode  :character  \n Mean   :19017143                      Mean   : 67620011                     \n 3rd Qu.:29152178                      3rd Qu.:107434423                     \n Max.   :36487245                      Max.   :274321313                     \n                                                                             \n neighbourhood_group neighbourhood         latitude       longitude     \n Length:48895        Length:48895       Min.   :40.50   Min.   :-74.24  \n Class :character    Class :character   1st Qu.:40.69   1st Qu.:-73.98  \n Mode  :character    Mode  :character   Median :40.72   Median :-73.96  \n                                        Mean   :40.73   Mean   :-73.95  \n                                        3rd Qu.:40.76   3rd Qu.:-73.94  \n                                        Max.   :40.91   Max.   :-73.71  \n                                                                        \n  room_type             price         minimum_nights    number_of_reviews\n Length:48895       Min.   :    0.0   Min.   :   1.00   Min.   :  0.00   \n Class :character   1st Qu.:   69.0   1st Qu.:   1.00   1st Qu.:  1.00   \n Mode  :character   Median :  106.0   Median :   3.00   Median :  5.00   \n                    Mean   :  152.7   Mean   :   7.03   Mean   : 23.27   \n                    3rd Qu.:  175.0   3rd Qu.:   5.00   3rd Qu.: 24.00   \n                    Max.   :10000.0   Max.   :1250.00   Max.   :629.00   \n                                                                         \n  last_review         reviews_per_month calculated_host_listings_count\n Min.   :2011-03-28   Min.   : 0.010    Min.   :  1.000               \n 1st Qu.:2018-07-08   1st Qu.: 0.190    1st Qu.:  1.000               \n Median :2019-05-19   Median : 0.720    Median :  1.000               \n Mean   :2018-10-04   Mean   : 1.373    Mean   :  7.144               \n 3rd Qu.:2019-06-23   3rd Qu.: 2.020    3rd Qu.:  2.000               \n Max.   :2019-07-08   Max.   :58.500    Max.   :327.000               \n NA's   :10052        NA's   :10052                                   \n availability_365\n Min.   :  0.0   \n 1st Qu.:  0.0   \n Median : 45.0   \n Mean   :112.8   \n 3rd Qu.:227.0   \n Max.   :365.0   \n                 \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe data is composed of different AirBNB properties listed in New York City, in the year 2019. It consists of information such as the host name, the neighborhood and neighborhood group, the geographical locations, as well as the property type and price. It would be interesting to explore the data to identify differnt statistics by property type as well as neighborhood group.  \n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Get NA columns count\nget_na_col_count <-sapply(data, function(col_name) sum(length(which(is.na(col_name)))))\nna_col_count <- data.frame(get_na_col_count)\nna_col_count\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                               get_na_col_count\nid                                            0\nname                                         16\nhost_id                                       0\nhost_name                                    21\nneighbourhood_group                           0\nneighbourhood                                 0\nlatitude                                      0\nlongitude                                     0\nroom_type                                     0\nprice                                         0\nminimum_nights                                0\nnumber_of_reviews                             0\nlast_review                               10052\nreviews_per_month                         10052\ncalculated_host_listings_count                0\navailability_365                              0\n```\n:::\n:::\n\nFrom the analysis, we can see that every row has a unique id associated with it, which means that there are no duplicate listings present in the dataset. \n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get number of unique room types\nunique(data$room_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Private room\"    \"Entire home/apt\" \"Shared room\"    \n```\n:::\n\n```{.r .cell-code}\n# Get number of unique neighborhood groups\nunique(data$neighbourhood_group)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Brooklyn\"      \"Manhattan\"     \"Queens\"        \"Staten Island\"\n[5] \"Bronx\"        \n```\n:::\n:::\n\nWe can see that room_type and neighborhood_group columns are categorical, with limited unique values. \n\n\n## Univariate Visualizations\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata %>%\n  dplyr::count(room_type) %>%\n  ggplot(aes(x = room_type, y = n, fill = room_type)) +\n  geom_bar(stat = \"identity\") + \n  geom_text(aes(label = n), vjust = -0.5) +\n  labs(title=\"Room Types vs Total Bookings\", x=\"Room Types Available\", y=\"Total Booking Count\", fill=\"Room Type\")\n```\n\n::: {.cell-output-display}\n![](challenge5_SahasraIyer_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndata %>%\n  dplyr::count(neighbourhood_group) %>%\n  ggplot(aes(x = neighbourhood_group, y = n, fill = neighbourhood_group)) +\n  geom_bar(stat = \"identity\") + \n  geom_text(aes(label = n), vjust = -0.5) +\n  labs(title=\"Neighborhood vs Total Bookings\", x=\"Neighborhoods\", y=\"Total Booking Count\", fill=\"Neighborhoods\")\n```\n\n::: {.cell-output-display}\n![](challenge5_SahasraIyer_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get histogram plot to get price density of the properties listed\ndata %>%\n  ggplot(aes(x=price)) + \n  geom_histogram() + \n  xlim(0, 2100) + \n  xlab(\"Price (in Dollars)\") + \n  ylab(\"Number of properties\") + \n  ggtitle(\"Histogram of property price distribution in dataset\")\n```\n\n::: {.cell-output-display}\n![](challenge5_SahasraIyer_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nAs the histogram is right skewed, we can conclude that most of the properties have price listings less than $500, with very few properties exceeding that value. \n\n\n## Bivariate Visualization(s)\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data) +\n  geom_bar(aes(x = room_type, fill=neighbourhood_group)) + \n  labs(x = \"Room Type\", y = \"Number of Airbnbs\", title = \"Scatterplot of Room Type vs # of Airbnbs\",\n       fill = \"Neighbourhood Group\")\n```\n\n::: {.cell-output-display}\n![](challenge5_SahasraIyer_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data) + \n  geom_point(mapping = aes(x = minimum_nights, y = price)) + \n  labs(x = \"Minimum Nights\",\n       y = \"Price\",\n       title = \"Price vs Minimum Nights\")\n```\n\n::: {.cell-output-display}\n![](challenge5_SahasraIyer_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\nAny additional comments?\n\nFrom the analysis, we get various visualizations which tell us that entire apartment bookings are most popular, with Manhattan and Brooklyn being the most sought after neighborhood groups. Within the bivariate visualizations we can also see a breakdown of the proportion of neighborhood group bookings for the property types available. \n",
    "supporting": [
      "challenge5_SahasraIyer_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}