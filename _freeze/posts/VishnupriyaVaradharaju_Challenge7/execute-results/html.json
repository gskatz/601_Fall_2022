{
  "hash": "106ea4517e766101840a579bf3c01981",
  "result": {
    "markdown": "---\ntitle: \"Challenge 7 Solutions\"\nauthor: \"Vishnupriya Varadharaju\"\ndescription: \"Visualizing Multiple Dimensions\"\ndate: \"11/30/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_7\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nWorking with the Hotel data set as I had previously tidied it. \n\n## Read in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reading in data\nh_book <- read_csv(\"_data/hotel_bookings.csv\", show_col_types = FALSE)\nh_book\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 32\n   hotel  is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n   <chr>    <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n 1 Resor…       0     342    2015 July         27       1       0       0      2\n 2 Resor…       0     737    2015 July         27       1       0       0      2\n 3 Resor…       0       7    2015 July         27       1       0       1      1\n 4 Resor…       0      13    2015 July         27       1       0       1      1\n 5 Resor…       0      14    2015 July         27       1       0       2      2\n 6 Resor…       0      14    2015 July         27       1       0       2      2\n 7 Resor…       0       0    2015 July         27       1       0       2      2\n 8 Resor…       0       9    2015 July         27       1       0       2      2\n 9 Resor…       1      85    2015 July         27       1       0       3      2\n10 Resor…       1      75    2015 July         27       1       0       3      2\n# … with 119,380 more rows, 22 more variables: children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe following dataset has 119390 observations and 32 different fields. This is basically the data from two hotels - City Hotel & Resort Hotel. Each entry corresponds to a booking made by a customer. There are various information that are recorded with each booking. It includes the arrival date, number of days of stay, meal, type of room reserved, customer type, reservation status, number of adult/children and many more. The data consists of entries from countries all over the world.\n \n\n## Tidy Data (as needed)\n\nIn country, there are entries called NULL, which can be removed as it may not be useful for the analysis. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# in country we can see that there is a field call NULL that can be removed\ntable(h_book$country)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  ABW   AGO   AIA   ALB   AND   ARE   ARG   ARM   ASM   ATA   ATF   AUS   AUT \n    2   362     1    12     7    51   214     8     1     2     1   426  1263 \n  AZE   BDI   BEL   BEN   BFA   BGD   BGR   BHR   BHS   BIH   BLR   BOL   BRA \n   17     1  2342     3     1    12    75     5     1    13    26    10  2224 \n  BRB   BWA   CAF   CHE   CHL   CHN   CIV   CMR    CN   COL   COM   CPV   CRI \n    4     1     5  1730    65   999     6    10  1279    71     2    24    19 \n  CUB   CYM   CYP   CZE   DEU   DJI   DMA   DNK   DOM   DZA   ECU   EGY   ESP \n    8     1    51   171  7287     1     1   435    14   103    27    32  8568 \n  EST   ETH   FIN   FJI   FRA   FRO   GAB   GBR   GEO   GGY   GHA   GIB   GLP \n   83     3   447     1 10415     5     4 12129    22     3     4    18     2 \n  GNB   GRC   GTM   GUY   HKG   HND   HRV   HUN   IDN   IMN   IND   IRL   IRN \n    9   128     4     1    29     1   100   230    35     2   152  3375    83 \n  IRQ   ISL   ISR   ITA   JAM   JEY   JOR   JPN   KAZ   KEN   KHM   KIR   KNA \n   14    57   669  3766     6     8    21   197    19     6     2     1     2 \n  KOR   KWT   LAO   LBN   LBY   LCA   LIE   LKA   LTU   LUX   LVA   MAC   MAR \n  133    16     2    31     8     1     3     7    81   287    55    16   259 \n  MCO   MDG   MDV   MEX   MKD   MLI   MLT   MMR   MNE   MOZ   MRT   MUS   MWI \n    4     1    12    85    10     1    18     1     5    67     1     7     2 \n  MYS   MYT   NAM   NCL   NGA   NIC   NLD   NOR   NPL  NULL   NZL   OMN   PAK \n   28     2     1     1    34     1  2104   607     1   488    74    18    14 \n  PAN   PER   PHL   PLW   POL   PRI   PRT   PRY   PYF   QAT   ROU   RUS   RWA \n    9    29    40     1   919    12 48590     4     1    15   500   632     2 \n  SAU   SDN   SEN   SGP   SLE   SLV   SMR   SRB   STP   SUR   SVK   SVN   SWE \n   48     1    11    39     1     2     1   101     2     5    65    57  1024 \n  SYC   SYR   TGO   THA   TJK   TMP   TUN   TUR   TWN   TZA   UGA   UKR   UMI \n    2     3     2    59     9     3    39   248    51     5     2    68     1 \n  URY   USA   UZB   VEN   VGB   VNM   ZAF   ZMB   ZWE \n   32  2097     4    26     1     8    80     2     4 \n```\n:::\n\n```{.r .cell-code}\nh_book <- h_book %>% \n  filter(!(country == \"NULL\"))\n```\n:::\n\n\n\nTwo fields, Agents and Company have numerical values in them, but have the datatype marked as character. These NULL entries can be changed to NA and the datatype can be changed to numeric. Also, the arrival date in year, month and date can be combined into a single field called as arrival date. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# combining the arrival date into a single field\n# to find the total number of guests in the hotel - add adults, children and babies\n\nh_book_mut <- h_book %>% \n  mutate(arrival_date = str_c(arrival_date_day_of_month,\n                              arrival_date_month,\n                              arrival_date_year, sep=\"/\"),\n         arrival_date = dmy(arrival_date),\n         total_guests = adults + children + babies) %>% \n  select(-c(arrival_date_day_of_month,arrival_date_year))\n\nh_book_mut\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 118,902 × 32\n   hotel   is_ca…¹ lead_…² arriv…³ arriv…⁴ stays…⁵ stays…⁶ adults child…⁷ babies\n   <chr>     <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>\n 1 Resort…       0     342 July         27       0       0      2       0      0\n 2 Resort…       0     737 July         27       0       0      2       0      0\n 3 Resort…       0       7 July         27       0       1      1       0      0\n 4 Resort…       0      13 July         27       0       1      1       0      0\n 5 Resort…       0      14 July         27       0       2      2       0      0\n 6 Resort…       0      14 July         27       0       2      2       0      0\n 7 Resort…       0       0 July         27       0       2      2       0      0\n 8 Resort…       0       9 July         27       0       2      2       0      0\n 9 Resort…       1      85 July         27       0       3      2       0      0\n10 Resort…       1      75 July         27       0       3      2       0      0\n# … with 118,892 more rows, 22 more variables: meal <chr>, country <chr>,\n#   market_segment <chr>, distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>,\n#   total_of_special_requests <dbl>, reservation_status <chr>, …\n```\n:::\n\n```{.r .cell-code}\n# mutating the datatype of the agent and company field from char to numeric\n\nh_book_mut <- h_book_mut %>%\n  mutate(across(c(agent, company),~ replace(.,str_detect(., \"NULL\"), NA))) %>% mutate_at(vars(agent, company),as.numeric)\n\nis.numeric(h_book_mut$agent)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nis.numeric(h_book_mut$company)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n## Visualization with Multiple Dimensions\n\nI had previously used only one two dimensions to visualize this dataset. I can add an additional dimension of the category of hotel to see the guest count arrival rate between \"City Hotel\" and \"Resort Hotel\".\n\nFirstly, I want to see how many guests are arriving over a period of time on a daily basis for each hotel separately.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot1_data <- h_book_mut %>% select(hotel, total_guests, arrival_date) %>%\n  group_by(hotel, arrival_date) %>%\n  summarise(net_guests = sum(total_guests, na.rm=TRUE))\n\nplot1_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,586 × 3\n# Groups:   hotel [2]\n   hotel      arrival_date net_guests\n   <chr>      <date>            <dbl>\n 1 City Hotel 2015-07-01          143\n 2 City Hotel 2015-07-02           96\n 3 City Hotel 2015-07-03           28\n 4 City Hotel 2015-07-04           72\n 5 City Hotel 2015-07-05           15\n 6 City Hotel 2015-07-06           59\n 7 City Hotel 2015-07-07           35\n 8 City Hotel 2015-07-08           79\n 9 City Hotel 2015-07-09           92\n10 City Hotel 2015-07-10           19\n# … with 1,576 more rows\n```\n:::\n\n```{.r .cell-code}\n# finding the date ranges of the arrival date of this data\n\nsummary(plot1_data$arrival_date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. \n\"2015-07-01\" \"2016-01-15\" \"2016-07-31\" \"2016-07-31\" \"2017-02-14\" \"2017-08-31\" \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(plot1_data, aes(x=arrival_date, y=net_guests, color = hotel)) + ggtitle(\"Guest Count Vs. Arrival Date Trend: Jul 2015 - Jun 2016\") +\n  geom_line() + \n  labs(y=\"Net Guests\", x =\"Date\", color=\"Hotel\") + theme(axis.text.x=element_text(angle=60, hjust=1)) +\n  scale_x_date(date_labels = \"%Y %b %d\", date_minor_breaks = \"1 month\", limit=c(as.Date(\"2015-07-01\"),as.Date(\"2016-07-01\")))\n\np\n```\n\n::: {.cell-output-display}\n![](VishnupriyaVaradharaju_Challenge7_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nFrom the above plot, we can see a general trend that the number of incoming guests for the Resort Hotel are lower than that of the City Hotel. But during the first and last week of December and February, we can see that the number of incoming guests for Resort Hotel does peak higher than the City Hotel. This case can also be seen during the last week of March. These periods usually correspond to the Holiday period, where in this can be one indicator that people, prefer the Resort Hotel to the City Hotel. \n\n\nNext we can try to find out during which months the total number of guests peak between the two hotels. \n\n::: {.cell}\n\n```{.r .cell-code}\nplot2_data <- h_book_mut %>% select(hotel, arrival_date_month, total_guests) %>%\n  group_by(hotel, arrival_date_month) %>%\n  summarise(net_guests = sum(total_guests, na.rm=TRUE))\n\nplot2_data <- plot2_data %>% mutate(month = case_when(\n  arrival_date_month == \"January\" ~ 1,\n  arrival_date_month == \"February\" ~ 2,\n  arrival_date_month == \"March\" ~ 3,\n  arrival_date_month == \"April\" ~ 4,\n  arrival_date_month == \"May\" ~ 5,\n  arrival_date_month == \"June\" ~ 6,\n  arrival_date_month == \"July\" ~ 7,\n  arrival_date_month == \"August\" ~ 8,\n  arrival_date_month == \"September\" ~ 9,\n  arrival_date_month == \"October\" ~ 10,\n  arrival_date_month == \"November\" ~ 11,\n  arrival_date_month == \"December\" ~ 12,\n  TRUE ~ NA_real_\n)) %>% arrange(month)\n\nplot2_data$month <-as.character(plot2_data$month)\n\nplot2_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 24 × 4\n# Groups:   hotel [2]\n   hotel        arrival_date_month net_guests month\n   <chr>        <chr>                   <dbl> <chr>\n 1 City Hotel   January                  6721 1    \n 2 Resort Hotel January                  3733 1    \n 3 City Hotel   February                 9376 2    \n 4 Resort Hotel February                 5848 2    \n 5 City Hotel   March                   12333 3    \n 6 Resort Hotel March                    6031 3    \n 7 City Hotel   April                   15101 4    \n 8 Resort Hotel April                    6847 4    \n 9 City Hotel   May                     15464 5    \n10 Resort Hotel May                      6978 5    \n# … with 14 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(plot2_data, aes(fill=hotel,x=reorder(month, sort(as.numeric(month))), y=net_guests)) + \n    geom_bar(position=\"dodge\", stat=\"identity\") + labs(y=\"Number of Guests\", x=\"Months\",  title=\"Monthly Trend of Number of Guests\") + scale_fill_discrete(name = \"Hotel\")\np\n```\n\n::: {.cell-output-display}\n![](VishnupriyaVaradharaju_Challenge7_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nFrom the above visualization we can see that for City Hotel, the distribution is fairly normal. However for the Resort Hotel, the distribution is somewhat uniform through all the months, with smaller peaks during the months of July and August.\n\n\nNext, I want to find the average price per night for different rooms in both the hotels and also look at how the prices vary on a monthly basis. There are 9 room types (from A-L). First I group by room type and find the mean adr and then I group by the hotels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot3_data <- h_book_mut %>% select(hotel, arrival_date_month, assigned_room_type, adr) %>%\n  group_by(hotel, arrival_date_month, assigned_room_type) %>%\n  summarise(net_adr = mean(adr, na.rm=TRUE)) %>% mutate(month = case_when(\n  arrival_date_month == \"January\" ~ 1,\n  arrival_date_month == \"February\" ~ 2,\n  arrival_date_month == \"March\" ~ 3,\n  arrival_date_month == \"April\" ~ 4,\n  arrival_date_month == \"May\" ~ 5,\n  arrival_date_month == \"June\" ~ 6,\n  arrival_date_month == \"July\" ~ 7,\n  arrival_date_month == \"August\" ~ 8,\n  arrival_date_month == \"September\" ~ 9,\n  arrival_date_month == \"October\" ~ 10,\n  arrival_date_month == \"November\" ~ 11,\n  arrival_date_month == \"December\" ~ 12,\n  TRUE ~ NA_real_\n)) %>% arrange(month)\n\nplot3_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 205 × 5\n# Groups:   hotel, arrival_date_month [24]\n   hotel        arrival_date_month assigned_room_type net_adr month\n   <chr>        <chr>              <chr>                <dbl> <dbl>\n 1 City Hotel   January            A                     78.5     1\n 2 City Hotel   January            B                     77.3     1\n 3 City Hotel   January            D                     92.8     1\n 4 City Hotel   January            E                    109.      1\n 5 City Hotel   January            F                    137.      1\n 6 City Hotel   January            G                    144.      1\n 7 City Hotel   January            K                     44.2     1\n 8 Resort Hotel January            A                     44.8     1\n 9 Resort Hotel January            B                     34.9     1\n10 Resort Hotel January            C                     50.1     1\n# … with 195 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np <- ggplot(plot3_data, aes(fill=assigned_room_type,x=reorder(month, sort(as.numeric(month))), y=net_adr)) + \n    geom_bar(position=\"dodge\", stat=\"identity\") + labs(y=\"Mean ADR\", x=\"Months\",  title=\"ADR by Room Type and Hotel through the Months\") + scale_fill_discrete(name = \"Room Type\") + facet_wrap( ~ hotel)\np\n```\n\n::: {.cell-output-display}\n![](VishnupriyaVaradharaju_Challenge7_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nThe above plot is to compare the prices of different rooms between the two hotels across various months. Generally we can see that the prices of the rooms tend to peak in the month of July and August for both the hotels. From the previous plot, it was seen that the number of guests are also high during this time. This could be probably be one of the reasons why the prices shoot up during those months. While the prices for the different rooms are fairly the same throughout the different months for City Hotel. Whereas for Resort Hotel, the prices for the different rooms follow a normal distribution.\n\n\n",
    "supporting": [
      "VishnupriyaVaradharaju_Challenge7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}