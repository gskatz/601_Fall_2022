{
  "hash": "452d1c7de8e64b948813bc51afbc4737",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 Instructions\"\nauthor: \"Meredith Rolfe\"\ndescription: \"Introduction to Visualization\"\ndate: \"08/22/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(scales)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n\n-   try to make them \"publication\" ready\n-   Explain why you choose the specific graph type\n\n5)  Create at least one bivariate visualization\n\n-   try to make them \"publication\" ready\n-   Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ⭐\n-   Total_cost_for_top_15_pathogens_2018.xlsx ⭐\n-   Australian Marriage ⭐⭐\n-   AB_NYC_2019.csv ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐\n-   USA Households ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nABNYC <- read_csv(\"_data/AB_NYC_2019.csv\") \nABNYC\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48,895 × 16\n      id name      host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n   <dbl> <chr>       <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n 1  2539 Clean & …    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n 2  2595 Skylit M…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n 3  3647 THE VILL…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n 4  3831 Cozy Ent…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n 5  5022 Entire A…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n 6  5099 Large Co…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n 7  5121 BlissArt…    7356 Garon   Brookl… Bedfor…    40.7   -74.0 Privat…    60\n 8  5178 Large Fu…    8967 Shunic… Manhat… Hell's…    40.8   -74.0 Privat…    79\n 9  5203 Cozy Cle…    7490 MaryEl… Manhat… Upper …    40.8   -74.0 Privat…    79\n10  5238 Cute & C…    7549 Ben     Manhat… Chinat…    40.7   -74.0 Entire…   150\n# … with 48,885 more rows, 6 more variables: minimum_nights <dbl>,\n#   number_of_reviews <dbl>, last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nABNYC dataset interprets reviews of the place in New york, along with the host details , reviews and information about different different places.\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(ABNYC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"id\"                             \"name\"                          \n [3] \"host_id\"                        \"host_name\"                     \n [5] \"neighbourhood_group\"            \"neighbourhood\"                 \n [7] \"latitude\"                       \"longitude\"                     \n [9] \"room_type\"                      \"price\"                         \n[11] \"minimum_nights\"                 \"number_of_reviews\"             \n[13] \"last_review\"                    \"reviews_per_month\"             \n[15] \"calculated_host_listings_count\" \"availability_365\"              \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(ABNYC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895    16\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(ABNYC,neighbourhood_group) %>% table() %>% prop.table() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nneighbourhood_group\n        Bronx      Brooklyn     Manhattan        Queens Staten Island \n  0.022313120   0.411166786   0.443010533   0.115880969   0.007628592 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nroom <- NYC %>% filter(neighbourhood_group == \"Manhattan\") %>%  \n  select(host_name,price,room_type) %>% group_by(room_type) %>% \n  summarise(count=n())\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., neighbourhood_group == \"Manhattan\"): object 'NYC' not found\n```\n:::\n\n```{.r .cell-code}\nroom\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'room' not found\n```\n:::\n:::\n\n\n## Univariate Visualizations\n\n## Bivariate Visualization(s)\n\nLet's see some Visualization on ABNYC data set-\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(NYC_Room, aes(x = room_type)) + geom_bar(color = \"blue\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(NYC_Room, aes(x = room_type)): object 'NYC_Room' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot <- ABNYC %>%\n  count(neighbourhood_group) %>%\n  mutate(percent = n / sum(n), percentlabel = paste0(round(percent*100), \"%\"))\nggplot(plot, aes(x = reorder(neighbourhood_group, -percent), y = percent)) + \n  geom_bar(stat = \"identity\", fill = \"indianred3\", color = \"black\") +\n  geom_text(aes(label = percentlabel), vjust = -0.25) + scale_y_continuous(labels = percent) +\n  labs(x = \"neighbourhood_group\", y = \"percent\")\n```\n\n::: {.cell-output-display}\n![](Manan_Patel_challenge5_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nthe count function to count the number of observations in each neighbourhood_group. Then, the mutate function is used to create a new variable called percent that represents the percentage of observations in each neighbourhood_group. Finally, a percentlabel variable is created that contains a string representation of the percentage for each neighbourhood_group. Once the data has been processed, the ggplot function is used to create the plot. The aes function is used to define the x and y axes of the plot. The geom_bar and geom_text functions are then used to add a bar chart and labels to the plot, respectively. The scale_y\\_continuous and labs functions are used to customize the y-axis and add labels to the x and y axes of the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ABNYC,\n       aes(x = neighbourhood_group, fill = room_type)) + geom_bar(position = \"fill\", color = \"black\")\n```\n\n::: {.cell-output-display}\n![](Manan_Patel_challenge5_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nAs we can see in the brookyln not that many people are sharing the room but in broonx people sharing the room is highest. On the other hand, in Manhattan most of the people are willing to take the entire apartment rather than sharing it.\n",
    "supporting": [
      "Manan_Patel_challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}