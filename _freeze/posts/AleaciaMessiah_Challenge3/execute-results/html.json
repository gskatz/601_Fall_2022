{
  "hash": "41abb39b176cf9b1e901169ec0fc4442",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Aleacia Messiah\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"09/26/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - Aleacia Messiah\n  - australian_marriage\n  - tidyverse\n  - readxl\n  - summarytools\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(summarytools)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ⭐\n-   eggs_tidy.csv ⭐⭐ or organiceggpoultry.xls ⭐⭐⭐\n-   australian_marriage\\*.xls ⭐⭐⭐\n-   USA Households\\*.xlsx ⭐⭐⭐⭐\n-   sce_labor_chart_data_public.xlsx 🌟🌟🌟🌟🌟\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in the Table 2 sheet in the dataset marriage, removing the first 7 rows\ntable2 <- read_excel(\"_data/australian_marriage_law_postal_survey_2017_-_response_final.xls\", sheet = \"Table 2\", col_names = c(\"Divisions\", \"Response_Clear_Yes\", \"Response_Clear_Yes_Percent\", \"Response_Clear_No\", \"Response_Clear_No_Percent\", \"Response_Clear_Total\", \"Response_Clear_Total_Percent\", \"delete\", \"Eligible_Response_Clear\", \"Eligible_Response_Clear_Percent\", \"Eligible_Response_Not_Clear\", \"Eligible_Response_Not_Clear_Percent\", \"Eligible_Response_Non_Responding\", \"Eligible_Response_Non_Responding_Percent\", \"Eligible_Response_Total\", \"Eligible_Response_Total_Percent\"), skip = 7)                    \n# view the first 6 rows of Table 2 \nhead(table2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 16\n  Divis…¹ Respo…² Respo…³ Respo…⁴ Respo…⁵ Respo…⁶ Respo…⁷ delete Eligi…⁸ Eligi…⁹\n  <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <lgl>    <dbl>   <dbl>\n1 New So…      NA    NA        NA    NA        NA      NA NA          NA    NA  \n2 Banks     37736    44.9   46343    55.1   84079     100 NA       84079    79.9\n3 Barton    37153    43.6   47984    56.4   85137     100 NA       85137    77.8\n4 Bennel…   42943    49.8   43215    50.2   86158     100 NA       86158    81  \n5 Berowra   48471    54.6   40369    45.4   88840     100 NA       88840    84.5\n6 Blaxla…   20406    26.1   57926    73.9   78332     100 NA       78332    75  \n# … with 6 more variables: Eligible_Response_Not_Clear <dbl>,\n#   Eligible_Response_Not_Clear_Percent <dbl>,\n#   Eligible_Response_Non_Responding <dbl>,\n#   Eligible_Response_Non_Responding_Percent <dbl>,\n#   Eligible_Response_Total <dbl>, Eligible_Response_Total_Percent <dbl>, and\n#   abbreviated variable names ¹​Divisions, ²​Response_Clear_Yes,\n#   ³​Response_Clear_Yes_Percent, ⁴​Response_Clear_No, …\n```\n:::\n\n```{.r .cell-code}\n# remove rows with totals and NAs\ntable2 <- table2[-c(1, 49:51, 89:91, 122:124, 136:138, 155:157, 163:165, 168:170, 173:184),]\n# remove the \"delete\" column with NAs\ntable2 <- select(table2, !contains(\"delete\"))\n# remove columns with totals\ntable2 <- select(table2, !contains(\"Total\") & !contains(\"Percent\"))\n# view a summary of Table 2\ndfSummary(table2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nData Frame Summary  \ntable2  \nDimensions: 150 x 6  \nDuplicates: 0  \n\n----------------------------------------------------------------------------------------------------------------------------------------\nNo   Variable                           Stats / Values                  Freqs (% of Valid)    Graph                 Valid      Missing  \n---- ---------------------------------- ------------------------------- --------------------- --------------------- ---------- ---------\n1    Divisions                          1. Adelaide                       1 ( 0.7%)                                 150        0        \n     [character]                        2. Aston                          1 ( 0.7%)                                 (100.0%)   (0.0%)   \n                                        3. Ballarat                       1 ( 0.7%)                                                     \n                                        4. Banks                          1 ( 0.7%)                                                     \n                                        5. Barker                         1 ( 0.7%)                                                     \n                                        6. Barton                         1 ( 0.7%)                                                     \n                                        7. Bass                           1 ( 0.7%)                                                     \n                                        8. Batman                         1 ( 0.7%)                                                     \n                                        9. Bendigo                        1 ( 0.7%)                                                     \n                                        10. Bennelong                     1 ( 0.7%)                                                     \n                                        [ 140 others ]                  140 (93.3%)           IIIIIIIIIIIIIIIIII                        \n\n2    Response_Clear_Yes                 Mean (sd) : 52115 (12315.1)     150 distinct values         : :             150        0        \n     [numeric]                          min < med < max:                                            : :             (100.0%)   (0.0%)   \n                                        19026 < 51782.5 < 89590                                     : : :                               \n                                        IQR (CV) : 15259 (0.2)                                    . : : :                               \n                                                                                                . : : : : . .                           \n\n3    Response_Clear_No                  Mean (sd) : 32493.2 (8262.8)    150 distinct values         :               150        0        \n     [numeric]                          min < med < max:                                            :               (100.0%)   (0.0%)   \n                                        14860 < 31653.5 < 57926                                     : :                                 \n                                        IQR (CV) : 8274.5 (0.3)                                   : : : :                               \n                                                                                              : : : : : : : :   .                       \n\n4    Eligible_Response_Clear            Mean (sd) : 84608.2 (10318.9)   149 distinct values             : .         150        0        \n     [numeric]                          min < med < max:                                                : :         (100.0%)   (0.0%)   \n                                        34924 < 85726.5 < 120951                                        : :                             \n                                        IQR (CV) : 10149 (0.1)                                        : : :                             \n                                                                                                    . : : : :   .                       \n\n5    Eligible_Response_Not_Clear        Mean (sd) : 244.6 (55.9)        109 distinct values       :                 150        0        \n     [numeric]                          min < med < max:                                          : :               (100.0%)   (0.0%)   \n                                        106 < 240 < 377                                         : : :                                   \n                                        IQR (CV) : 68.8 (0.2)                                   : : : .                                 \n                                                                                              . : : : : :                               \n\n6    Eligible_Response_Non_Responding   Mean (sd) : 21855.1 (4197.5)    149 distinct values         :               150        0        \n     [numeric]                          min < med < max:                                          . : :             (100.0%)   (0.0%)   \n                                        13092 < 21416.5 < 35841                                 : : : : :                               \n                                        IQR (CV) : 5562.2 (0.2)                                 : : : : : .                             \n                                                                                              : : : : : : : :   .                       \n----------------------------------------------------------------------------------------------------------------------------------------\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nDescribe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\"\n\nLooking at the dataset, we can see this dataset is data collected from an Australian Marriage Law Postal Survey in which each observation is the Federal Electoral Division and the variables are clear affirmative responses, clear negative responses, clear eligible participants' responses, not clear eligible participants' responses, and non-responding eligible participants' responses. Most of these variables such as the divisions variable have 150 distinct values (i.e. 150 distinct divisions). The data is current as of August 24, 2017 and there are some variables that include blank responses and more territories listed in the explanatory notes. There are some variables that can be condensed to make it easier to analyze so it is necessary to use pivot functions to make it tidy. \n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA     346.     232.\n2 USA      1990 NAFTA    1068.     902.\n3 France   1980 EU        766.    1199.\n4 Mexico   1990 NAFTA    2090.    1688.\n5 USA      1980 NAFTA     523.     298.\n6 France   1990 EU       1739.     239.\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOur simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n### Challenge: Describe the final dimensions\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# view the number of current rows/observations in Table 2\nnrow(table2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 150\n```\n:::\n\n```{.r .cell-code}\n# view the number of current columns/variables in Table 2\nncol(table2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n# find the expected number of rows/observations in Table 2\nnrow(table2) * (ncol(table2)-1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 750\n```\n:::\n\n```{.r .cell-code}\n# find the expected number of columns/variables in Table 2\nncol(table2)-3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\nAny additional comments?\n\nThe current number of rows in Table 2 is 150 while the current number of columns is 6. There should be 750 rows and 3 columns in the pivoted dataset since the five response columns will be consolidated into rows. \n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"trade_direction\",\n                 values_to = \"trade_value\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 5\n   country  year trade trade_direction trade_value\n   <chr>   <dbl> <chr> <chr>                 <dbl>\n 1 Mexico   1980 NAFTA outgoing               346.\n 2 Mexico   1980 NAFTA incoming               232.\n 3 USA      1990 NAFTA outgoing              1068.\n 4 USA      1990 NAFTA incoming               902.\n 5 France   1980 EU    outgoing               766.\n 6 France   1980 EU    incoming              1199.\n 7 Mexico   1990 NAFTA outgoing              2090.\n 8 Mexico   1990 NAFTA incoming              1688.\n 9 USA      1980 NAFTA outgoing               523.\n10 USA      1980 NAFTA incoming               298.\n11 France   1990 EU    outgoing              1739.\n12 France   1990 EU    incoming               239.\n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable2_new <- pivot_longer(table2, col = c(Response_Clear_Yes, Response_Clear_No, Eligible_Response_Clear, Eligible_Response_Not_Clear, Eligible_Response_Non_Responding), names_to = \"Type_of_Response\", values_to = \"No_of_Responses\")\ntable2_new\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 750 × 3\n   Divisions Type_of_Response                 No_of_Responses\n   <chr>     <chr>                                      <dbl>\n 1 Banks     Response_Clear_Yes                         37736\n 2 Banks     Response_Clear_No                          46343\n 3 Banks     Eligible_Response_Clear                    84079\n 4 Banks     Eligible_Response_Not_Clear                  247\n 5 Banks     Eligible_Response_Non_Responding           20928\n 6 Barton    Response_Clear_Yes                         37153\n 7 Barton    Response_Clear_No                          47984\n 8 Barton    Eligible_Response_Clear                    85137\n 9 Barton    Eligible_Response_Not_Clear                  226\n10 Barton    Eligible_Response_Non_Responding           24008\n# … with 740 more rows\n```\n:::\n:::\n\n\nAny additional comments?\n\nThe new observations represent the type of response (clear, not clear, or non-responding) and how many responses were captured for that type for each division. This new dataset meets the requirements of tidy data in that each variable (division, type of response, and number of responses) is in a column, each observation is in a row, and the values are in the cells.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}