{
  "hash": "971bfaabad3fd52de0c4b40c41d11f74",
  "result": {
    "markdown": "---\ntitle: \"Sarah McAlpine - Challenge 5\"\nauthor: \"Sarah McAlpine\"\ndesription: \"Homework Challenge 5\"\ndate: \"10/23/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - sarahmcalpine\n  - pathogens\n  - ggplot\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Reading in Pathogen data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#initial read-in for summary\npathogen_orig <- read_xlsx(\"_data/Total_cost_for_top_15_pathogens_2018.xlsx\",\n                            col_names = c(\"Pathogen\",\"est_cases\",\"total_cost\"),\n                           range = \"A6:C20\")\n                            \nhead(pathogen_orig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  Pathogen                           est_cases  total_cost\n  <chr>                                  <dbl>       <dbl>\n1 Campylobacter spp. (all species)      845024 2181485783.\n2 Clostridium perfringens               965958  384277856.\n3 Cryptosporidium spp. (all species)     57616   58394152.\n4 Cyclospora cayetanensis                11407    2571518.\n5 Listeria monocytogenes                  1591 3189686110.\n6 Norovirus                            5461731 2566984191.\n```\n:::\n\n```{.r .cell-code}\n#tail(pathogen_orig)\n```\n:::\n\nWith this initial read-in, I can see that the data contain 15 pathogen groups, the estimated mean of cases in 2018, and the total cost of those cases, adjusted for inflation per the notes. From what I understand, these 15 groups are distinct, and so I expect I can trust the values without needing to disentangle them from one another (i.e. if all species of Campylobacter and a subspecies were both listed). I will want to mutate the data to find the average cost per case so that I can arrange them in the order of most expensive per case.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npathogen <- read_xlsx(\"_data/Total_cost_for_top_15_pathogens_2018.xlsx\",\n                            col_names = c(\"Pathogen\",\"est_cases\",\"total_cost\"),\n                           range = \"A6:C20\") %>%\n  # add cost per case variable\n  mutate(cost_case = total_cost/est_cases) %>%\n  # arrange in descending order\n  arrange(desc(cost_case)) \n  \npath_ranked <- print(pathogen)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 4\n   Pathogen                                              est_c…¹ total…² cost_…³\n   <chr>                                                   <dbl>   <dbl>   <dbl>\n 1 Vibrio vulnificus                                          96  3.59e8  3.74e6\n 2 Listeria monocytogenes                                   1591  3.19e9  2.00e6\n 3 Toxoplasma gondii                                       86686  3.74e9  4.32e4\n 4 Shiga toxin-producing Escherichia coli O157 (STEC O1…   63153  3.11e8  4.93e3\n 5 Vibrio non-cholera species other than V. parahaemoly…   17564  8.17e7  4.65e3\n 6 Salmonella (non-typhoidal species)                    1027561  4.14e9  4.03e3\n 7 Yersinia enterocolitica                                 97656  3.13e8  3.21e3\n 8 Campylobacter spp. (all species)                       845024  2.18e9  2.58e3\n 9 Vibrio parahaemolyticus                                 34664  4.57e7  1.32e3\n10 Shigella (all species)                                 131254  1.59e8  1.21e3\n11 Cryptosporidium spp. (all species)                      57616  5.84e7  1.01e3\n12 Norovirus                                             5461731  2.57e9  4.70e2\n13 Clostridium perfringens                                965958  3.84e8  3.98e2\n14 non-O157 Shiga toxin-producing Escherichia coli (STE…  112752  3.17e7  2.81e2\n15 Cyclospora cayetanensis                                 11407  2.57e6  2.25e2\n# … with abbreviated variable names ¹​est_cases, ²​total_cost, ³​cost_case\n```\n:::\n:::\n\n## Univariate Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot as bar columns so names read horizontally\nggplot(path_ranked)+\ngeom_col(aes(cost_case,Pathogen),\n         fill = \"blue\", \n         width = .9) +\n  scale_x_sqrt()\n```\n\n::: {.cell-output-display}\n![](SarahMcAlpine_hw5_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  #how do I retain the ranked order from above?\n```\n:::\n\nThis plot shows the average cost per case of the 15 pathogens in the data. I elected to display these as `scale_x_sqrt` so that the differences among the lower 13 were distinguishable. I am not sure how to preserve the ranked order I got from my clean read-in and mutate chunk.\n\n## Bivariate Visualization\n\n::: {.cell}\n\n```{.r .cell-code}\n#try a dot plot\nggplot(path_ranked, aes(x=cost_case, y=est_cases, label=Pathogen))+\ngeom_point()+\n  scale_x_log10() +\n  geom_text()\n```\n\n::: {.cell-output-display}\n![](SarahMcAlpine_hw5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#try a violin plot\nggplot(path_ranked, aes(x=cost_case, y=est_cases, label=Pathogen))+\n  geom_violin()+\n  geom_text()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The following aesthetics were dropped during statistical transformation: label\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n```\n:::\n\n::: {.cell-output-display}\n![](SarahMcAlpine_hw5_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "SarahMcAlpine_hw5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}