{
  "hash": "b03fbcbe62874c0a9db2f1da6e9bab23",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2\"\nauthor: \"Janhvi Joshi\"\ndesription: \"Data wrangling: using group() and summarise()\"\ndate: \"10/25/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - railroads\n  - faostat\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a data set, and describe the data using both words and any supporting information (e.g., tables, etc)\n2)  provide summary statistics for different interesting groups within the data, and interpret those statistics\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, available in the `posts/_data` folder, using the correct R package and command.\n\n-   railroad\\*.csv or StateCounty2012.xls ⭐\n-   FAOstat\\*.csv or birds.csv ⭐⭐⭐\n-   hotel_bookings.csv ⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_bookings <- read_csv('_data/hotel_bookings.csv')\nhotel_bookings\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 32\n   hotel  is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n   <chr>    <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n 1 Resor…       0     342    2015 July         27       1       0       0      2\n 2 Resor…       0     737    2015 July         27       1       0       0      2\n 3 Resor…       0       7    2015 July         27       1       0       1      1\n 4 Resor…       0      13    2015 July         27       1       0       1      1\n 5 Resor…       0      14    2015 July         27       1       0       2      2\n 6 Resor…       0      14    2015 July         27       1       0       2      2\n 7 Resor…       0       0    2015 July         27       1       0       2      2\n 8 Resor…       0       9    2015 July         27       1       0       2      2\n 9 Resor…       1      85    2015 July         27       1       0       3      2\n10 Resor…       1      75    2015 July         27       1       0       3      2\n# … with 119,380 more rows, 22 more variables: children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\nThis dataset is a summarising details of hotel bookings which includes data like arrival time, month, year, number of nights, number of adults, children and babies staying. Other interesting details includes whether the guest has previously booked or cancelled bookings at the hotel, hotel room type etc. \n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\nThis dataset summarises various details about a hotel booking and contains 120k records dating from year 2015 to 2017. It can be seen by the summary command and other analysis of data done below that there are two types of hotels in this dataset - Resort Hotel and City Hotel. Customers from around the world; around 160-170 countries, book these hotels. It can also be seen that on an average, around 37% of the bookings are cancelled and around 3% of the guests are repeated. On an average, customers may need to wait for 2.3 days in the waitlist to confirm a booking and around 57% of these bookings include some special requests. The hotels provide 4 different types of meals to their customers. This dataset is likely gathered from various online and offline channels - from where the booking was made.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(hotel_bookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    hotel            is_canceled       lead_time   arrival_date_year\n Length:119390      Min.   :0.0000   Min.   :  0   Min.   :2015     \n Class :character   1st Qu.:0.0000   1st Qu.: 18   1st Qu.:2016     \n Mode  :character   Median :0.0000   Median : 69   Median :2016     \n                    Mean   :0.3704   Mean   :104   Mean   :2016     \n                    3rd Qu.:1.0000   3rd Qu.:160   3rd Qu.:2017     \n                    Max.   :1.0000   Max.   :737   Max.   :2017     \n                                                                    \n arrival_date_month arrival_date_week_number arrival_date_day_of_month\n Length:119390      Min.   : 1.00            Min.   : 1.0             \n Class :character   1st Qu.:16.00            1st Qu.: 8.0             \n Mode  :character   Median :28.00            Median :16.0             \n                    Mean   :27.17            Mean   :15.8             \n                    3rd Qu.:38.00            3rd Qu.:23.0             \n                    Max.   :53.00            Max.   :31.0             \n                                                                      \n stays_in_weekend_nights stays_in_week_nights     adults      \n Min.   : 0.0000         Min.   : 0.0         Min.   : 0.000  \n 1st Qu.: 0.0000         1st Qu.: 1.0         1st Qu.: 2.000  \n Median : 1.0000         Median : 2.0         Median : 2.000  \n Mean   : 0.9276         Mean   : 2.5         Mean   : 1.856  \n 3rd Qu.: 2.0000         3rd Qu.: 3.0         3rd Qu.: 2.000  \n Max.   :19.0000         Max.   :50.0         Max.   :55.000  \n                                                              \n    children           babies              meal             country         \n Min.   : 0.0000   Min.   : 0.000000   Length:119390      Length:119390     \n 1st Qu.: 0.0000   1st Qu.: 0.000000   Class :character   Class :character  \n Median : 0.0000   Median : 0.000000   Mode  :character   Mode  :character  \n Mean   : 0.1039   Mean   : 0.007949                                        \n 3rd Qu.: 0.0000   3rd Qu.: 0.000000                                        \n Max.   :10.0000   Max.   :10.000000                                        \n NA's   :4                                                                  \n market_segment     distribution_channel is_repeated_guest\n Length:119390      Length:119390        Min.   :0.00000  \n Class :character   Class :character     1st Qu.:0.00000  \n Mode  :character   Mode  :character     Median :0.00000  \n                                         Mean   :0.03191  \n                                         3rd Qu.:0.00000  \n                                         Max.   :1.00000  \n                                                          \n previous_cancellations previous_bookings_not_canceled reserved_room_type\n Min.   : 0.00000       Min.   : 0.0000                Length:119390     \n 1st Qu.: 0.00000       1st Qu.: 0.0000                Class :character  \n Median : 0.00000       Median : 0.0000                Mode  :character  \n Mean   : 0.08712       Mean   : 0.1371                                  \n 3rd Qu.: 0.00000       3rd Qu.: 0.0000                                  \n Max.   :26.00000       Max.   :72.0000                                  \n                                                                         \n assigned_room_type booking_changes   deposit_type          agent          \n Length:119390      Min.   : 0.0000   Length:119390      Length:119390     \n Class :character   1st Qu.: 0.0000   Class :character   Class :character  \n Mode  :character   Median : 0.0000   Mode  :character   Mode  :character  \n                    Mean   : 0.2211                                        \n                    3rd Qu.: 0.0000                                        \n                    Max.   :21.0000                                        \n                                                                           \n   company          days_in_waiting_list customer_type           adr         \n Length:119390      Min.   :  0.000      Length:119390      Min.   :  -6.38  \n Class :character   1st Qu.:  0.000      Class :character   1st Qu.:  69.29  \n Mode  :character   Median :  0.000      Mode  :character   Median :  94.58  \n                    Mean   :  2.321                         Mean   : 101.83  \n                    3rd Qu.:  0.000                         3rd Qu.: 126.00  \n                    Max.   :391.000                         Max.   :5400.00  \n                                                                             \n required_car_parking_spaces total_of_special_requests reservation_status\n Min.   :0.00000             Min.   :0.0000            Length:119390     \n 1st Qu.:0.00000             1st Qu.:0.0000            Class :character  \n Median :0.00000             Median :0.0000            Mode  :character  \n Mean   :0.06252             Mean   :0.5714                              \n 3rd Qu.:0.00000             3rd Qu.:1.0000                              \n Max.   :8.00000             Max.   :5.0000                              \n                                                                         \n reservation_status_date\n Min.   :2014-10-17     \n 1st Qu.:2016-02-01     \n Median :2016-08-07     \n Mean   :2016-07-30     \n 3rd Qu.:2017-02-08     \n Max.   :2017-09-14     \n                        \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nas_tibble(hotel_bookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 32\n   hotel  is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n   <chr>    <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n 1 Resor…       0     342    2015 July         27       1       0       0      2\n 2 Resor…       0     737    2015 July         27       1       0       0      2\n 3 Resor…       0       7    2015 July         27       1       0       1      1\n 4 Resor…       0      13    2015 July         27       1       0       1      1\n 5 Resor…       0      14    2015 July         27       1       0       2      2\n 6 Resor…       0      14    2015 July         27       1       0       2      2\n 7 Resor…       0       0    2015 July         27       1       0       2      2\n 8 Resor…       0       9    2015 July         27       1       0       2      2\n 9 Resor…       1      85    2015 July         27       1       0       3      2\n10 Resor…       1      75    2015 July         27       1       0       3      2\n# … with 119,380 more rows, 22 more variables: children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(hotel_bookings)[1] <- c(\"hotel\")\nunique_hotel <- unique(bird$hotel)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in unique(bird$hotel): object 'bird' not found\n```\n:::\n\n```{.r .cell-code}\nunique_hotel\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'unique_hotel' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(hotel_bookings)[14] <- c(\"country\")\nunique_country <- unique(bird$country)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in unique(bird$country): object 'bird' not found\n```\n:::\n\n```{.r .cell-code}\nunique_country\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'unique_country' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(hotel_bookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390\n```\n:::\n\n```{.r .cell-code}\ncolnames(hotel_bookings)[13] <- c(\"meal\")\nunique_meals <- unique(bird$meal)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in unique(bird$meal): object 'bird' not found\n```\n:::\n\n```{.r .cell-code}\nunique_meals\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'unique_meals' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(hotel_bookings)[15] <- c(\"market_segment\")\nunique_m <- unique(bird$market_segment)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in unique(bird$market_segment): object 'bird' not found\n```\n:::\n\n```{.r .cell-code}\nunique_m\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'unique_m' not found\n```\n:::\n:::\n\n## Provide Grouped Summary Statistics\n\nConduct some exploratory data analysis, using dplyr commands such as `group_by()`, `select()`, `filter()`, and `summarise()`. Find the central tendency (mean, median, mode) and dispersion (standard deviation, mix/max/quantile) for different subgroups within the data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_by_customer_type <- hotel_bookings %>%\n  group_by(customer_type)\ngrouped_by_customer_type %>%\n  summarise(\n    avg_stays_in_week_nights = mean(stays_in_week_nights, nr.rm = TRUE),\n    avg_stays_in_weekend_nights = mean(stays_in_weekend_nights, nr.rm = TRUE), \n    avg_days_in_waiting_list = mean(days_in_waiting_list, nr.rm=TRUE), \n    avg_total_of_special_requests = mean(total_of_special_requests, nr.rm=TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  customer_type   avg_stays_in_week_nights avg_stays_in_weeken…¹ avg_d…² avg_t…³\n  <chr>                              <dbl>                 <dbl>   <dbl>   <dbl>\n1 Contract                            3.85                 1.47   0.0395   0.729\n2 Group                               2.06                 0.825  0.369    0.645\n3 Transient                           2.51                 0.939  1.32     0.632\n4 Transient-Party                     2.26                 0.802  6.32     0.329\n# … with abbreviated variable names ¹​avg_stays_in_weekend_nights,\n#   ²​avg_days_in_waiting_list, ³​avg_total_of_special_requests\n```\n:::\n:::\n\n\n### Explain and Interpret\n\nI chose to group by the type of customers booking the two hotels and found the average days these customers stayed in week and weekend nights, the number of days they had to wait for and their special requests. I chose this group and these values because I think this shows important insights of the trends and patterns of different groups of customers. This type of information can be useful for the hotels to provide better service and maybe tier based prices based on the type of customer. For example, the \"Transient-Party\" customer type typically stay the longest on the waiting list while they stay on weekend nights the least. But we can see that \"Transient\" customers stay more in weekend nights and still have the second highest average days in waiting list. The hotels could try to make a priority queue from their waiting list and prioritise \"Transient\" customers on weekend nights over \"Transient-Party\". This might lead to better customer service and satisfaction.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}