{
  "hash": "ccde3d668c808fca765af08cab29b6d6",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Neeharika Karanam\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"12/02/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xls ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü\n\nI have chosen the dataset eggs_tidy.csv to perform my analysis and help pivot the dataset as required.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Read the eggs dataset and then print the data.\neggs_dataset <- read_csv(\"_data/eggs_tidy.csv\")\n\neggs_dataset\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 √ó 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen extra_l‚Ä¶¬π\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>     <dbl>\n 1 January    2004             126         230                    132       230 \n 2 February   2004             128.        226.                   134.      230 \n 3 March      2004             131         225                    137       230 \n 4 April      2004             131         225                    137       234.\n 5 May        2004             131         225                    137       236 \n 6 June       2004             134.        231.                   137       241 \n 7 July       2004             134.        234.                   137       241 \n 8 August     2004             134.        234.                   137       241 \n 9 September  2004             130.        234.                   136.      241 \n10 October    2004             128.        234.                   136.      241 \n# ‚Ä¶ with 110 more rows, and abbreviated variable name ¬π‚Äãextra_large_dozen\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nNow, let us describe the dataset and perform the analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(eggs_dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    month                year      large_half_dozen  large_dozen   \n Length:120         Min.   :2004   Min.   :126.0    Min.   :225.0  \n Class :character   1st Qu.:2006   1st Qu.:129.4    1st Qu.:233.5  \n Mode  :character   Median :2008   Median :174.5    Median :267.5  \n                    Mean   :2008   Mean   :155.2    Mean   :254.2  \n                    3rd Qu.:2011   3rd Qu.:174.5    3rd Qu.:268.0  \n                    Max.   :2013   Max.   :178.0    Max.   :277.5  \n extra_large_half_dozen extra_large_dozen\n Min.   :132.0          Min.   :230.0    \n 1st Qu.:135.8          1st Qu.:241.5    \n Median :185.5          Median :285.5    \n Mean   :164.2          Mean   :266.8    \n 3rd Qu.:185.5          3rd Qu.:285.5    \n Max.   :188.1          Max.   :290.0    \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(eggs_dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 6\n  month     year large_half_dozen large_dozen extra_large_half_dozen extra_lar‚Ä¶¬π\n  <chr>    <dbl>            <dbl>       <dbl>                  <dbl>       <dbl>\n1 January   2004             126         230                    132         230 \n2 February  2004             128.        226.                   134.        230 \n3 March     2004             131         225                    137         230 \n4 April     2004             131         225                    137         234.\n5 May       2004             131         225                    137         236 \n6 June      2004             134.        231.                   137         241 \n# ‚Ä¶ with abbreviated variable name ¬π‚Äãextra_large_dozen\n```\n:::\n:::\n\n\nFrom the summary of the dataset we can clearly understand that there are 120 rows and 6 columns which consists of the data from 2004-2013 for each and every month of the year(12 months/year). The first two columns gives us the month and the year whereas the rest 4 columns gives us the average price of the size and quantity of the eggs combined. The column names are a combination of the size and the quanity like large_half_dozen, extra_large_half_dozen, large_dozen, extra_large_dozen. I have observed that the average price ranges from 126-290 cents.  \n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#existing rows/cases in the eggs dataset\nnrow(eggs_dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases in the eggs dataset\nncol(eggs_dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases in the eggs dataset after pivoting\nnrow(eggs_dataset) * (ncol(eggs_dataset)-2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\n# expected columns in the eggs dataset after pivoting\n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\n### Description of the final dimensions\n\nIn the dataset I have observed that the dataset has 120 rows and 6 columns and I expect the dataset after pivoting to have the month, year, size of the egg and the quanity of the eggs. In the process of arranging the data in this way it will be extremely easy to observe the changes which are made throughout the year and also the changes during the range of 2004-2013. This will also help understand the differences between the large, extra large eggs as well as whether they were being sold in dozens or half-dozens.\n\nAfter pivoting I expect the resulting dataset to have 4 times longer data than it is at the moment as I want to separate the size-quantity pairing and have individual columns for each and also the size-quantity pairing will have it's own row instead of 4 columns after month and year. I anticipate the total number of columns to be decreased by 1 because I want to remove the 4 size-quantity pairings names and replace them with month, year, size, quantity, average price.\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_longer <- eggs_dataset%>%\n  pivot_longer(cols=contains(\"large\"),\n               names_to = c(\"size\", \"quantity\"),\n               names_sep=\"_\",\n               values_to = \"cost\"\n  )\n\neggs_longer\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 √ó 5\n   month     year size  quantity  cost\n   <chr>    <dbl> <chr> <chr>    <dbl>\n 1 January   2004 large half      126 \n 2 January   2004 large dozen     230 \n 3 January   2004 extra large     132 \n 4 January   2004 extra large     230 \n 5 February  2004 large half      128.\n 6 February  2004 large dozen     226.\n 7 February  2004 extra large     134.\n 8 February  2004 extra large     230 \n 9 March     2004 large half      131 \n10 March     2004 large dozen     225 \n# ‚Ä¶ with 470 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#existing rows/cases after the pivot\nnrow(eggs_longer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases after the pivot\nncol(eggs_longer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\n### Conclusion\n\nAs anticipated, I can observe that the data is 4 times longer than it was and changed from 120 -> 480 and the number of columns has been reduced by 1 from 6 -> 5. This makes us have a single observation per row and helps in easily understand the data and work for the future analysis. I would now like to mutate the cost of the eggs from cents to dollars for better understand ability. The table below gives us the cost of the eggs in dollars very precisely.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Mutate the cost of the eggs from cents to dollars.\n\neggs_USD <- mutate(eggs_longer, \n       avg_USD = cost / 100\n       )%>%\n  select(!contains (\"price\"))\neggs_USD\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 √ó 6\n   month     year size  quantity  cost avg_USD\n   <chr>    <dbl> <chr> <chr>    <dbl>   <dbl>\n 1 January   2004 large half      126     1.26\n 2 January   2004 large dozen     230     2.3 \n 3 January   2004 extra large     132     1.32\n 4 January   2004 extra large     230     2.3 \n 5 February  2004 large half      128.    1.28\n 6 February  2004 large dozen     226.    2.26\n 7 February  2004 extra large     134.    1.34\n 8 February  2004 extra large     230     2.3 \n 9 March     2004 large half      131     1.31\n10 March     2004 large dozen     225     2.25\n# ‚Ä¶ with 470 more rows\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}