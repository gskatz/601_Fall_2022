---
title: "Challenge 3 Instructions"
author: "Meredith Rolfe"
desription: "Tidy Data: Pivoting"
date: "08/17/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
  - animal_weights
  - eggs
  - australian_marriage
  - usa_households
  - sce_labor
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(readxl)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2.  identify what needs to be done to tidy the current data
3.  anticipate the shape of pivoted data
4.  pivot the data into tidy format using `pivot_longer`

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

-   animal_weights.csv ‚≠ê
-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê
-   australian_marriage\*.xls ‚≠ê‚≠ê‚≠ê
-   USA Households\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê
-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü

```{r}
rawData <- read_excel("_data/USA Households by Total Money Income, Race, and Hispanic Origin of Householder 1967 to 2019.xlsx", 
    skip = 2)
View(rawData)

#Trimming top and bottom

trimmedData <- rawData %>%
                slice(3:354)

#renaming cols
columnNames <- c('Year', 'Count','totDistSum','Percentdist_under15','Percentdist15_25','Percentdist25_35','Percentdist35_50','Percentdist50_75','Percentdist75_100','Percentdist100_150','Percentdist150_200', 'Percentdist200andover','MedianIncome_est', 'MedianIncome_MOE', 'MeanIncome_est', 'MeanIncome_MOE')
colnames(trimmedData)<- columnNames





mutatedData <- trimmedData %>% 
                  mutate(Race =NA, .before =1 )


# hate that i am doing this...

mutatedData$Race[1+1] <- "ALL RACES"
mutatedData$Race[57+1] <- "WHITE ALONE"
mutatedData$Race[78+1] <- "WHITE"
mutatedData$Race[114+1] <- "WHITE ALONE, NOT HISPANIC"
mutatedData$Race[135+1] <- "WHITE, NOT HISPANIC"
mutatedData$Race[166+1] <- "BLACK ALONE OR IN COMBINATION"
mutatedData$Race[187+1] <- "BLACK ALONE"
mutatedData$Race[208+1] <- "BLACK"
mutatedData$Race[244+1] <- "ASIAN ALONE OR IN COMBINATION"
mutatedData$Race[265+1] <- "ASIAN ALONE"
mutatedData$Race[286+1] <- "ASIAN AND PACIFIC ISLANDER"
mutatedData$Race[302+1] <- "HISPANIC (ANY RACE)"
mutatedData$Race[265+1] <- "HISPANIC (ANY RACE)"



mutatedData <- mutatedData %>%
  filter(!is.na(Count)) %>%
  fill(Race)


# now cleaning values

mutatedData[mutatedData == 'N']<- NA


mutatedData <- mutatedData %>% 
  mutate(across(Count:MeanIncome_MOE, as.double))



mutatedData <- mutatedData %>%
  mutate(Year =substr(Year,1,4))

round(mutatedData$Percentdist15_25 ,2)


#final tidy DF
mutatedData

# trying to copy over year column to a new column 'Race" conditionally based on the Count column
  # I then planned to fill the race column NAs with previous values


# trimmedData %>%
#   filter(is.na(Count))
# 
# 
# 
# mutatedData <- trimmedData%>%
#                   mutate(Race = 
#                            case_when(Count == NA ~ trimmedData$Year[1]), .before =1)
# 
# mutatedData <- trimmedData%>%
#                   mutate(Race = 
#                            case_when(Count == NA ~ 1), .before =1)
# 
# mutatedData

```

### Briefly describe the data

Describe the data, and be sure to comment on why you are planning to pivot it to make it "tidy"

The data contains information on income, grouped by race for American households from
 as early as 1967 to 2019.
 
My plan to make this data "tidy" is to rename all the columns so that they can be
represented in one header. I will then add a race column which will contain the race for that particular observation. Year will also have its own column.


## Anticipate the End Result

```{r}
# i dont include the percent distribution column
race <- c("value1","value2","value3")
year <- c("value1","value2","value3")
Count <- c("value1","value2","value3")
Percentdist_under15 <- c("value1","value2","value3")
Percentdist15_25 <- c("value1","value2","value3")
Percentdist25_35 <- c("value1","value2","value3")
Percentdist35_50 <- c("value1","value2","value3")
Percentdist50_75 <- c("value1","value2","value3")
Percentdist75_100 <- c("value1","value2","value3")
Percentdist100_150 <- c("value1","value2","value3")
Percentdist150_200 <- c("value1","value2","value3")
Percentdist200andover <- c("value1","value2","value3")

MedianIncome_est <- c("value1","value2","value3")
MedianIncome_MOE <- c("value1","value2","value3")

MeanIncome_est <- c("value1","value2","value3")
MeanIncome_MOE <- c("value1","value2","value3")

sampleDF <- data.frame(race,year,Count,Percentdist_under15,Percentdist15_25,Percentdist25_35,Percentdist35_50,Percentdist50_75,Percentdist75_100,Percentdist100_150,Percentdist150_200,
                       Percentdist200andover,MedianIncome_est,MedianIncome_MOE,MeanIncome_est,MeanIncome_MOE)



sampleDF


```



The first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.

One easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.

Suppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!

### Example: find current and future data dimensions

Lets see if this works with a simple example.

```{r}
#| tbl-cap: Example

df<-tibble(country = rep(c("Mexico", "USA", "France"),2),
           year = rep(c(1980,1990), 3), 
           trade = rep(c("NAFTA", "NAFTA", "EU"),2),
           outgoing = rnorm(6, mean=1000, sd=500),
           incoming = rlogis(6, location=1000, 
                             scale = 400))
df


#updated with my expected values

#existing rows/cases
nrow(rawData)

#existing columns/cases
ncol(rawData)

#expected rows/cases
nrow(rawData)-11 * (ncol(rawData))+1

# expected columns 
(ncol(rawData))+1
```




### Challenge: Describe the final dimensions

Document your work here.

```{r}
sampleDF


```

Any additional comments?


### Challenge: Pivot the Chosen Data

Document your work here. What will a new "case" be once you have pivoted the data? How does it meet requirements for tidy data?

If you wanted to see a side by side of the mean and median income estimates and MOE you could pivot your data as follows.

```{r}

mutatedData <- mutatedData %>% pivot_longer(c(MedianIncome_est,MedianIncome_MOE), names_to = "Median",values_to = "Values_med")

mutatedData <- mutatedData %>% pivot_longer(c(MeanIncome_est,MeanIncome_MOE), names_to = "Mean",values_to = "Values_mean")

mutatedData

```

