---
title: "Challenge 2"
author: "Michaela Bowen"
desription: "Data wrangling: using group() and summarise()"
date: "10/11/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_2
  - railroads
  - hotel_bookings
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```


## Read in the Data

-   railroad\*.csv or StateCounty2012.xls ⭐
-   hotel_bookings.csv ⭐⭐⭐⭐

:::panel-tabset
# RailRoads
Here I have read in the RailRoads Excel File Sheet. Extraneous and empty data has been removed, and Canada had its county named "Canada". 


```{r}
library(readxl)
railroads <-read_excel("_data/StateCounty2012.xls",
                     skip = 4,
                     col_names= c("state", "delete",  "county",
                                  "delete", "employees"))%>%
  select(!contains("delete"))%>%
  filter(!str_detect(state, "Total"))

railroads <-head(railroads, -2)%>%
  mutate(county = ifelse(state=="CANADA", "CANADA", county))

railroads
```

## Describe the data

The variables are named *State*, *County*, and *Employees*. This is likely the data of railroad employees working at counties within the United States. There are 54 distinct "States" which include the District of Columbia and Canada, the other two are likely overseas or military. 

```{r}
#| label: summary
railroads%>%
  summarise(across(c(state,county), n_distinct))


railroads%>%
  select(state)%>%
  unique()

```


Summarizing across both columns we can see there are 54 distinct "states" and 1710 "counties", this means that there are multiple instances of counties throughout the United States, with some states having the same county names as others.

I was also able to determine the entire number of railroad employees across all stations. When grouping by state, we are able to determine how many employees worked at railroad stations by state when this data was collected. I have grouped the data by state, and made it so we can see the total, mean, median, max and min employees by state. We can see in Texas, the state with the largest number of railroad employees, has only 1 employee at the least populated station and 4,235 employees at the most poulated. The average amount of employees at a texas railroad station is about 90 people. 

```{r}
#giving the number of distinct counties and states
railroads%>%
  summarise(across(c(state,county), n_distinct))
#getting the total employees
railroads%>%
  summarize(total_employees = sum(employees))

            
#sum, mean, min, and max employess for each state
railroads%>%
  group_by(state)%>%
  summarize(total_state_employees = sum(employees), mean_employees = mean(employees), min_employees = min(employees), max_employees= max(employees))%>%
  arrange(desc(total_state_employees))

```
# Hotel Bookings

Here I am attempting to read in and glean any information from this DataSet for Practice. Below I have Read in the data, and put it into a summary to better understand the data
```{r}
library(readxl)
library(lubridate)
hotel_bookings <- read_csv("_data/hotel_bookings.csv")
print(summarytools::dfSummary(hotel_bookings,
                        varnumbers = FALSE,
                        plain.ascii  = FALSE, 
                        style        = "grid", 
                        graph.magnif = 0.70, 
                        valid.col    = FALSE),
      method = 'render',
      table.classes = 'table-condensed')
```
Initially after looking throught this data set I thought there was a lot of infomration, but because this is an earlier challenge I wanted to keep it preliminary here and work more with this data set in challenge 4 with the lubridate package

I was able to determine that there are only two hotels in this data set the City Hotel and the Resort Hotel.
Below I was able to determine the average lead time by month for each hotel
```{r}
#Resort Hotel Average lead time by month
hotel_bookings%>%
  group_by(arrival_date_month)%>%
  filter(is_canceled == 0, hotel == "Resort Hotel")%>%
  mutate(avg_lead_time_by_month = mean(lead_time))%>%
  select(hotel, arrival_date_month, avg_lead_time_by_month)%>%
  distinct()

#City Hotel Average lead time by month
hotel_bookings%>%
  group_by(arrival_date_month)%>%
  filter(is_canceled == 0, hotel == "City Hotel")%>%
  mutate(avg_lead_time_by_month = mean(lead_time))%>%
  select(hotel, arrival_date_month, avg_lead_time_by_month)%>%
  distinct()
```


:::

