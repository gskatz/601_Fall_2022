---
title: "HW2"
author: "Lai Wei"
desription: "gain experience with working with external data, dplyr, and the pipe operator."
date: "11/17/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - hw2
  - Lai Wei

---

In this HW, I will use mmr_2015.csv, which is a data set that contains a subset of the (real) data that were used to generate the United Nations Maternal mortality estimates, as published in the year 2015. 

```{r}
#| label: setup
#| warning: false

library(tidyverse)
library(babynames)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
```

## Read Data

Background for  mmr_2015.csv: 
The maternal mortality ratio (MMR) is defined as the number of maternal deaths per 100,000 live births. The UN maternal mortality estimation group produces estimates of the MMR for all countries in the world.

```{r}
mmr <- read.csv("_data/mmr_2015.csv")
mmr
```
Variables in the data set mmr_2015.csv are as follows:

-	Iso = ISO code
-	Name = country name
-	Year = observation year
-	MMR = observed maternal mortality ratio, which is defined as the number of maternal deaths/total number of births*100,000

## Data Visualization

Construct a graph that shows the observed values of the MMR plotted against year (starting in 2000) for China and Viet Nam.Use the pipe operator so that the graph follows from a multi-line command that starts with “mmr %>%”.Use ggplot() to display the data.
```{r}
data_IT <- filter(mmr,country == "China"|country == "Viet Nam",year >= 2000)
ggplot(data = data_IT,aes(x = year,y= mmr))+
  geom_point(aes(group = country,color = country))
```


## Babynames

Babynames package is the Names of male and female babies born in the US from 1880 to 2017.Babynames was filtered to include only those rows with year > 1975, sex equal to male, and either prop > 0.025 or n > 50000.

```{r}
babynames %>% 
  filter(year > 1975, sex == "M",prop > 0.025|n > 50000) %>% 
  ggplot(aes(x = year, y = prop))+
  geom_point(aes(group = name,color = name), size = 2)+
  geom_line(aes(group = name, color = name))+
  expand_limits(y = 0)
```

## Tidy Table

Construct and print a tibble that shows the countries sorted by their average observed MMR (rounded to zero digits), with the country with the highest average MMR listed first.

```{r}
data1<- group_by(mmr,country) %>% 
  summarise_at(vars(mmr),list(name = mean))
  names(data1)[2] = "ave" 
  data1$ave <- round(data1$ave,0)
  arrange(data1,desc(ave))
```

##Continuing with the mmr data set

Part a: For each year
- first calculate the mean observed value for each country. 
- then rank countries by increasing MMR for each year. 

Calculate the mean ranking across all years, extract the mean ranking for 10 countries with the lowest ranking across all years, and print the resulting table. 

```{r}
data2<-
  mmr %>% 
  group_by(year) %>% 
  mutate(Mean = mean(mmr,na.rm = TRUE)) %>% 
  arrange(desc(mmr))
data2
  arrange(data2,desc(Mean)) 
lowest10 <- print(tail(data2,10))
```

Part b: With rankings calculated separately for two periods, with period 1 referring to years < 2000 and period 2 referring to years >= 2000. 

For each period

- first calculate the mean observed value for each country 
- then rank countries by increasing MMR for each period. 

Calculate the mean ranking across all periods, extract the 10 countries with the lowest ranking across all periods, and print the table.

```{r}
before_2000<-mmr %>% 
  filter(year < 2000) %>% 
  group_by(country) %>% 
  mutate(Mean = mean(mmr,na.rm = TRUE)) %>% 
  arrange(desc(mmr))
before_2000
  print(tail(before_2000,10))

after_2000 <- mmr %>% 
  filter(year >= 2000) %>% 
  group_by(country) %>% 
  mutate(Mean = mean(mmr,na.rm = TRUE)) %>% 
  arrange(desc(mmr))
after_2000
  print(tail(after_2000,10))
```