---
title: "Challenge 4 Kristin Abijaoude"
author: "Kristin Abijaoude"
desription: "More data wrangling: pivoting"
date: "10/12/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - kristin_abijaoude
  - challenge4
  - challenge_4
  - fed_rates
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(dplyr)
library(summarytools)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Read in data

```{r}
fedfunds <- read_csv("_data/FedFundsRate.csv")
fedfunds
```

### Briefly describe the data

Today, we are going to analyze the Federal Funds Rate dataset.

Before I get into the dataset itself, let's first learn about what federal fund rates are. According to Investopedia and Business Insider, federal funds rates are rates that banks and credit unions charge each other before borrowing on an non-collateral basis (in other words, as an unsecured loan). The target rates are set by the Federal Open Market Committee, the policymaking body of the Federal Reserve System. This is essential to stabilize economic growth in the US.

In other words, when there is too much growth, the FOMC raise interest rates, which discourages spending, borrowing, and investing; and therefore, reduce inflation and bring economic growth under control.

On the other hand, the FOMC lowers interest rates to encourage spending, borrowing, and investing in order to expand economic power. However, when rates are too low, that opens the door to out-of-control inflation, which leads to reduce purchasing power and undermining economic growth.

In addition to federal funds rates, this dataset also measures inflation rates, unemployment rates, and changes in real GDP in percentages as well.

```{r}
#First, let's dissect the dataset itself

print(dfSummary(fedfunds,
                        varnumbers = FALSE,
                        plain.ascii  = FALSE, 
                        style        = "grid", 
                        graph.magnif = 0.70, 
                        valid.col    = FALSE),
      method = 'render',
      table.classes = 'table-condensed')
```

## Tidy Data (as needed)

### Create the date variable with 'unite()' command

```{r}
#unite year, month, and day column to create a single column for date
fedfunds <- unite(fedfunds, `Year`, `Month`, `Day`, col = "Date YYYY/MM/DD", sep = "/")
fedfunds
```

### Fill in NAs with 'is.na()' command

Here, I fill in the NAs with various values that I believe would make sense to the reader as well as myself. For example, I replace the NAs with the mean (average) in the following variables: federal funds target rate, unemployment rate, and inflation rate. Meanwhile, I replace the NAs with the highest or lowest value in upper and lower federal funds rate columns, as well as real GDP change. I specified the value replacing the NAs in the chunk below.

```{r}
#find the mean of federal funds target rate
mean.fedtarget <- mean(fedfunds$`Federal Funds Target Rate`, na.rm = TRUE)

#the mean
mean.fedtarget
#[1] 5.658415 %

#replace NAs with the mean
fedfunds$`Federal Funds Target Rate`[is.na(fedfunds$`Federal Funds Target Rate`)]<-mean.fedtarget

#replace NAs in upper federal funds target rate with 1
fedfunds$`Federal Funds Upper Target`[is.na(fedfunds$`Federal Funds Upper Target`)] <-1 

#replace NAs in lower federal funds target rate with 0
fedfunds$`Federal Funds Lower Target`[is.na(fedfunds$`Federal Funds Lower Target`)] <-0

#replace NAs in real GDP change with 0
fedfunds$`Real GDP (Percent Change)`[is.na(fedfunds$`Real GDP (Percent Change)`)] <-0

#find the mean of unemployment rate
mean.unemploy <- mean(fedfunds$`Unemployment Rate`, na.rm = TRUE)

#the mean
mean.unemploy
#[1] 5.979122 %

#replace NAs in unemployment rate with the mean
fedfunds$`Unemployment Rate`[is.na(fedfunds$`Real GDP (Percent Change)`)] <- mean.unemploy

#find the mean of inflation rate
mean.inflation <- mean(fedfunds$`Inflation Rate`, na.rm = TRUE)

#the mean
mean.inflation
#3.73338 %

#replae NAs in inflation with mean
fedfunds$`Inflation Rate`[is.na(fedfunds$`Inflation Rate`)] <- mean.inflation

#sanity check!
fedfunds
```

```{r}
fedfundrates <-fedfunds %>% pivot_longer(cols=c(`Effective Federal Funds Rate`, `Real GDP (Percent Change)`,`Inflation Rate`, `Unemployment Rate`),
                    names_to='Factor',
                    values_to='Rate in percentage')%>%
  select(-c(`Federal Funds Target Rate`, `Federal Funds Upper Target`, `Federal Funds Lower Target`))

fedfundrates
```

When I pivot the columns, I end up with 3616 rows!

```{r}
nrow(fedfundrates)
```

## Visualizing Data

```{r}
# create data
dates <- fedfunds$`Date YYYY/MM/DD`
dates <- ymd(dates)
gdp <- fedfunds$`Real GDP (Percent Change)`
unemploy <- fedfunds$`Unemployment Rate`
inflation <- fedfunds$`Inflation Rate`
fedfunds$`Federal Funds Lower Target`

# effective federal fund rate vs unemployment rate chart
ggplot(data = fedfunds, aes(x= `dates`)) + 
  geom_line(aes(y = `Effective Federal Funds Rate`), color = "darkred") +
  geom_line(aes(y = unemploy), color="darkgreen") +
  geom_line(aes(y = `Federal Funds Upper Target`), color="darkblue") +
  geom_line(aes(y= `Federal Funds Target Rate`), color ="purple")+
  geom_line(aes(y = `Federal Funds Lower Target`), color = "black")+
  geom_line(aes(y = inflation), color = "lightseagreen")+
  ylab("Percentages")+
  ggtitle("Effective Federal Funds Rate vfrom 1954 to 2017")

```



Sources:

https://www.investopedia.com/terms/f/federalfundsrate.asp

https://www.businessinsider.com/personal-finance/what-is-the-federal-funds-rate
