---
title: "Challenge 5"
author: "Lai Wei"
description: "Introduction to Visualization"
date: "11/14/2022"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_5
  - railroads
  - cereal
  - air_bnb
  - pathogen_cost
  - australian_marriage
  - public_schools
  - usa_households
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2)  tidy data (as needed, including sanity checks)
3)  mutate variables as needed (including sanity checks)
4)  create at least two univariate visualizations
   - try to make them "publication" ready
   - Explain why you choose the specific graph type
5)  Create at least one bivariate visualization
   - try to make them "publication" ready
   - Explain why you choose the specific graph type

[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.

(be sure to only include the category tags for the data you use!)

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

-   AB_NYC_2019.csv ⭐⭐⭐


```{r}
NYC <- read_csv("_data/AB_NYC_2019.csv") 
NYC
```

### Briefly describe the data

## Tidy Data 

Using colnames() to check columns' names. And there are 15 columns' names in total.And by dim(), getting the dimensions of NYC, there are 261 rows and 16 columns 

```{r}
colnames(NYC)
dim(NYC)
```
We can directly refer to the column, neighbourhood_group by select(). Then we can make a table of neighbourhood_group for easily reading. And proportional table can return the value of occurrence of each value. 

```{r}
select(NYC,neighbourhood_group) %>% table() %>% prop.table() 
``` 

## Univariate Visualizations
```{r}
NYC_Room <- NYC %>% filter(neighbourhood_group == "Bronx") %>%  
  select(host_name,price,room_type) %>% group_by(room_type) %>% 
  summarise(count=n())
NYC_Room
```
From it, we can get the summary of room type in Bronx area, and use ggplot o to show in bar graph. 

```{r}
ggplot(NYC_Room, aes(x = room_type)) + geom_bar(color = "red")
```

