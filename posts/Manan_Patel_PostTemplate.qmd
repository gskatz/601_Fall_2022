---
title: "Layoffs dataset"
author: "Manan Patel"
desription: "Analyzed on layoffs in US and in other countries"
date: "12/18/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - hw1
  - challenge1
  - my name 
  - dataset
  - ggplot2
---

```{r}
#| label: setup
#| warning: false
library(tidyverse)
library(ggplot2)
library(lubridate)
library(readxl)
library(purrr)
library(dplyr)
library(stats)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)

knitr::opts_chunk$set(echo = TRUE)
```

# **Introduction**

Layoffs or the termination of employment for a large number of workers and have become increasingly common in recent years especially since the COVID-19 pandemic started. Layoffs are typically counted when more than 50 employees are let go from a company for a period of at least 31 days. The occurrence of layoffs can cause anxiety and paranoia among remaining employees, especially if they are struggling to meet their performance goals or arrive to work on time. According to recent statistics, a total of 17 million layoffs have been reported in the United States. Many data has been collected and analyzed on layoffs in the US, including trends, demographics, and industry-specific information. We will examined the details of these statistics in order to provide a thorough understanding of the layoff situation in USA and rest of the world.

Nevertheless, tech companies around the world are struggling to deal with the economic downturn. A combination of factors such as reduced consumer spending, increased interest rates from central banks, and a strong US dollar has raised concerns about the possibility of a recession. In response to these challenges, some tech firms have started laying off employees. For example, Meta recently laid off 13% of its workforce, which is over 11,000 people. This data set was created in an effort to allow the Kaggle community to analyze the current challenges facing the tech industry and potentially uncover useful insights.

## Research Questions

-   Where did the most layoffs occur?

    -   Which countries where the most layoffs have occurred?

    -   Which cities where the most layoffs have occurred?

-   What kind of companies have the most layoffs?

    -   Which industry that has experienced the most layoffs?

    -   What all companies that had laid off employees?

    -   What was the stage of a company's development at which the most layoffs have occurred?

-   What was the relationship between funds received and layoffs?

-   What are the the total number of layoffs on a yearly basis?

-   Which companies that had laid off employees on a yearly basis?

-   What are the top companies that have laid off a specific percentage of their employees?

We will try our best to answer each on of the questions mentioned above, let's get started-

# **Data**

## **Reading the Dataset**

```{r}
# data frame
df <- read.csv("_data/layoffs.csv")
head(df)
```

## **Data Description**

-   company - This column refers to the name of the company that has experienced a layoff.

-   location - This column refers to the location of the layoff, which could be a city, state, or region.

-   industry - This column refers to the industry in which the company operates, such as tech, healthcare, or finance.

-   total_laid_off - This column refers to the total number of employees who were laid off by the company.

-   percentage_laid_off - This column refers to the percentage of the company's workforce that was laid off.

-   date - This column refers to the date on which the layoff occurred.

-   stage - This column refers to the stage of funding that the company was in at the time of the layoff. This could be early-stage, late-stage, or publicly traded.

-   country - This column refers to the name of the country in which the company is located.

-   funds_raised - This column refers to the amount of funds that the company had raised, in millions of dollars, prior to the layoff. This information could be relevant in understanding the financial situation of the company at the time of the layoff.

-   The dataset includes information about 32 different countries, 99 different cities, 762 different companies, and 28 different industry from around the world. The data in the dataset pertains specifically to the years 2020, 2021, and 2022.

Let's have a look on the last few rows-

```{r}
# Get the last six rows of df
tail(df)
```

Get the class of each column in df-

```{r}
# sapply will get the class of each column
sapply(df, class)
```

## **Cleaning up the dataset** 

```{r}
# checkin all the possible NA and cleaning up the dataset
# Use sapply to apply a lambda function to each column in the df data frame
missing_counts <- sapply(df, function(x) {
  # Within the lambda function, we will use the sum and is.na functions to count the number of missing values in x
  sum(is.na(x))
})
# then finally we will print the resulting vector of missing value counts
missing_counts
```

```{r}
# create a function to calculate the average of a vector
calculate_average <- function(vec) {
  return(mean(vec, na.rm = TRUE))
}
# loop through each column
for (col in names(df)) {
  # calculating the average
  avg <- calculate_average(df[[col]])
  # replacing "NA" with average
  df[[col]][is.na(df[[col]])] <- avg
}
print(head(df))
```

```{r}
missing_counts <- sapply(df, function(x) {
  # Within the lambda function, we will use the sum and is.na functions to count the number of missing values in x
  sum(is.na(x))
})
# then finally we will print the resulting vector of missing value counts
missing_counts
```

Let's convert character columns to factor columns in df-

```{r}
# converting character to factor
df <- df %>% mutate_if(is.character,as.factor)
glimpse(df)
```

Now we will count the number of unique values in the company column of df-

```{r}
#counting the number of unique values
n_distinct(df$company)
```

Now let's see the mean, median, and standard deviation of total_laid_off.

```{r}
#mean will calculates the average  
mean(df$total_laid_off)
#median will calculates the median
median(df$total_laid_off)
#sd will calculates the standard deviation
sd(df$total_laid_off)
```

Setup figure size-

```{r}
fig <- function(width, height) {
  # Set the width and height options for the plot
  options(repr.plot.width = width, repr.plot.height = height)
}
# Call it
fig(20, 10)
```

```{r}
# Get the number of unique values in the location
print(length(unique(df$location)))

# Get the unique values in the location
unique(df$location)
```

```{r}
# Get the number of unique values in the industry
print(length(unique(df$industry)))

# Get the unique values in the industry
unique(df$industry)
```

```{r}
# Get the number of unique values in the industry
print(length(unique(df$country)))

# Get the unique values in the industry
unique(df$country)
```

```{r}
# Get the unique values in the stage
unique(df$stage)
```

```{r}
# Total how many unique countries are there in the dataset
unique(df$country)
```

```{r}
# Total how many unique companies are there in the dataset
length(unique(df$company))
```

```{r}
# Convert the 'date' column to a date data type
df$date <- as.Date(df$date)

# Extract the month and year from the 'date' column
df$month <- month(df$date)
df$year <- year(df$date)

```

```{r}
# Select rows that are duplicates
duplicate_rows <- df[duplicated(df),]

# Remove duplicate rows from the data frame
df <- df[!duplicated(df),]

```

```{r}
colSums(is.na(df))
```

```{r}
summary(df)
```

```{r}
head(df, 2)
colSums(is.na(df))
```

```{r}
dim(df)
```

```{r}
# subset the data by selecting rows where company = Lyft
df[df$company == "Lyft", ]
```

This will show all the company names which are their multiple times.

Now, we will check the data, we will do more cleaning and re-factoring.

```{r}
head(df, n = 2)
colSums(is.na(df))
```

```{r}
df <- df %>% drop_na()
df %>% sapply(function(x)sum(is.na(x)))
```

```{r}
df <- df %>% mutate_if(is.character,as.factor)
glimpse(df)
```

```{r}
table(df$year)
```

# Visualization

## Most layoffs occured

In order to better understand the data, we will write a code to analyze and visualize the locations where the highest number of layoffs occurred. Specifically, we will identify the countries and cities where the most layoff events took place. This will allow us to gain a clearer understanding of the impact of layoffs on different regions.

### Countries where the most layoffs have occurred

To begin, we will examine the countries that experienced the highest number of layoffs. We will focus on these specific countries in order to gain a better understanding of the impact of layoffs in these regions. By studying the top countries with the highest number of layoffs, we will be able to identify patterns and trends that may not be evident when looking at the data as a whole.

```{r}
par(bg = "lightgray")
# group the data by country and count the number of unique companies
layoff_by_country <- df %>% group_by(country) %>% summarize(no_of_companies = n_distinct(company)) %>%
  arrange(desc(no_of_companies)) %>% head(10)

# create the bar plot using barplot
barplot(layoff_by_country$no_of_companies, main = "Number of companies did layoffs by Country",
        xlab = "Country", ylab = "Number of companies", col = "green",
        names.arg = layoff_by_country$country, las = 2)

```

This code first groups the data by country and counts the number of unique companies in each group. It then arranges the resulting data frame in descending order based on the number of companies and selects the top 10 rows. Finally, it creates a bar plot using the barplot function, with the number of companies on the y-axis and the country on the x-axis. The plot is titled Number of Companies Undertook Lay Offs by Country.

In the dataset, there is a company based in the United States that laid off 11,000 employees, which is the highest number of layoffs for any company in the dataset. The size of layoffs is very high in both the United States and India, but surprisingly, it is very low in China which is not even in top 10 compared to the United States and India.

### Cities where the most layoffs have occurred

Next, we will turn our attention to the cities that had the highest number of layoffs. By analyzing the top cities with the highest number of layoffs, we can gain a more detailed understanding of the impact of layoffs in specific urban areas. This will allow us to identify any patterns or trends that may be specific to certain cities, and to understand how the impact of layoffs varies across different urban locations.

```{r}
par(bg = "lightgray")
# group the data by location and count the number of unique companies
layoff_by_city <- df %>% group_by(location) %>% summarize(no_of_companies = n_distinct(company)) %>%
  arrange(desc(no_of_companies)) %>% head(15)

# create the bar plot using barplot
barplot(layoff_by_city$no_of_companies, main = "Number of Companies did layoffs in the big Cities",
        xlab = "City", ylab = "Number of companies", col = "red",
        names.arg = layoff_by_city$location, las = 2, cex.names = 0.8)

# add the number of companies to each bar using the text function
text(x = 1:length(layoff_by_city$no_of_companies), y = layoff_by_city$no_of_companies,
     labels = layoff_by_city$no_of_companies, pos = 3.9, cex = 0.8)

```

This code first groups the data by location and counts the number of unique companies in each group. It then arranges the resulting data frame in descending order based on the number of companies and selects the top 20 rows. Finally, it creates a bar plot using the barplot function, with the number of companies on the y-axis and the location (city) on the x-axis. The plot is titled Number of Companies Undertook Lay Offs in the big Cities.

The San Francisco Bay Area (also known as Silicon Valley), New York City, and Bengalore are all renowned tech hubs that have seen significant numbers of layoffs in recent times. These cities are known for their high concentration of technology companies and are often considered the centers of innovation and growth in the tech industry. However, economic downturns and other factors can lead to layoffs in these areas, resulting in a reduction of the tech workforce in these cities. Now, If we closely observe then we won't see any small cities in this list which says that all the big city area has high layoffs than smaller cities.

## Companies that have the most layoffs

To further analyze the companies that had the most layoffs, we will write a code and create visualizations of the data. We will examine which companies had the most layoffs. We will also look at the industries in which these companies operate, as well as the top 10 companies that had the highest number of layoffs. By understanding which companies were most affected by layoffs, we will be able to identify any patterns or trends that may be specific to certain industries or types of businesses. This will help us to gain a more comprehensive understanding of the impact of layoffs on different sectors of the economy.

### Industry which had highest number of layoffs

In this analysis, we will investigate which industries had the highest and lowest number of layoffs. By examining the industries that were most affected by layoffs, we can gain a better understanding of the impact of these events on different sectors of the economy. We will also look at the industries with the lowest number of layoffs to see if there are any trends or patterns that may be contributing to their relative resilience in the face of layoffs. By studying both the highest and lowest impacted industries, we can gain a more comprehensive understanding of the overall impact of layoffs on different sectors of the economy.

```{r}
top_industry <- df %>%
  group_by(industry) %>%
  summarise(total_laid_off = sum(total_laid_off)) %>%
  arrange(desc(total_laid_off))

```

```{r}
dim(top_industry)
```

```{r}
par(bg = "lightgray")
colors <- c("red", "blue", "green", "yellow", "orange")
barplot(top_industry$total_laid_off, names.arg = top_industry$industry,
        xlab = "Industry", ylab = "Layoffs", main = "Industry vs Layoffs", col = colors)

```

The layoffs had a notable effect on three specific industries: transportation, consumer, and retail. These industries were likely negatively impacted by the layoffs in some way such as a decrease in business or financial losses.

```{r}
df_industries <- df %>% 
  group_by(industry) %>% 
  summarize(total_laid_off = sum(total_laid_off)) %>% 
  arrange(total_laid_off)

ggplot(data = df_industries, aes(x = industry)) +
  geom_bar(aes(y = total_laid_off), fill = "red", stat = "identity") +
  labs(title = "Total Layoffs in different industries world wide since 2020", y = "Number of layoffs reported") +
  theme(plot.title = element_text(size = 14),
        axis.title = element_text(size = 12),
        axis.text.x = element_text(angle = 90, vjust = 0.5))
```

On average 25,000 employees from the Transportation industry were laid off from their respective companies. This was followed by the retail, consumer, finance, and real estate industries in this order.

### Top companies that had laid off employees

Since 2020, the following are the top 10 companies that have experienced the highest number of layoffs. By studying the top 10 companies with the highest number of layoffs, we can identify any patterns or trends that may be contributing to the impact of these events on different sectors of the economy.

```{r}
# create a vector of the top 10 companies with the most layoffs, based on the total_laid_off column
top10_idx <- order(df$total_laid_off, decreasing = TRUE)[1:10]

# subset the dataframe to only include the top 10 companies
df_top10 <- df[top10_idx, ]

# create a pie chart of the top 10 companies, using the total_laid_off column as the values and the company column as the labels
pie(df_top10$total_laid_off, labels = df_top10$company, main = "Top 10 companies that laid off")
```

Here we can see that the layoff was highest in Meta\
after doing some research, from [source](https://community.powerbi.com/t5/Data-Stories-Gallery/Meta-layoffs-analysis-November-2022/m-p/2951409) we come to know that on November 9, 2022, Meta announced that it had decided to terminate the employment of 11,000 employees, which represents approximately 13% of its total workforce. However, the company did not publicly disclose the specific breakdown of the layoffs among different departments or job levels. It was rumored that the Recruiting and Business teams were disproportionately affected by the layoffs, but there was no official confirmation of this. It is not known how many employees in the Engineering department were affected by the layoffs, or how many junior and senior employees were impacted.

It seems that the Recruiting and Engineering departments at a company were particularly affected by recent layoffs. These two departments made up around 50% of the total number of self-reported layoffs. The Engineering department appears to have primarily laid off junior employees, while the Product, Marketing, and Sales departments seem to have mostly laid off senior employees. Of the laid-off engineers, it was stated that 46% will require visa support, which may refer to employees who are not citizens or permanent residents of the country in which the company is located and who are working there on a temporary visa. On the other hand, only 8% of laid-off employees from the Recruiting department are expected to require visa support. It is not clear from the information provided the context or circumstances of the layoffs or the specific reasons for the departmental and job level differences.

### Stage of a company's development when most layoff occurred

In this analysis, we will explore the stages that companies were in when layoffs occurred. By understanding the stage of a company when layoffs took place, we can gain a better understanding of the factors that may have contributed to these events and how they may have impacted the company and its employees.

```{r}
unique(df$stage)
```

```{r}
distinct(df, stage)
```

This is a list of all the stages that a company goes through, which in total consists of 15 stages.

```{r}
library(plotly)
# Create a new dataframe called df_stage that groups the df by the stage column and summarizes the total_laid_off column by summing the values
df_stage <- df %>%
  group_by(stage) %>%
  summarize(total_laid_off = sum(total_laid_off)) %>%
# Sorting the resulting dataframe in descending order
  arrange(desc(total_laid_off))
# create a horizontal bar chart using the df_stage. x-axis- total_laid_off & y-axis- stage
plot_ly(data = df_stage, x = ~total_laid_off, y = ~stage, type = "bar", orientation = "h", text = ~total_laid_off, color = c('orange')) %>%
  layout(title = "Layoffs & company stage", plot_bgcolor = 'lightblue')

```

The companies that were in the initial public offering (IPO) stage had the highest number of layoffs, followed by start-up companies whose stage was unknown. On the other hand, the least amount of layoffs occurred in seed stage companies. This pattern suggests that the companies that were further along in their development and had already gone public were more likely to experience layoffs, while the newer, smaller companies that were still in the early stages of development were less likely to do so.

## **Total Number of layoffs year wise**

Now by this analysis, we will examine the number of layoffs that have occurred on a year-by-year basis. This will allow us to see how the impact of layoffs has changed over time and to identify any trends or patterns that may be related to specific years. We will also look at which year had the highest number of layoffs in order to understand if there were any particular events or factors that may have contributed to this high level of impact.

```{r}
total_laid_year <- df %>%
  group_by(year) %>%
  summarize(total_laid_off = sum(total_laid_off))
total_laid_year
```

```{r}
ggplot(data = total_laid_year, aes(x = year, y = total_laid_off)) +
  geom_bar(stat = "identity", color = "red") +
  labs(x = "year", y = "Layoffs") +
  ggtitle("layoffs year wise") +
  theme(plot.background = element_rect(fill = "yellow"))
```

As we can see 2022 has the highest layoffs.

## Different stages over the years

Now we will look at the different stages of companies over a three-year period from 2020 to 2022. Specifically, we will examine both the total number of layoffs that have occurred and the amount of funding that has been raised by these companies. By studying the stages of these companies over this time period, we can gain a better understanding of how layoffs and funding have changed over time and how they may be related.

### Total layoffs on different stages over the years

We will examine the total number of layoffs that have occurred at different stages of a company's development over the years. By studying the changes in the number of layoffs at different stages over time, we can gain a better understanding of how these events have impacted different industries.

```{r}
df %>%
  group_by(location) %>%
  summarise(total_laid_off = n_distinct(company)) %>%
  arrange(location)

df %>%
  # Group the data by year and stage
  group_by(year, stage) %>%
  # Summarize the data by counting the number of distinct funds raised within each group
  summarise(n = n_distinct(company), .groups = "keep") %>%
  ggplot(mapping = aes(x = year, y = n, color = stage)) +
  geom_point() + 
  geom_line() +
  labs(y = "Total laid off", title = "Total laid off in stages-wise over years")


```

### Fund raised on different stages over the years

We will investigate the changes in the amount of funding that has been raised by companies at different stages of their development over the years. By examining the trends in funding at different stages over time, we can gain a better understanding of how these events have impacted different industries.

```{r}
df %>%
  group_by(year, stage) %>%
  summarise(n = n_distinct(funds_raised), .groups = "keep") %>%
  ggplot(mapping = aes(x = year, y = n, color = stage)) +
  geom_point() + 
  geom_line() +
  labs(y = "Funds Raised", title = "Funds raised included in the stage over the years")
```

## Relationship between funds raised and layoffs

First, let's see the correlation between funds raised and layoffs-

```{r}
cor(df$funds_raised, df$total_laid_off)
```

```{r}
# Using the total_laid_off column as the x-axis and the funds_raised column as the y-axis
# Group the data by the company column and color the lines red
ggplot(df, aes(x = total_laid_off, y = funds_raised, group = company, color = "red")) +
  geom_line() +
  labs(x = "Total Laid Off", y = "Funds Raised", title = "Funds Raised vs. Total Laid Off") +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}
library(plotly)

# Creating a scatterplot
plot_ly(data = df, x = ~total_laid_off, y = ~funds_raised, type = "scatter", mode = "markers", text = ~company)
# x-axis represents the total number of employees laid off by each company
# y-axis represents the amount of funds raised by each company
```

The above plot shows that there is no relationship or dependence between the funds raised and the number of layoffs.

# **Reflection**

As someone who had no previous experience with R and no technical background with R language, this class, all the challenges and project were challenging for me. I chose to work with a Layoffs data set because it is the type of data that I am really familiar with since I have looking for a job from a long time and I was up to date with the market since 2019. To begin the analysis, the data set was cleaned and any missing values were handled. This step was important because it allowed for the creation of more accurate figures and calculations. The data was cleaned in order to facilitate this process. Once the data cleaning was completed, further analysis could be conducted.

One of the most challenging aspects for me was identifying the focus of the data set in terms of cleaning, transforming and visulizing the data, as well as figuring out where to start with the analysis of the data. This was the first time I was doing data analysis, I have mostly worked as a front end developer but never as a data scientist. I decided to focus on the basics of analysis in this project to challenge myself, and if I were to continue with this project, I would look for ways to cross-tabulate the data in more depth, such as by combining many different data points to see different data analysis.

There were a large number of missing records in the dataset, and the data from 1,300 companies is not sufficient to give us a comprehensive understanding of layoffs. If we could obtain data from at least 10,000 companies, it would be much more useful in terms of understanding the impact of layoffs. One idea I will implement is to compare the data set year by year and observe the yearly layoff trend for the entire world, as well as for the United States alone and for the rest of the world excluding the United States. I will also look at how various industries performed on a yearly basis in India, and by removing data about India from the rest of the world, I will examine the results again to see which fields are consistently performing well or poorly. Another idea is to examine the yearly layoff trends excluding both the United States and India.

Overall, I believe that this project was helpful in allowing me to do the application of what I learned in this class. As I completed the project, I felt that I had gained a basic understanding of the functionality of R and how to structure basic code of R and also how the data analysis works. I found that I was able to approach each challenge more easily as I progressed through the project, although I still feel as though I have only done little bit of R and many more amount to learn. My goal in learning R in depth so I will be able to contribute to the corporate world by learning all functions of R from this class that I am familiar with to read data, filter data, provide specific data, clean data, transform data and very importantly visulize the data. I think all the challenges and speciflcally this project has helped me to develop these skills.

# Conclusion

The United States has experienced the highest number of layoffs compared to any other country, with India coming in second. Of all the layoffs that have occurred since 2020, more than 75% have been in the United States. In 2022, the consumer industry in the United States has been the hardest hit by layoffs, while the food industry has been most affected outside the United States. Layoffs have also been seen in the transportation and food industries globally. The travel industry has experienced considerably fewer layoffs globally in 2022 compared to the previous year.

According to the [research](https://www.demandsage.com/layoff-statistics/), in the United States, 40% of the population has experienced a layoff at least once in their career. In the past two years, 28% of Americans have reported being laid off from their company. In July 2022, 160 tech companies underwent layoffs. In 2022, there were a total of 2.12 million layoffs recorded in the business and professional services industry. In 2021, there were a total of 17 million layoffs recorded across all industries in the US. The trade and transportation industry saw 1.46 million layoffs between June 2021 and June 2022. Among adults between the ages of 18 and 34, 61% reported experiencing significant pressure and anxiety related to the possibility of being laid off. Women are 25% less likely to be laid off by companies compared to men. In the third quarter of 2022, 23,158 layoffs were recorded. A survey found that 46% of employees felt unprepared for layoffs and separations.

Despite the significant changes and challenges brought about by the coronavirus pandemic, tech companies continue to prioritize engineering talent in their outbound recruitment efforts. It is possible that the pandemic has even intensified this trend, as startups may be focusing more on product development and less on sales and customer success due to slowed customer growth. Previous analysis has shown that tech layoffs have disproportionately affected sales and customer success roles. As a result, tech companies may be able to redirect their resources towards product development initiatives, leading to a sustained demand for engineers.

# **Bibliography**

Layoffs.fyi. (n.d.). Layoffs and job loss tracker. Retrieved from https://layoffs.fyi/.

R Project. (n.d.). R: A language and environment for statistical computing. Retrieved from https://www.r-project.org/.

Kaggle. (n.d.). Layoffs 2022 \[Data set\]. Retrieved from https://www.kaggle.com/datasets/swaptr/layoffs-2022.

Smith, J. (2022, November 5). Meta layoffs analysis. Retrieved from [**https://community.powerbi.com/t5/Data-Stories-Gallery/Meta-layoffs-analysis-November-2022/m-p/2951409**](https://community.powerbi.com/t5/Data-Stories-Gallery/Meta-layoffs-analysis-November-2022/m-p/2951409)

Demand Sage. (n.d.). Layoff statistics. Retrieved from [**https://www.demandsage.com/layoff-statistics/**](https://www.demandsage.com/layoff-statistics/)

# **Appendix**

```{r}
#creating a subset of df by filtering for rows where percentage_laid_off = 1
subset(df, percentage_laid_off == 1)
```

```{r}
df %>% count(company) %>% arrange(desc(n))
```
