---
title: "Challenge 3"
author: "Jack Sniezek"
desription: "Tidy Data: Pivoting"
date: "12/1/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
  - animal_weights
  - eggs
  - australian_marriage
  - usa_households
  - sce_labor
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2.  identify what needs to be done to tidy the current data
3.  anticipate the shape of pivoted data
4.  pivot the data into tidy format using `pivot_longer`

## Read in data

-   eggs_tidy.csv ⭐⭐ 

```{r}
eggs <- read_csv("_data/eggs_tidy.csv")%>%
    rename("xlarge_halfdozen" = "extra_large_half_dozen", 
         "xlarge_dozen" = "extra_large_dozen", 
         "large_halfdozen" = "large_half_dozen")
eggs
summary(eggs)

```

## Briefly describe the data

After reading in the eggs dataset, I can see that there are 120 rows that contain each month from 2004-2013. There are 6 columns that represent the month and year, as well as average egg prices for 4 types/quantities of eggs.

On the read in, I also renamed the columns to keep the size and quantity of eggs separate, which will help me pivot the data.

## Anticipate the End Result

Right now the data consists of 6 columns, 4 of which contain values and 2 categorize the data. To make the data easier to work with, I want to make one column with values(Price) and add a column for size and quantity of eggs. So, my new matrix will contain the month, year, size, quantity, and price. I also anticipate that there will be 480 rows, as I will be putting all the price values into one column (120 months x 4 price variables).

## Pivot the Data

```{r}

eggs_longer <- eggs %>%
   pivot_longer(cols = contains("large"),
               names_to = c("size", "quantity"),
               names_sep = "_",
               values_to = "price")

eggs_longer

```


The data matches my prediction, as I now have 480 rows and 5 columns. The data is now organized so that there is one column that contains all the price values.