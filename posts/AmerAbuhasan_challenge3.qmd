---
title: "Challenge 3 Instructions"
author: "Amer Abuhasan"
desription: "Tidy Data: Pivoting"
date: "08/17/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
  - animal_weights
  - eggs
  - australian_marriage
  - usa_households
  - sce_labor
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)

```

## Challenge Overview

Today's challenge is to:

1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2.  identify what needs to be done to tidy the current data
3.  anticipate the shape of pivoted data
4.  pivot the data into tidy format using `pivot_longer`

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

-   animal_weights.csv ‚≠ê
-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê
-   australian_marriage\*.xls ‚≠ê‚≠ê‚≠ê
-   USA Households\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê
-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü

```{r}
library(readr)
 eggs<- read_csv("_data/eggs_tidy.csv")
eggs

# Data set of large and extra large in one column 

eggs_long<-eggs%>%
  pivot_longer(cols=contains("large"), 
               names_to = "eggType",
               values_to = "avgPrice"
  )

eggs_long<- eggs_long%>%
  mutate(size = case_when(startsWith(eggType, "extra")~"extra_large",startsWith(eggType, "large")~"large"))




#boxplot for large eggs and there weights 
ggplot(eggs_long, aes(x=size, y=avgPrice, col=size)) + geom_boxplot()


#boxplot + Facet grid for large eggs by year and weight 
ggplot(large, aes(x="", y=weight)) + geom_boxplot()+ facet_grid(large~year)

#egg count per month 
eggs %>% 
  count(month)
#egg count per year 
eggs %>%
  count(year)

```

### Briefly describe the data

the data contained in the first code is a pivot to tidy the table and to select avg price of the values. 

#second code 
The second code is creating a boxplot diagram for the large eggs and the weights 

#the third code 
Includes a facet grid for all years by egg weights for large eggs 

#4th code 
For count of eggs per month 

#5th code 
Count of eggs per year 





## Anticipate the End Result

The first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.

One easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.

Suppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!

### Example: find current and future data dimensions

Lets see if this works with a simple example.

```{r}
#| tbl-cap: Example

df

df<-tibble(eggs = rep(c("large", "extra_large", "year"),2),
           year = rep(c(2004,2013), 3), 
           trade = rep(c(),2),
           outgoing = rnorm(6, mean=1000, sd=500),
           incoming = rlogis(6, location=1000, 
                             scale = 400))
df
#existing rows/cases
nrow(df)

#existing columns/cases
ncol(df)

#expected rows/cases
nrow(df) * (ncol(df)-3)

# expected columns 
3 + 2
```

Or simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.

### Challenge: Describe the final dimensions

Document your work here.

```{r}


```

Any additional comments?

## Pivot the Data

Now we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a "sanity" check.

### Example

```{r}
#| tbl-cap: Pivoted Example

df<-pivot_longer(df, col = c(outgoing, incoming),
                 names_to="trade_direction",
                 values_to = "trade_value")
df
```

Yes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!

### Challenge: Pivot the Chosen Data

Document your work here. What will a new "case" be once you have pivoted the data? How does it meet requirements for tidy data?
Any additional comments?
