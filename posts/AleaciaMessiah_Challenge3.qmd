---
title: "Challenge 3"
author: "Aleacia Messiah"
desription: "Tidy Data: Pivoting"
date: "09/26/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_3
  - Aleacia Messiah
  - australian_marriage
  - tidyverse
  - readxl
  - summarytools
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(readxl)
library(summarytools)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2.  identify what needs to be done to tidy the current data
3.  anticipate the shape of pivoted data
4.  pivot the data into tidy format using `pivot_longer`

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

-   animal_weights.csv ⭐
-   eggs_tidy.csv ⭐⭐ or organiceggpoultry.xls ⭐⭐⭐
-   australian_marriage\*.xls ⭐⭐⭐
-   USA Households\*.xlsx ⭐⭐⭐⭐
-   sce_labor_chart_data_public.xlsx 🌟🌟🌟🌟🌟

```{r}
# read in the Table 2 sheet in the dataset marriage, removing the first 7 rows
table2 <- read_excel("_data/australian_marriage_law_postal_survey_2017_-_response_final.xls", sheet = "Table 2", col_names = c("Divisions", "Response_Clear_Yes", "Response_Clear_Yes_Percent", "Response_Clear_No", "Response_Clear_No_Percent", "Response_Clear_Total", "Response_Clear_Total_Percent", "delete", "Eligible_Response_Clear", "Eligible_Response_Clear_Percent", "Eligible_Response_Not_Clear", "Eligible_Response_Not_Clear_Percent", "Eligible_Response_Non_Responding", "Eligible_Response_Non_Responding_Percent", "Eligible_Response_Total", "Eligible_Response_Total_Percent"), skip = 7)                    
# view the first 6 rows of Table 2 
head(table2)
# remove rows with totals and NAs
table2 <- table2[-c(1, 49:51, 89:91, 122:124, 136:138, 155:157, 163:165, 168:170, 173:184),]
# remove the "delete" column with NAs
table2 <- select(table2, !contains("delete"))
# remove columns with totals
table2 <- select(table2, !contains("Total") & !contains("Percent"))
# view a summary of Table 2
dfSummary(table2)
```

### Briefly describe the data

Describe the data, and be sure to comment on why you are planning to pivot it to make it "tidy"

Looking at the dataset, we can see this dataset is data collected from an Australian Marriage Law Postal Survey in which each observation is the Federal Electoral Division and the variables are clear affirmative responses, clear negative responses, clear eligible participants' responses, not clear eligible participants' responses, and non-responding eligible participants' responses. Most of these variables such as the divisions variable have 150 distinct values (i.e. 150 distinct divisions). The data is current as of August 24, 2017 and there are some variables that include blank responses and more territories listed in the explanatory notes. There are some variables that can be condensed to make it easier to analyze so it is necessary to use pivot functions to make it tidy. 

## Anticipate the End Result

The first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.

One easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.

Suppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!

### Example: find current and future data dimensions

Lets see if this works with a simple example.

```{r}
#| tbl-cap: Example

df<-tibble(country = rep(c("Mexico", "USA", "France"),2),
           year = rep(c(1980,1990), 3), 
           trade = rep(c("NAFTA", "NAFTA", "EU"),2),
           outgoing = rnorm(6, mean=1000, sd=500),
           incoming = rlogis(6, location=1000, 
                             scale = 400))
df

#existing rows/cases
nrow(df)

#existing columns/cases
ncol(df)

#expected rows/cases
nrow(df) * (ncol(df)-3)

# expected columns 
3 + 2
```

Our simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.

### Challenge: Describe the final dimensions

Document your work here.

```{r}
# view the number of current rows/observations in Table 2
nrow(table2)
# view the number of current columns/variables in Table 2
ncol(table2)
# find the expected number of rows/observations in Table 2
nrow(table2) * (ncol(table2)-1)
# find the expected number of columns/variables in Table 2
ncol(table2)-3
```

Any additional comments?

The current number of rows in Table 2 is 150 while the current number of columns is 6. There should be 750 rows and 3 columns in the pivoted dataset since the five response columns will be consolidated into rows. 

## Pivot the Data

Now we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a "sanity" check.

### Example

```{r}
#| tbl-cap: Pivoted Example

df<-pivot_longer(df, col = c(outgoing, incoming),
                 names_to="trade_direction",
                 values_to = "trade_value")
df
```

Yes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!

### Challenge: Pivot the Chosen Data

Document your work here. What will a new "case" be once you have pivoted the data? How does it meet requirements for tidy data?

```{r}
table2_new <- pivot_longer(table2, col = c(Response_Clear_Yes, Response_Clear_No, Eligible_Response_Clear, Eligible_Response_Not_Clear, Eligible_Response_Non_Responding), names_to = "Type_of_Response", values_to = "No_of_Responses")
table2_new
```

Any additional comments?

The new observations represent the type of response (clear, not clear, or non-responding) and how many responses were captured for that type for each division. This new dataset meets the requirements of tidy data in that each variable (division, type of response, and number of responses) is in a column, each observation is in a row, and the values are in the cells.