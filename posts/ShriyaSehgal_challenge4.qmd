---
title: "Challenge 4"
author: "Shriya"
desription: "More data wrangling: pivoting"
date: "11/27/2022"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_4
  - abc_poll
  - eggs
  - fed_rates
  - hotel_bookings
  - debt
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(lubridate)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2)  tidy data (as needed, including sanity checks)
3)  identify variables that need to be mutated
4)  mutate variables and sanity check all mutations

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

-   abc_poll.csv ⭐
-   poultry_tidy.xlsx or organiceggpoultry.xls⭐⭐
-   FedFundsRate.csv⭐⭐⭐
-   hotel_bookings.csv⭐⭐⭐⭐
-   debt_in_trillions.xlsx ⭐⭐⭐⭐⭐

```{r}
dataset <- read_csv("_data/hotel_bookings.csv", show_col_types = FALSE)
dataset

```

### Briefly describe the data

The above dataset consists data from primarily 2 different hotels 'City Hotel' and 'Resort Hotel' and has 119390 rows and 31 columns. Each row contains the information about the customer booking like customer type reservation status, number of adults/children/babies in the room, arrival date, stay days. 

## Tidy Data (as needed)

The data can be tidied up in the following way

```{r}
table(dataset$country)

```

As there is NULL value in the country column, it can be removed.

```{r}
dataset <- dataset %>% 
  filter(!(country == "NULL"))
```

```{r}
#Class of each column in the dataset.
sapply(dataset, class)
```

Agents and Company have numerical values but their classes are described as character. Hence, the NULL can be modified to NA and the column can be modified to the numerical value. 
Arrival date in year, month and day can be combined into a single field arrival date.


## Identify variables that need to be mutated
Some variables that can be mutated.


```{r}
#Mutating arrival date into a single field
#finding the total number guests.
dataset_mutate <- dataset %>% 
  mutate(arrival_date = str_c(arrival_date_day_of_month,
                              arrival_date_month,
                              arrival_date_year, sep="/"),
         arrival_date = dmy(arrival_date),
         total_guests = adults + children + babies) %>% 
  select(-c(arrival_date_day_of_month,arrival_date_month,arrival_date_year))
dataset_mutate
```

```{r}
summary(dataset_mutate$arrival_date)
```


We can see that the arrival date mostly lie between the July 2015- August 2017. 


As described above, the type of the agent and company can be changed from character to numeric.


```{r}
#Mutating the class of the agent and company field from character to numeric
dataset_mutate <- dataset_mutate %>%
  mutate(across(c(agent, company),~ replace(.,str_detect(., "NULL"), NA))) %>% mutate_at(vars(agent, company),as.numeric)

```

Is agent field numeric?
```{r}
is.numeric(dataset_mutate$agent)
```
Is company field numeric?
```{r}
is.numeric(dataset_mutate$company)
```

