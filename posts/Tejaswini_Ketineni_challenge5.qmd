---
title: "Challenge 5 Solutions"
author: "Tejaswini Ketineni"
date: "11/17/2022"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

## Read in data


```{r}
AB_NYC_2019 <- read_csv("_data/AB_NYC_2019.csv")
```

### Briefly describe the data

## Tidy Data (as needed)

Is your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.

Initially viewing the data

```{r}
head(AB_NYC_2019)
```
```{r}
colnames(AB_NYC_2019)
```

```{r}
nrow(AB_NYC_2019)
```

```{r}
ncol(AB_NYC_2019)
```
```{r}
dim(AB_NYC_2019)
```
The data set contains of 48895 rows and about 16 columns

```{r}
library(skimr)
library(dplyr)
skim(AB_NYC_2019)
```
We use skimr to understand about the data set- as per the results, we see that there are about 10 columns with numeric type of data, 5 columns which are of character data_type and one date kind of column.we see there are certain missing values in name(16),host_name(21) in character data type;
The highest number of missing data is observed in reviews_per_month and last_review.

```{r}
summary(AB_NYC_2019)
```
```{r}
airbnb <- AB_NYC_2019 
```

```{r}
airbnb %>%
  count(`room_type`)
  
```
```{r}
airbnb %>% 
  select(neighbourhood_group,neighbourhood, price)  %>% 
  group_by(neighbourhood_group) %>% 
  summarize(mean_price = mean(price),max_price = max(price),min_price = min(price),median_price=median(price))
```

We now observe that the highest mean_price is the highest in the neighbourhood of Manhattan and lowest in Bronx.

```{r}
airbnb %>% 
  select(neighbourhood_group,neighbourhood, price)  %>% 
  group_by(neighbourhood_group) %>% 
  summarize(mean_price = mean(price),max_price = max(price),min_price = min(price),median_price=median(price))
```

```{r}
airbnb %>% 
  select(neighbourhood_group)  %>% 
  group_by(neighbourhood_group) %>% 
  count(neighbourhood_group) %>%
  slice(which.max(n))
```

we see that there are higher bookings in Manhattan and the lowest in Staten Island

```{r}
airbnb %>% 
  count(`minimum_nights`)
```


```{r}
airbnb %>% 
  select(neighbourhood_group,minimum_nights)  %>% 
  group_by(neighbourhood_group) %>% 
  count(minimum_nights) %>%
  slice(which.max(n))
```

```{r}
airbnb %>% 
  select(neighbourhood_group,minimum_nights)  %>% 
  group_by(neighbourhood_group) %>% 
  count(minimum_nights) %>%
  slice(which.min(n))
```

We observe that there are more number of bookings for one or two nights in all the neighbourhoods

## Univariate Visualizations

In order to understand the count distribution for each of the neighborhood group we use bar graph.
```{r}
ggplot(airbnb, aes(x = neighbourhood_group)) + 
  geom_bar(fill = "lightblue") + 
  labs(title = "Neighbourhood Group count", x = "Neighbourhood Group", 
     y = "Count") + 
  theme_bw()
```

```{r}
ggplot(airbnb, aes(x = room_type)) + 
  geom_bar(fill = "lightpink") + 
  labs(title = "Room type and count", x = "Neighborhood Group", 
     y = "Count") + 
  theme_bw()
```

```{r}
ggplot(airbnb, aes(x = price)) + 
  geom_histogram(binwidth=20,alpha=0.6,fill = "purple") + 
  labs(title = "Price range and count", x = "Price", 
     y = "Count") + 
  theme_bw()
```
we see that the high distribution is observed for room prices of 500

## Bivariate Visualization(s)

```{r}
ggplot(airbnb, aes(x = neighbourhood_group, fill = room_type)) + 
  geom_bar(bins = 25) + 
  labs(title = "neighbourhood_group and Room Type", x = "neighbourhood_group", y = "Frequency", 
     fill = guide_legend("room_type")) + 
  theme_bw()
```

```{r}
ggplot(airbnb, aes(x = price, fill = neighbourhood_group)) + 
  geom_histogram(bins = 25) + xlim(0,1000)
  labs(title = "neighbourhood_group and Price", x = "price", y = "Frequency", 
     fill = guide_legend("neighbourhood_group")) + 
  theme_bw()
```

```{r}
ggplot(airbnb, aes(x = minimum_nights, y = price,na.rm = TRUE)) +
  geom_point(color="lightblue") +
  scale_y_continuous(label = scales::dollar) +
  labs(x = "Minium Nights",
       y = "Price Per Night ($)",
       title = "Minimum Nights vs Price Per Night ($)")
```

The above graph shows the price entry distribution for the nights of stay.



